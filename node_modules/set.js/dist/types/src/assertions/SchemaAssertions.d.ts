export declare class SchemaAssertions {
    private validator;
    constructor();
    /**
     * Throws if a given input is not a valid Ethereum Address.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidAddress(variableName: string, value: any): void;
    /**
     * Throws if a given array of inputs is not a valid Ethereum Address.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidAddressList(variableName: string, values: string[]): void;
    /**
     * Throws if a given input is not a valid 32 Byte String.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidBytes32(variableName: string, value: any): void;
    /**
     * Throws if a given input is not a valid Byte String.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidBytes(variableName: string, value: any): void;
    /**
     * Throws if a given input is not a number.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidNumber(variableName: string, value: any): void;
    /**
     * Throws if a given input is not a whole number.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    IsValidWholeNumber(variableName: string, value: any): void;
    /**
     * Throws if a given input is not a native JS number.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidJsNumber(variableName: string, value: any): void;
    /**
     * Throws if a given input is not a string.
     *
     * @param variableName    Variable name being validated. Used for displaying error messages.
     * @param value           Value being validated.
     */
    isValidString(variableName: string, value: any): void;
    private assertConformsToSchema;
}
