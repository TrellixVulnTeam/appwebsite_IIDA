import { SetJSConfig } from './types';
import { BlockchainAPI, ERC20API, FeeAPI, IssuanceAPI, SetTokenAPI, SystemAPI, TradeAPI, NavIssuanceAPI, PriceOracleAPI, DebtIssuanceAPI, DebtIssuanceV2API } from './api/index';
/**
 * @title Set
 * @author Set Protocol
 *
 * The Set class that exposes all functionality for interacting with the Set smart contracts. Methods
 * that require interaction with the Ethereum blockchain are exposed after instantiating a new instance
 * of Set with the web3 provider argument
 */
declare class Set {
    /**
     * An instance of the ERC20API class. Contains interfaces for interacting
     * with standard ERC20 methods such as name and symbol.
     */
    erc20: ERC20API;
    /**
     * An instance of the FeeAPI class. Contains interfaces for interacting
     * with Fee modules.
     */
    fees: FeeAPI;
    /**
     * An instance of the IssuanceAPI class. Contains interfaces for interacting
     * with Issuance Modules to mint and redeem SetTokens.
     */
    issuance: IssuanceAPI;
    /**
     * An instance of the NavIssuanceAPI class. Contains interfaces for interacting
     * with Net Asset Value Issuance Modules to mint and redeem SetTokens.
     */
    navIssuance: NavIssuanceAPI;
    /**
     * An instance of the SetTokenAPI class. Contains interfaces for interacting
     * with Set Tokens.
     */
    setToken: SetTokenAPI;
    /**
     * An instance of the SystemAPI class. Contains interfaces for interacting
     * with the Controller contract to read system state
     */
    system: SystemAPI;
    /**
     * An instance of the TradeAPI class. Contains interfaces for interacting
     * with the TradeModule contract and OneInchExchangeAdapter to make trades.
     */
    trade: TradeAPI;
    /**
     * An instance of the PriceOracleAPI class. Contains interfaces for interacting
     * with the PriceOracle contract
     */
    priceOracle: PriceOracleAPI;
    /**
     * An instance of the DebtIssuanceAPI class. Contains interfaces for interacting
     * with the DebtIssuance contract to issue and redeem tokens.
     */
    debtIssuance: DebtIssuanceAPI;
    /**
     * An instance of the DebtIssuanceV2API class. Contains interfaces for interacting
     * with the DebtIssuanceModuleV2 contract to issue and redeem tokens that accrue interest.
     * Primarily used for ALM.
     */
    debtIssuanceV2: DebtIssuanceV2API;
    /**
     * An instance of the BlockchainAPI class. Contains interfaces for
     * interacting with the blockchain
     */
    blockchain: BlockchainAPI;
    /**
     * Instantiates a new Set instance that provides the public interface to the Set.js library
     */
    constructor(config: SetJSConfig);
}
export default Set;
