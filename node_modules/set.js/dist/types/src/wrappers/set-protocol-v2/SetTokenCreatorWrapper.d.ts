import { Provider } from '@ethersproject/providers';
import { BigNumber } from 'ethers/lib/ethers';
import { ContractTransaction } from 'ethers';
import { Address } from '@setprotocol/set-protocol-v2/utils/types';
import { TransactionOverrides } from '@setprotocol/set-protocol-v2/dist/typechain';
/**
 * @title  SetTokenCreatorWrapper
 * @author Set Protocol
 *
 * The SetTokenCreatorWrapper handles instantiation and registering of new Set Tokens.
 *
 */
export default class SetTokenCreatorWrapper {
    private provider;
    private contracts;
    private setTokenCreatorAddress;
    constructor(provider: Provider, setTokenCreatorAddress: Address);
    /**
     * Instantiates and registers a new Set Token.
     *
     * @param components     List of component addresses that will comprise a Set's initial positions.
     * @param units          List of units. Each unit is the # of components per 10^18 of this Set Token.
     * @param modules        List of modules to enable. All modules must be approved by the Controller.
     * @param manager        Address of the manager.
     * @param name           The Set Token's name.
     * @param symbol         The Set Token's symbol identifier.
     * @param callerAddress  Address of caller (optional)
     *
     * @return            Address of newly instantiated Set Token.
     */
    create(components: Address[], units: BigNumber[], modules: Address[], manager: Address, name: string, symbol: string, callerAddress?: Address, txOpts?: TransactionOverrides): Promise<ContractTransaction>;
}
