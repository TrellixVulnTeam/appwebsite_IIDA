'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});var assertions_1=__importDefault(require('./assertions'));var index_1=require('./api/index');var ethersProviders=require('ethers').providers;var Set=function(){function Set(config){if(!config.ethersProvider&&!config.web3Provider){throw new Error('SetJS requires an ethersProvider or web3Provider passed in as part of the configuration');}var ethersProvider=config.ethersProvider||new ethersProviders.Web3Provider(config.web3Provider);var assertions=new assertions_1.default();this.erc20=new index_1.ERC20API(ethersProvider,assertions);this.fees=new index_1.FeeAPI(ethersProvider,config.protocolViewerAddress,config.streamingFeeModuleAddress,assertions);this.issuance=new index_1.IssuanceAPI(ethersProvider,config.basicIssuanceModuleAddress,assertions);this.setToken=new index_1.SetTokenAPI(ethersProvider,config.protocolViewerAddress,config.streamingFeeModuleAddress,config.setTokenCreatorAddress,assertions);this.system=new index_1.SystemAPI(ethersProvider,config.controllerAddress);this.trade=new index_1.TradeAPI(ethersProvider,config.tradeModuleAddress,config.zeroExApiKey);this.navIssuance=new index_1.NavIssuanceAPI(ethersProvider,config.navIssuanceModuleAddress);this.priceOracle=new index_1.PriceOracleAPI(ethersProvider,config.masterOracleAddress);this.debtIssuance=new index_1.DebtIssuanceAPI(ethersProvider,config.debtIssuanceModuleAddress);this.debtIssuanceV2=new index_1.DebtIssuanceV2API(ethersProvider,config.debtIssuanceModuleV2Address);this.blockchain=new index_1.BlockchainAPI(ethersProvider,assertions);}return Set;}();exports.default=Set;