'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.SchemaAssertions=void 0;var errors_1=require('../errors');var schemas_1=require('../schemas');var SchemaAssertions=function(){function SchemaAssertions(){this.validator=new schemas_1.SchemaValidator();}SchemaAssertions.prototype.isValidAddress=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.addressSchema);};SchemaAssertions.prototype.isValidAddressList=function(variableName,values){for(var _i=0,values_1=values;_i<values_1.length;_i++){var value=values_1[_i];this.isValidAddress(variableName,value);}};SchemaAssertions.prototype.isValidBytes32=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.bytes32Schema);};SchemaAssertions.prototype.isValidBytes=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.bytesSchema);};SchemaAssertions.prototype.isValidNumber=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.numberSchema);};SchemaAssertions.prototype.IsValidWholeNumber=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.wholeNumberSchema);};SchemaAssertions.prototype.isValidJsNumber=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.jsNumberSchema);};SchemaAssertions.prototype.isValidString=function(variableName,value){this.assertConformsToSchema(variableName,value,schemas_1.schemas.stringSchema);};SchemaAssertions.prototype.assertConformsToSchema=function(variableName,value,schema){var validationResult=this.validator.validate(value,schema);var hasValidationErrors=validationResult.errors.length>0;if(hasValidationErrors){throw new Error(errors_1.schemaAssertionsError.DOES_NOT_CONFORM_TO_SCHEMA(variableName,schema.id,value,validationResult));}};return SchemaAssertions;}();exports.SchemaAssertions=SchemaAssertions;