'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=this&&this.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),'throw':verb(1),'return':verb(2)},typeof Symbol==='function'&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError('Generator is already executing.');while(_)try{if(f=1,y&&(t=op[0]&2?y['return']:op[0]?y['throw']||((t=y['return'])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.CoinGeckoDataService=exports.ETH_CURRENCY_CODE=exports.USD_CURRENCY_CODE=void 0;var pageResults=require('graph-results-pager');var axios_1=__importDefault(require('axios'));var assertions_1=__importDefault(require('../../assertions'));exports.USD_CURRENCY_CODE='usd';exports.ETH_CURRENCY_CODE='eth';var CoinGeckoDataService=function(){function CoinGeckoDataService(chainId){this.assert=new assertions_1.default();this.assert.common.isSupportedChainId(chainId);this.chainId=chainId;}CoinGeckoDataService.prototype.fetchCoinPrices=function(params){return __awaiter(this,void 0,void 0,function(){var platform,endpoint,contractAddressParams,vsCurrenciesParams,url,response,e_1,_i,_a,address;return __generator(this,function(_b){switch(_b.label){case 0:platform=this.getPlatform();endpoint='https://api.coingecko.com/api/v3/simple/token_price/'+platform+'?';contractAddressParams='contract_addresses='+params.contractAddresses.join(',');vsCurrenciesParams='vs_currencies='+params.vsCurrencies.join(',');url=''+endpoint+contractAddressParams+'&'+vsCurrenciesParams;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,axios_1.default.get(url)];case 2:response=_b.sent();return[3,4];case 3:e_1=_b.sent();response={data:{}};for(_i=0,_a=params.contractAddresses;_i<_a.length;_i++){address=_a[_i];response.data[address]={};response.data[address][params.vsCurrencies[0]]=0;}return[3,4];case 4:return[2,response.data];}});});};CoinGeckoDataService.prototype.fetchTokenList=function(){return __awaiter(this,void 0,void 0,function(){var _a,_b,_c;return __generator(this,function(_d){switch(_d.label){case 0:if(this.tokenList!==undefined)return[2,this.tokenList];_a=this.chainId;switch(_a){case 1:return[3,1];case 137:return[3,3];}return[3,5];case 1:_b=this;return[4,this.fetchEthereumTokenList()];case 2:_b.tokenList=_d.sent();return[3,5];case 3:_c=this;return[4,this.fetchPolygonTokenList()];case 4:_c.tokenList=_d.sent();return[3,5];case 5:this.tokenMap=this.convertTokenListToAddressMap(this.tokenList);return[2,this.tokenList];}});});};CoinGeckoDataService.prototype.fetchTokenMap=function(){return __awaiter(this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:if(this.tokenMap!==undefined)return[2,this.tokenMap];_a=this;return[4,this.fetchTokenList()];case 1:_a.tokenList=_b.sent();this.tokenMap=this.convertTokenListToAddressMap(this.tokenList);return[2,this.tokenMap];}});});};CoinGeckoDataService.prototype.convertTokenListToAddressMap=function(list){if(list===void 0){list=[];}var tokenMap={};for(var _i=0,list_1=list;_i<list_1.length;_i++){var entry=list_1[_i];tokenMap[entry.address]=Object.assign({},entry);}return tokenMap;};CoinGeckoDataService.prototype.getPlatform=function(){switch(this.chainId){case 1:return'ethereum';case 137:return'polygon-pos';default:return'';}};CoinGeckoDataService.prototype.fetchEthereumTokenList=function(){return __awaiter(this,void 0,void 0,function(){var url,response;return __generator(this,function(_a){switch(_a.label){case 0:url='https://tokens.coingecko.com/uniswap/all.json';return[4,axios_1.default.get(url)];case 1:response=_a.sent();return[2,response.data.tokens];}});});};CoinGeckoDataService.prototype.fetchPolygonTokenList=function(){return __awaiter(this,void 0,void 0,function(){var coingeckoEthereumTokens,polygonMappedTokens,sushiPolygonTokenList,quickswapPolygonTokenList,_loop_1,_i,sushiPolygonTokenList_1,token;return __generator(this,function(_a){switch(_a.label){case 0:return[4,this.fetchEthereumTokenList()];case 1:coingeckoEthereumTokens=_a.sent();return[4,this.fetchPolygonMappedTokenList()];case 2:polygonMappedTokens=_a.sent();return[4,this.fetchSushiPolygonTokenList()];case 3:sushiPolygonTokenList=_a.sent();return[4,this.fetchQuickswapPolygonTokenList()];case 4:quickswapPolygonTokenList=_a.sent();_loop_1=function(token){var quickswapToken=quickswapPolygonTokenList.find(function(t){return t.address.toLowerCase()===token.address;});if(quickswapToken){token.logoURI=quickswapToken.logoURI;return'continue';}var ethereumAddress=polygonMappedTokens[token.address];if(ethereumAddress!==undefined){var ethereumToken=coingeckoEthereumTokens.find(function(t){return t.address.toLowerCase()===ethereumAddress;});if(ethereumToken){token.logoURI=ethereumToken.logoURI;}}};for(_i=0,sushiPolygonTokenList_1=sushiPolygonTokenList;_i<sushiPolygonTokenList_1.length;_i++){token=sushiPolygonTokenList_1[_i];_loop_1(token);}return[2,sushiPolygonTokenList];}});});};CoinGeckoDataService.prototype.fetchSushiPolygonTokenList=function(){return __awaiter(this,void 0,void 0,function(){var tokens,url,properties,response,_i,response_1,token;return __generator(this,function(_a){switch(_a.label){case 0:tokens=[];url='https://api.thegraph.com/subgraphs/name/sushiswap/matic-exchange';properties=['id','symbol','name','decimals','volumeUSD'];return[4,pageResults({api:url,query:{entity:'tokens',properties:properties}})];case 1:response=_a.sent();for(_i=0,response_1=response;_i<response_1.length;_i++){token=response_1[_i];tokens.push({chainId:137,address:token.id,symbol:token.symbol,name:token.name,decimals:parseInt(token.decimals),volumeUSD:parseFloat(token.volumeUSD)});}tokens.sort(function(a,b){return b.volumeUSD-a.volumeUSD;});tokens=tokens.filter(function(t){return t.volumeUSD>0;});return[2,tokens];}});});};CoinGeckoDataService.prototype.fetchPolygonMappedTokenList=function(){return __awaiter(this,void 0,void 0,function(){var tokens,url,properties,response,_i,response_2,tokenMapping;return __generator(this,function(_a){switch(_a.label){case 0:tokens={};url='https://api.thegraph.com/subgraphs/name/maticnetwork/mainnet-root-subgraphs';properties=['id','rootToken','childToken'];return[4,pageResults({api:url,query:{entity:'tokenMappings',properties:properties}})];case 1:response=_a.sent();for(_i=0,response_2=response;_i<response_2.length;_i++){tokenMapping=response_2[_i];tokens[tokenMapping.childToken.toLowerCase()]=tokenMapping.rootToken.toLowerCase();}return[2,tokens];}});});};CoinGeckoDataService.prototype.fetchQuickswapPolygonTokenList=function(){return __awaiter(this,void 0,void 0,function(){var url,data;return __generator(this,function(_a){switch(_a.label){case 0:url='https://raw.githubusercontent.com/sameepsi/'+'quickswap-default-token-list/master/src/tokens/mainnet.json';return[4,axios_1.default.get(url)];case 1:data=_a.sent().data;return[2,data];}});});};return CoinGeckoDataService;}();exports.CoinGeckoDataService=CoinGeckoDataService;