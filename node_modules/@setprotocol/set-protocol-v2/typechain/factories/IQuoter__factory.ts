/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IQuoter, IQuoterInterface } from "../IQuoter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBaseToQuote",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isExactInput",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IQuoter.SwapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deltaAvailableBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deltaAvailableQuote",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "exchangedPositionSize",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "exchangedPositionNotional",
            type: "int256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
        ],
        internalType: "struct IQuoter.SwapResponse",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IQuoter__factory {
  static readonly abi = _abi;
  static createInterface(): IQuoterInterface {
    return new utils.Interface(_abi) as IQuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IQuoter {
    return new Contract(address, _abi, signerOrProvider) as IQuoter;
  }
}
