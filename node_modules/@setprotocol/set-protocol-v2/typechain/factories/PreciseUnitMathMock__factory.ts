/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PreciseUnitMathMock,
  PreciseUnitMathMockInterface,
} from "../PreciseUnitMathMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "range",
        type: "uint256",
      },
    ],
    name: "approximatelyEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "conservativePreciseDiv",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "conservativePreciseMul",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "divDown",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maxInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "preciseDiv",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "preciseDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "preciseDivCeil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "preciseMul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "preciseMulCeil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "preciseMulInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "preciseUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "preciseUnitInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a74806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063ad8b9b9b11610097578063ddb29e9211610066578063ddb29e92146101ba578063dfcc00f2146101cd578063e22cfd3f146101e0578063ebf58530146101f3576100f5565b8063ad8b9b9b14610174578063d0c11c7714610187578063d5e5e6e6146100fa578063db43cf92146101a7576100f5565b80636749ab9a116100d35780636749ab9a1461013e57806370f0e27a146101515780637c1bd7c81461016457806393b027b41461016c576100f5565b8063127a30f1146100fa5780631ad5058614610118578063576dcc3d1461012b575b600080fd5b610102610206565b60405161010f919061082c565b60405180910390f35b6101026101263660046107d5565b610215565b6101026101393660046107d5565b610230565b61010261014c3660046107d5565b610242565b61010261015f3660046107d5565b610254565b610102610266565b610102610270565b6101026101823660046107d5565b61027a565b61019a6101953660046107f6565b61028c565b60405161010f9190610821565b6101026101b53660046107d5565b6102a7565b6101026101c83660046107d5565b6102b9565b6101026101db3660046107d5565b6102cb565b6101026101ee3660046107d5565b6102dd565b6101026102013660046107d5565b6102ef565b6000610210610301565b905090565b6000610227838363ffffffff61030d16565b90505b92915050565b6000610227838363ffffffff61036816565b6000610227838363ffffffff6103df16565b6000610227838363ffffffff61041e16565b6000610210610441565b6000610210610449565b6000610227838363ffffffff61045416565b600061029f84848463ffffffff61047716565b949350505050565b6000610227838363ffffffff6104ae16565b6000610227838363ffffffff6104cc16565b6000610227838363ffffffff61055a16565b6000610227838363ffffffff61058416565b6000610227838363ffffffff6105a216565b670de0b6b3a764000090565b60008083116103375760405162461bcd60e51b815260040161032e906108bf565b60405180910390fd5b600160005b838110156103605781610355818763ffffffff6105c016565b92505060010161033c565b509392505050565b6000816103875760405162461bcd60e51b815260040161032e90610a14565b60008311610396576000610227565b61022760016103d3846103c7836103bb89670de0b6b3a764000063ffffffff6105c016565b9063ffffffff6105fa16565b9063ffffffff61063c16565b9063ffffffff61067e16565b60008215806103ec575081155b156103f95750600061022a565b61022760016103d3670de0b6b3a76400006103c7836103bb898963ffffffff6105c016565b6000610227610433848463ffffffff6106a316565b670de0b6b3a76400006104cc565b600160ff1b90565b6001600160ff1b0390565b600061022761047184670de0b6b3a764000063ffffffff6106a316565b836104cc565b6000610489838363ffffffff61067e16565b841115801561029f57506104a3838363ffffffff6105fa16565b909310159392505050565b6000610227670de0b6b3a76400006103c7858563ffffffff6105c016565b6000816104eb5760405162461bcd60e51b815260040161032e90610a14565b600160ff1b8314158061050057508160001914155b61051c5760405162461bcd60e51b815260040161032e906109b8565b600061052e848463ffffffff61070e16565b9050600083851812801561054a575082848161054657fe5b0715155b1561022757600019019392505050565b6000610227670de0b6b3a7640000610578858563ffffffff6106a316565b9063ffffffff61070e16565b60006102278261057885670de0b6b3a764000063ffffffff6106a316565b6000610227826103c785670de0b6b3a764000063ffffffff6105c016565b6000826105cf5750600061022a565b828202828482816105dc57fe5b04146102275760405162461bcd60e51b815260040161032e90610930565b600061022783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610772565b600061022783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061079e565b6000828201838110156102275760405162461bcd60e51b815260040161032e90610888565b6000826106b25750600061022a565b826000191480156106c65750600160ff1b82145b156106e35760405162461bcd60e51b815260040161032e90610971565b828202828482816106f057fe5b05146102275760405162461bcd60e51b815260040161032e90610971565b60008161072d5760405162461bcd60e51b815260040161032e906109df565b816000191480156107415750600160ff1b83145b1561075e5760405162461bcd60e51b815260040161032e906108ef565b600082848161076957fe5b05949350505050565b600081848411156107965760405162461bcd60e51b815260040161032e9190610835565b505050900390565b600081836107bf5760405162461bcd60e51b815260040161032e9190610835565b5060008385816107cb57fe5b0495945050505050565b600080604083850312156107e7578182fd5b50508035926020909101359150565b60008060006060848603121561080a578081fd5b505081359360208301359350604090920135919050565b901515815260200190565b90815260200190565b6000602080835283518082850152825b8181101561086157858101830151858201604001528201610845565b818111156108725783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526016908201527556616c7565206d75737420626520706f73697469766560501b604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526027908201527f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f604082015266766572666c6f7760c81b606082015260800190565b6020808252600d908201526c125b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b6020808252818101527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604082015260600190565b60208082526010908201526f043616e742064697669646520627920360841b60408201526060019056fea2646970667358221220b9bebd8d2c65a0c462597fc1a8264e4218fc413910a4ce12e237e2c13bd31f3664736f6c634300060a0033";

export class PreciseUnitMathMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PreciseUnitMathMock> {
    return super.deploy(overrides || {}) as Promise<PreciseUnitMathMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PreciseUnitMathMock {
    return super.attach(address) as PreciseUnitMathMock;
  }
  connect(signer: Signer): PreciseUnitMathMock__factory {
    return super.connect(signer) as PreciseUnitMathMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PreciseUnitMathMockInterface {
    return new utils.Interface(_abi) as PreciseUnitMathMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PreciseUnitMathMock {
    return new Contract(address, _abi, signerOrProvider) as PreciseUnitMathMock;
  }
}
