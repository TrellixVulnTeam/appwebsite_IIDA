/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AGIMigrationWrapAdapter,
  AGIMigrationWrapAdapterInterface,
} from "../AGIMigrationWrapAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_agiLegacyToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_agixToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "agiLegacyToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "agixToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSpenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getUnwrapCallData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_underlyingUnits",
        type: "uint256",
      },
    ],
    name: "getWrapCallData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516104a33803806104a38339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c610411610092600039806101bc52806102835250806101e05280610209528061033752806103b652506104116000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806323d52bc21461005c5780636c6fc0ab1461008057806377b1aaf814610088578063a22fe98e14610156578063de68a3da1461018c575b600080fd5b6100646101ba565b604080516001600160a01b039092168252519081900360200190f35b6100646101de565b6100be6004803603606081101561009e57600080fd5b506001600160a01b03813581169160208101359091169060400135610202565b60405180846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610119578181015183820152602001610101565b50505050905090810190601f1680156101465780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100be6004803603606081101561016c57600080fd5b506001600160a01b03813581169160208101359091169060400135610360565b610064600480360360408110156101a257600080fd5b506001600160a01b03813581169160200135166103b4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614610281576040805162461bcd60e51b815260206004820152601160248201527026bab9ba1031329020a3a4903a37b5b2b760791b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146102fc576040805162461bcd60e51b815260206004820152601260248201527126bab9ba1031329020a3a4ac103a37b5b2b760711b604482015290519081900360640190fd5b505060408051602480820194909452815180820390940184526044019052506020810180516001600160e01b0316630852cd8d60e31b1790527f00000000000000000000000000000000000000000000000000000000000000009360009350909150565b6040805162461bcd60e51b815260206004820152601b60248201527f414749206275726e2063616e6e6f74206265207265766572736564000000000060448201529051600091829160609181900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000009291505056fea26469706673582212202c2f170534e2e216d3cf7d1688bf7e049424b93529a0c2c3d8bc63a6fab5a1c764736f6c634300060a0033";

export class AGIMigrationWrapAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _agiLegacyToken: string,
    _agixToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AGIMigrationWrapAdapter> {
    return super.deploy(
      _agiLegacyToken,
      _agixToken,
      overrides || {}
    ) as Promise<AGIMigrationWrapAdapter>;
  }
  getDeployTransaction(
    _agiLegacyToken: string,
    _agixToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _agiLegacyToken,
      _agixToken,
      overrides || {}
    );
  }
  attach(address: string): AGIMigrationWrapAdapter {
    return super.attach(address) as AGIMigrationWrapAdapter;
  }
  connect(signer: Signer): AGIMigrationWrapAdapter__factory {
    return super.connect(signer) as AGIMigrationWrapAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AGIMigrationWrapAdapterInterface {
    return new utils.Interface(_abi) as AGIMigrationWrapAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AGIMigrationWrapAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AGIMigrationWrapAdapter;
  }
}
