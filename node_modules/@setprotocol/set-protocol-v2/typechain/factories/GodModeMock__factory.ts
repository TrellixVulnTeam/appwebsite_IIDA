/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GodModeMock, GodModeMockInterface } from "../GodModeMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_component",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104013803806104018339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b031990921691909117905561039c806100656000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806368155ec114610051578063847ef08d1461008f578063c4d66de814610097578063f77c4791146100bd575b600080fd5b61008d6004803603608081101561006757600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356100e1565b005b61008d610102565b61008d600480360360208110156100ad57600080fd5b50356001600160a01b0316610104565b6100c561015a565b604080516001600160a01b039092168252519081900360200190f35b6100fc6001600160a01b03851684848463ffffffff61016916565b50505050565b565b806001600160a01b0316630ffe0f1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031681565b80156100fc57604080516001600160a01b038085166024808401919091526044808401869052845180850382018152606494850186526020810180516001600160e01b031663a9059cbb60e01b17815295516347b7819960e11b8152898516600482019081526000948201859052606093820193845282519682019690965281519196948b1695638f6f0332958b959489949293909260849091019190808383895b8381101561022357818101518382015260200161020b565b50505050905090810190601f1680156102505780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561027157600080fd5b505af1158015610285573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156102ae57600080fd5b81019080805160405193929190846401000000008211156102ce57600080fd5b9083019060208201858111156102e357600080fd5b82516401000000008111828201881017156102fd57600080fd5b82525081516020918201929091019080838360005b8381101561032a578181015183820152602001610312565b50505050905090810190601f1680156103575780820380516001836020036101000a031916815260200191505b5060405250505050505050505056fea2646970667358221220a03a0934736458ecb3b455661658084ed134a2ed2e378d9fb5de234f5f72c74a64736f6c634300060a0033";

export class GodModeMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GodModeMock> {
    return super.deploy(_controller, overrides || {}) as Promise<GodModeMock>;
  }
  getDeployTransaction(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, overrides || {});
  }
  attach(address: string): GodModeMock {
    return super.attach(address) as GodModeMock;
  }
  connect(signer: Signer): GodModeMock__factory {
    return super.connect(signer) as GodModeMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GodModeMockInterface {
    return new utils.Interface(_abi) as GodModeMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GodModeMock {
    return new Contract(address, _abi, signerOrProvider) as GodModeMock;
  }
}
