/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKyberNetworkProxy,
  IKyberNetworkProxyInterface,
} from "../IKyberNetworkProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_src",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_srcQty",
        type: "uint256",
      },
    ],
    name: "getExpectedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_src",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_srcAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_dest",
        type: "address",
      },
      {
        internalType: "address",
        name: "_destAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxDestAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minConversionRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_referalFeeAddress",
        type: "address",
      },
    ],
    name: "trade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class IKyberNetworkProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IKyberNetworkProxyInterface {
    return new utils.Interface(_abi) as IKyberNetworkProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKyberNetworkProxy {
    return new Contract(address, _abi, signerOrProvider) as IKyberNetworkProxy;
  }
}
