/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NAVIssuanceCaller,
  NAVIssuanceCallerInterface,
} from "../NAVIssuanceCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INAVIssuanceModule",
        name: "_navIssuance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reserveAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reserveAssetQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minSetTokenReceiveQuantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "navIssuance",
    outputs: [
      {
        internalType: "contract INAVIssuanceModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reserveAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_setTokenQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minReserveReceiveQuantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161038c38038061038c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6102fb806100916000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631272ba331461004657806330b305f9146100645780639f6f6ba914610079575b600080fd5b61004e61008c565b60405161005b9190610269565b60405180910390f35b6100776100723660046101f2565b61009b565b005b6100776100873660046101f2565b610193565b6000546001600160a01b031681565b60005460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926100cf92909116908790600401610250565b602060405180830381600087803b1580156100e957600080fd5b505af11580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012191906101cb565b506000546040516330b305f960e01b81526001600160a01b03909116906330b305f99061015a908890889088908890889060040161027d565b600060405180830381600087803b15801561017457600080fd5b505af1158015610188573d6000803e3d6000fd5b505050505050505050565b600054604051639f6f6ba960e01b81526001600160a01b0390911690639f6f6ba99061015a908890889088908890889060040161027d565b6000602082840312156101dc578081fd5b815180151581146101eb578182fd5b9392505050565b600080600080600060a08688031215610209578081fd5b8535610214816102ad565b94506020860135610224816102ad565b935060408601359250606086013591506080860135610242816102ad565b809150509295509295909350565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b6001600160a01b039586168152938516602085015260408401929092526060830152909116608082015260a00190565b6001600160a01b03811681146102c257600080fd5b5056fea26469706673582212205def96677c516b1f848de9b8fea53d9870de888ff8978574cfb668f0b27d5c9464736f6c634300060a0033";

export class NAVIssuanceCaller__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _navIssuance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NAVIssuanceCaller> {
    return super.deploy(
      _navIssuance,
      overrides || {}
    ) as Promise<NAVIssuanceCaller>;
  }
  getDeployTransaction(
    _navIssuance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_navIssuance, overrides || {});
  }
  attach(address: string): NAVIssuanceCaller {
    return super.attach(address) as NAVIssuanceCaller;
  }
  connect(signer: Signer): NAVIssuanceCaller__factory {
    return super.connect(signer) as NAVIssuanceCaller__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NAVIssuanceCallerInterface {
    return new utils.Interface(_abi) as NAVIssuanceCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NAVIssuanceCaller {
    return new Contract(address, _abi, signerOrProvider) as NAVIssuanceCaller;
  }
}
