/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface LendToAaveMigratorInterface extends ethers.utils.Interface {
  functions: {
    "AAVE()": FunctionFragment;
    "LEND()": FunctionFragment;
    "LEND_AAVE_RATIO()": FunctionFragment;
    "REVISION()": FunctionFragment;
    "_totalLendMigrated()": FunctionFragment;
    "initialize()": FunctionFragment;
    "migrateFromLEND(uint256)": FunctionFragment;
    "migrationStarted()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "AAVE", values?: undefined): string;
  encodeFunctionData(functionFragment: "LEND", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "LEND_AAVE_RATIO",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "REVISION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "_totalLendMigrated",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "migrateFromLEND",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "migrationStarted",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "AAVE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "LEND", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "LEND_AAVE_RATIO",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "REVISION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_totalLendMigrated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "migrateFromLEND",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrationStarted",
    data: BytesLike
  ): Result;

  events: {
    "LendMigrated(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LendMigrated"): EventFragment;
}

export class LendToAaveMigrator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: LendToAaveMigratorInterface;

  functions: {
    AAVE(overrides?: CallOverrides): Promise<[string]>;

    LEND(overrides?: CallOverrides): Promise<[string]>;

    LEND_AAVE_RATIO(overrides?: CallOverrides): Promise<[BigNumber]>;

    REVISION(overrides?: CallOverrides): Promise<[BigNumber]>;

    _totalLendMigrated(overrides?: CallOverrides): Promise<[BigNumber]>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrateFromLEND(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrationStarted(overrides?: CallOverrides): Promise<[boolean]>;
  };

  AAVE(overrides?: CallOverrides): Promise<string>;

  LEND(overrides?: CallOverrides): Promise<string>;

  LEND_AAVE_RATIO(overrides?: CallOverrides): Promise<BigNumber>;

  REVISION(overrides?: CallOverrides): Promise<BigNumber>;

  _totalLendMigrated(overrides?: CallOverrides): Promise<BigNumber>;

  initialize(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrateFromLEND(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrationStarted(overrides?: CallOverrides): Promise<boolean>;

  callStatic: {
    AAVE(overrides?: CallOverrides): Promise<string>;

    LEND(overrides?: CallOverrides): Promise<string>;

    LEND_AAVE_RATIO(overrides?: CallOverrides): Promise<BigNumber>;

    REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    _totalLendMigrated(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(overrides?: CallOverrides): Promise<void>;

    migrateFromLEND(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    migrationStarted(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    LendMigrated(
      sender?: string | null,
      amount?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { sender: string; amount: BigNumber }
    >;
  };

  estimateGas: {
    AAVE(overrides?: CallOverrides): Promise<BigNumber>;

    LEND(overrides?: CallOverrides): Promise<BigNumber>;

    LEND_AAVE_RATIO(overrides?: CallOverrides): Promise<BigNumber>;

    REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    _totalLendMigrated(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrateFromLEND(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrationStarted(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    AAVE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    LEND(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    LEND_AAVE_RATIO(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    REVISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _totalLendMigrated(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrateFromLEND(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrationStarted(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
