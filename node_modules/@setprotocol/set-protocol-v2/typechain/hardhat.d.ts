/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "IAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAToken__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "ILendingPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolAddressesProvider__factory>;
    getContractFactory(
      name: "IProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolDataProvider__factory>;
    getContractFactory(
      name: "IStableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStableDebtToken__factory>;
    getContractFactory(
      name: "IVariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVariableDebtToken__factory>;
    getContractFactory(
      name: "IAaveLendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveLendingPool__factory>;
    getContractFactory(
      name: "IAaveLendingPoolCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveLendingPoolCore__factory>;
    getContractFactory(
      name: "ICErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICErc20__factory>;
    getContractFactory(
      name: "ICEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICEth__factory>;
    getContractFactory(
      name: "IComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComptroller__factory>;
    getContractFactory(
      name: "IDMMFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDMMFactory__factory>;
    getContractFactory(
      name: "IDMMPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDMMPool__factory>;
    getContractFactory(
      name: "IGaugeController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGaugeController__factory>;
    getContractFactory(
      name: "IKyberNetworkProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKyberNetworkProxy__factory>;
    getContractFactory(
      name: "IStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingRewards__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ISynth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynth__factory>;
    getContractFactory(
      name: "ISynthetixExchanger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetixExchanger__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IYearnVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYearnVault__factory>;
    getContractFactory(
      name: "IAccountBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountBalance__factory>;
    getContractFactory(
      name: "IClearingHouse",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouse__factory>;
    getContractFactory(
      name: "IExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchange__factory>;
    getContractFactory(
      name: "IMarketRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketRegistry__factory>;
    getContractFactory(
      name: "IQuoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuoter__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IAmmAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAmmAdapter__factory>;
    getContractFactory(
      name: "IBasicIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasicIssuanceModule__factory>;
    getContractFactory(
      name: "IClaimAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimAdapter__factory>;
    getContractFactory(
      name: "IController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IController__factory>;
    getContractFactory(
      name: "IDebtIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDebtIssuanceModule__factory>;
    getContractFactory(
      name: "IExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchangeAdapter__factory>;
    getContractFactory(
      name: "IGovernanceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernanceAdapter__factory>;
    getContractFactory(
      name: "IIndexExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIndexExchangeAdapter__factory>;
    getContractFactory(
      name: "IIntegrationRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIntegrationRegistry__factory>;
    getContractFactory(
      name: "IManagerIssuanceHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManagerIssuanceHook__factory>;
    getContractFactory(
      name: "IModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModule__factory>;
    getContractFactory(
      name: "IModuleIssuanceHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModuleIssuanceHook__factory>;
    getContractFactory(
      name: "IModuleIssuanceHookV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModuleIssuanceHookV2__factory>;
    getContractFactory(
      name: "INAVIssuanceHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INAVIssuanceHook__factory>;
    getContractFactory(
      name: "INAVIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INAVIssuanceModule__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IOracleAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracleAdapter__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "ISetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISetToken__factory>;
    getContractFactory(
      name: "ISetValuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISetValuer__factory>;
    getContractFactory(
      name: "IStakingAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingAdapter__factory>;
    getContractFactory(
      name: "IStreamingFeeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStreamingFeeModule__factory>;
    getContractFactory(
      name: "IWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWrapAdapter__factory>;
    getContractFactory(
      name: "IWrapV2Adapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWrapV2Adapter__factory>;
    getContractFactory(
      name: "AddressArrayUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressArrayUtilsMock__factory>;
    getContractFactory(
      name: "ContractCallerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractCallerMock__factory>;
    getContractFactory(
      name: "ExplicitERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExplicitERC20Mock__factory>;
    getContractFactory(
      name: "ChainlinkAggregatorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkAggregatorMock__factory>;
    getContractFactory(
      name: "CompoundPriceOracleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundPriceOracleMock__factory>;
    getContractFactory(
      name: "ComptrollerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerMock__factory>;
    getContractFactory(
      name: "GaugeControllerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GaugeControllerMock__factory>;
    getContractFactory(
      name: "KyberNetworkProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KyberNetworkProxyMock__factory>;
    getContractFactory(
      name: "LendingPoolAddressesProviderMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolAddressesProviderMock__factory>;
    getContractFactory(
      name: "OneInchExchangeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OneInchExchangeMock__factory>;
    getContractFactory(
      name: "ProtocolDataProviderMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolDataProviderMock__factory>;
    getContractFactory(
      name: "SynthetixExchangerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthetixExchangerMock__factory>;
    getContractFactory(
      name: "SynthMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthMock__factory>;
    getContractFactory(
      name: "YearnStrategyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnStrategyMock__factory>;
    getContractFactory(
      name: "YearnVaultMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnVaultMock__factory>;
    getContractFactory(
      name: "ZeroExMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroExMock__factory>;
    getContractFactory(
      name: "ForceFunderMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForceFunderMock__factory>;
    getContractFactory(
      name: "GodModeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GodModeMock__factory>;
    getContractFactory(
      name: "AmmAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AmmAdapterMock__factory>;
    getContractFactory(
      name: "ClaimAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimAdapterMock__factory>;
    getContractFactory(
      name: "GovernanceAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceAdapterMock__factory>;
    getContractFactory(
      name: "StakingAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingAdapterMock__factory>;
    getContractFactory(
      name: "TradeAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeAdapterMock__factory>;
    getContractFactory(
      name: "WrapAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapAdapterMock__factory>;
    getContractFactory(
      name: "WrapV2AdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapV2AdapterMock__factory>;
    getContractFactory(
      name: "OracleAdapterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleAdapterMock__factory>;
    getContractFactory(
      name: "OracleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleMock__factory>;
    getContractFactory(
      name: "PositionMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionMock__factory>;
    getContractFactory(
      name: "PreciseUnitMathMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PreciseUnitMathMock__factory>;
    getContractFactory(
      name: "CustomSetValuerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomSetValuerMock__factory>;
    getContractFactory(
      name: "AaveLendingPoolCoreMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveLendingPoolCoreMock__factory>;
    getContractFactory(
      name: "AaveLendingPoolMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveLendingPoolMock__factory>;
    getContractFactory(
      name: "AaveV2Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2Mock__factory>;
    getContractFactory(
      name: "CompoundMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundMock__factory>;
    getContractFactory(
      name: "PerpV2Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2Mock__factory>;
    getContractFactory(
      name: "InvokeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InvokeMock__factory>;
    getContractFactory(
      name: "IssuanceValidationUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IssuanceValidationUtilsMock__factory>;
    getContractFactory(
      name: "ModuleBaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleBaseMock__factory>;
    getContractFactory(
      name: "ResourceIdentifierMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ResourceIdentifierMock__factory>;
    getContractFactory(
      name: "DebtIssuanceMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebtIssuanceMock__factory>;
    getContractFactory(
      name: "DebtModuleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebtModuleMock__factory>;
    getContractFactory(
      name: "ManagerIssuanceHookMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManagerIssuanceHookMock__factory>;
    getContractFactory(
      name: "ModuleIssuanceHookMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleIssuanceHookMock__factory>;
    getContractFactory(
      name: "NAVIssuanceCaller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVIssuanceCaller__factory>;
    getContractFactory(
      name: "NAVIssuanceHookMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVIssuanceHookMock__factory>;
    getContractFactory(
      name: "StandardTokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardTokenMock__factory>;
    getContractFactory(
      name: "StandardTokenWithFeeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardTokenWithFeeMock__factory>;
    getContractFactory(
      name: "StandardTokenWithRoundingErrorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardTokenWithRoundingErrorMock__factory>;
    getContractFactory(
      name: "Uint256ArrayUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uint256ArrayUtilsMock__factory>;
    getContractFactory(
      name: "AMMSplitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AMMSplitter__factory>;
    getContractFactory(
      name: "AssetLimitHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetLimitHook__factory>;
    getContractFactory(
      name: "UniswapYieldHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapYieldHook__factory>;
    getContractFactory(
      name: "ERC20Viewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Viewer__factory>;
    getContractFactory(
      name: "ProtocolViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolViewer__factory>;
    getContractFactory(
      name: "SetTokenViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetTokenViewer__factory>;
    getContractFactory(
      name: "StreamingFeeModuleViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StreamingFeeModuleViewer__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "UniswapV2AmmAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2AmmAdapter__factory>;
    getContractFactory(
      name: "CompClaimAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompClaimAdapter__factory>;
    getContractFactory(
      name: "KyberExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KyberExchangeAdapter__factory>;
    getContractFactory(
      name: "OneInchExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OneInchExchangeAdapter__factory>;
    getContractFactory(
      name: "SynthetixExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthetixExchangeAdapter__factory>;
    getContractFactory(
      name: "UniswapV2ExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2ExchangeAdapter__factory>;
    getContractFactory(
      name: "UniswapV2ExchangeAdapterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2ExchangeAdapterV2__factory>;
    getContractFactory(
      name: "UniswapV3ExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3ExchangeAdapter__factory>;
    getContractFactory(
      name: "ZeroExApiAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroExApiAdapter__factory>;
    getContractFactory(
      name: "AaveGovernanceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveGovernanceAdapter__factory>;
    getContractFactory(
      name: "AaveGovernanceV2Adapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveGovernanceV2Adapter__factory>;
    getContractFactory(
      name: "CompoundBravoGovernanceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundBravoGovernanceAdapter__factory>;
    getContractFactory(
      name: "CompoundLikeGovernanceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundLikeGovernanceAdapter__factory>;
    getContractFactory(
      name: "SnapshotGovernanceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotGovernanceAdapter__factory>;
    getContractFactory(
      name: "BalancerV1IndexExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerV1IndexExchangeAdapter__factory>;
    getContractFactory(
      name: "KyberV3IndexExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KyberV3IndexExchangeAdapter__factory>;
    getContractFactory(
      name: "UniswapV2IndexExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2IndexExchangeAdapter__factory>;
    getContractFactory(
      name: "UniswapV3IndexExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3IndexExchangeAdapter__factory>;
    getContractFactory(
      name: "AaveV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2__factory>;
    getContractFactory(
      name: "Compound",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Compound__factory>;
    getContractFactory(
      name: "PerpV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2__factory>;
    getContractFactory(
      name: "CTokenOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTokenOracle__factory>;
    getContractFactory(
      name: "UniswapPairPriceAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapPairPriceAdapter__factory>;
    getContractFactory(
      name: "YearnVaultOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnVaultOracle__factory>;
    getContractFactory(
      name: "CurveStakingAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveStakingAdapter__factory>;
    getContractFactory(
      name: "UniswapV2TransferFeeExchangeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2TransferFeeExchangeAdapter__factory>;
    getContractFactory(
      name: "AaveV2WrapV2Adapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2WrapV2Adapter__factory>;
    getContractFactory(
      name: "CompoundWrapV2Adapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundWrapV2Adapter__factory>;
    getContractFactory(
      name: "YearnWrapV2Adapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnWrapV2Adapter__factory>;
    getContractFactory(
      name: "AaveMigrationWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveMigrationWrapAdapter__factory>;
    getContractFactory(
      name: "AaveWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveWrapAdapter__factory>;
    getContractFactory(
      name: "AGIMigrationWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AGIMigrationWrapAdapter__factory>;
    getContractFactory(
      name: "AxieInfinityMigrationWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AxieInfinityMigrationWrapAdapter__factory>;
    getContractFactory(
      name: "ITokenSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenSwap__factory>;
    getContractFactory(
      name: "CompoundWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundWrapAdapter__factory>;
    getContractFactory(
      name: "KyberMigrationWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KyberMigrationWrapAdapter__factory>;
    getContractFactory(
      name: "YearnWrapAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnWrapAdapter__factory>;
    getContractFactory(
      name: "IntegrationRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IntegrationRegistry__factory>;
    getContractFactory(
      name: "ModuleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleBase__factory>;
    getContractFactory(
      name: "AaveLeverageModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveLeverageModule__factory>;
    getContractFactory(
      name: "AirdropModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropModule__factory>;
    getContractFactory(
      name: "AmmModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AmmModule__factory>;
    getContractFactory(
      name: "BasicIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicIssuanceModule__factory>;
    getContractFactory(
      name: "ClaimModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimModule__factory>;
    getContractFactory(
      name: "CompoundLeverageModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundLeverageModule__factory>;
    getContractFactory(
      name: "CustomOracleNavIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomOracleNavIssuanceModule__factory>;
    getContractFactory(
      name: "DebtIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebtIssuanceModule__factory>;
    getContractFactory(
      name: "DebtIssuanceModuleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebtIssuanceModuleV2__factory>;
    getContractFactory(
      name: "GeneralIndexModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GeneralIndexModule__factory>;
    getContractFactory(
      name: "GovernanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceModule__factory>;
    getContractFactory(
      name: "IssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IssuanceModule__factory>;
    getContractFactory(
      name: "NavIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NavIssuanceModule__factory>;
    getContractFactory(
      name: "PerpV2LeverageModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2LeverageModule__factory>;
    getContractFactory(
      name: "SingleIndexModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SingleIndexModule__factory>;
    getContractFactory(
      name: "SlippageIssuanceModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SlippageIssuanceModule__factory>;
    getContractFactory(
      name: "StakingModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingModule__factory>;
    getContractFactory(
      name: "StreamingFeeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StreamingFeeModule__factory>;
    getContractFactory(
      name: "TradeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeModule__factory>;
    getContractFactory(
      name: "WrapModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapModule__factory>;
    getContractFactory(
      name: "WrapModuleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapModuleV2__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "SetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetToken__factory>;
    getContractFactory(
      name: "SetTokenCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetTokenCreator__factory>;
    getContractFactory(
      name: "SetValuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetValuer__factory>;
    getContractFactory(
      name: "BaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategy__factory>;
    getContractFactory(
      name: "BaseStrategyInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategyInitializable__factory>;
    getContractFactory(
      name: "StrategyAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrategyAPI__factory>;
    getContractFactory(
      name: "VaultAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAPI__factory>;
    getContractFactory(
      name: "AaveGovernanceV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveGovernanceV2__factory>;
    getContractFactory(
      name: "AavePropositionPower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AavePropositionPower__factory>;
    getContractFactory(
      name: "AaveProtoGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveProtoGovernance__factory>;
    getContractFactory(
      name: "AaveTokenV2Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveTokenV2Mintable__factory>;
    getContractFactory(
      name: "AssetVotingWeightProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetVotingWeightProvider__factory>;
    getContractFactory(
      name: "AToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AToken__factory>;
    getContractFactory(
      name: "CoreLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreLibrary__factory>;
    getContractFactory(
      name: "DefaultReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DefaultReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "Executor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Executor__factory>;
    getContractFactory(
      name: "GovernanceParamsProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceParamsProvider__factory>;
    getContractFactory(
      name: "GovernanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceStrategy__factory>;
    getContractFactory(
      name: "LendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPool__factory>;
    getContractFactory(
      name: "LendingPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolAddressesProvider__factory>;
    getContractFactory(
      name: "LendingPoolConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolConfigurator__factory>;
    getContractFactory(
      name: "LendingPoolCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolCore__factory>;
    getContractFactory(
      name: "LendingPoolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolDataProvider__factory>;
    getContractFactory(
      name: "LendingRateOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingRateOracle__factory>;
    getContractFactory(
      name: "LendToAaveMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendToAaveMigrator__factory>;
    getContractFactory(
      name: "AaveV2AToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2AToken__factory>;
    getContractFactory(
      name: "AaveV2DefaultReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2DefaultReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "AaveV2LendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2LendingPool__factory>;
    getContractFactory(
      name: "AaveV2LendingPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2LendingPoolAddressesProvider__factory>;
    getContractFactory(
      name: "AaveV2LendingPoolCollateralManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2LendingPoolCollateralManager__factory>;
    getContractFactory(
      name: "AaveV2LendingPoolConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2LendingPoolConfigurator__factory>;
    getContractFactory(
      name: "AaveV2LendingRateOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2LendingRateOracle__factory>;
    getContractFactory(
      name: "AaveV2Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2Oracle__factory>;
    getContractFactory(
      name: "AaveV2PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2PriceOracle__factory>;
    getContractFactory(
      name: "AaveV2ProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2ProtocolDataProvider__factory>;
    getContractFactory(
      name: "AaveV2StableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2StableDebtToken__factory>;
    getContractFactory(
      name: "AaveV2StakedTokenIncentivesController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2StakedTokenIncentivesController__factory>;
    getContractFactory(
      name: "AaveV2VariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2VariableDebtToken__factory>;
    getContractFactory(
      name: "GenericLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GenericLogic__factory>;
    getContractFactory(
      name: "ReserveLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLogic__factory>;
    getContractFactory(
      name: "ValidationLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidationLogic__factory>;
    getContractFactory(
      name: "TokenSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenSwap__factory>;
    getContractFactory(
      name: "BFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BFactory__factory>;
    getContractFactory(
      name: "BPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BPool__factory>;
    getContractFactory(
      name: "BRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BRegistry__factory>;
    getContractFactory(
      name: "ExchangeProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExchangeProxy__factory>;
    getContractFactory(
      name: "CERc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CERc20__factory>;
    getContractFactory(
      name: "CEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CEther__factory>;
    getContractFactory(
      name: "Comp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comp__factory>;
    getContractFactory(
      name: "CompoundGovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundGovernorAlpha__factory>;
    getContractFactory(
      name: "CompoundGovernorBravoDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundGovernorBravoDelegate__factory>;
    getContractFactory(
      name: "CompoundGovernorBravoDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundGovernorBravoDelegator__factory>;
    getContractFactory(
      name: "CompoundTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundTimelock__factory>;
    getContractFactory(
      name: "Comptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comptroller__factory>;
    getContractFactory(
      name: "PriceOracleProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracleProxy__factory>;
    getContractFactory(
      name: "Unitroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unitroller__factory>;
    getContractFactory(
      name: "WhitePaperInterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitePaperInterestRateModel__factory>;
    getContractFactory(
      name: "CRVToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CRVToken__factory>;
    getContractFactory(
      name: "CurveDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveDeposit__factory>;
    getContractFactory(
      name: "CurvePoolERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurvePoolERC20__factory>;
    getContractFactory(
      name: "GaugeController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GaugeController__factory>;
    getContractFactory(
      name: "LiquidityGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityGauge__factory>;
    getContractFactory(
      name: "LiquidityGaugeReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityGaugeReward__factory>;
    getContractFactory(
      name: "Minter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Minter__factory>;
    getContractFactory(
      name: "Stableswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Stableswap__factory>;
    getContractFactory(
      name: "DMMFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DMMFactory__factory>;
    getContractFactory(
      name: "DMMPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DMMPool__factory>;
    getContractFactory(
      name: "DMMRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DMMRouter02__factory>;
    getContractFactory(
      name: "KyberNetworkTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KyberNetworkTokenV2__factory>;
    getContractFactory(
      name: "PerpV2AccountBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2AccountBalance__factory>;
    getContractFactory(
      name: "PerpV2BaseToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2BaseToken__factory>;
    getContractFactory(
      name: "PerpV2ChainlinkPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2ChainlinkPriceFeed__factory>;
    getContractFactory(
      name: "PerpV2ClearingHouse",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2ClearingHouse__factory>;
    getContractFactory(
      name: "PerpV2ClearingHouseConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2ClearingHouseConfig__factory>;
    getContractFactory(
      name: "PerpV2Exchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2Exchange__factory>;
    getContractFactory(
      name: "PerpV2InsuranceFund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2InsuranceFund__factory>;
    getContractFactory(
      name: "PerpV2MarketRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2MarketRegistry__factory>;
    getContractFactory(
      name: "PerpV2OrderBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2OrderBook__factory>;
    getContractFactory(
      name: "PerpV2Quoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2Quoter__factory>;
    getContractFactory(
      name: "PerpV2QuoteToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2QuoteToken__factory>;
    getContractFactory(
      name: "PerpV2TestAggregatorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2TestAggregatorV3__factory>;
    getContractFactory(
      name: "PerpV2Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2Vault__factory>;
    getContractFactory(
      name: "PerpV2VirtualToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpV2VirtualToken__factory>;
    getContractFactory(
      name: "SingularityNetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SingularityNetToken__factory>;
    getContractFactory(
      name: "DelegateRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelegateRegistry__factory>;
    getContractFactory(
      name: "StakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRewards__factory>;
    getContractFactory(
      name: "Uni",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uni__factory>;
    getContractFactory(
      name: "UniswapGovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapGovernorAlpha__factory>;
    getContractFactory(
      name: "UniswapTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapTimelock__factory>;
    getContractFactory(
      name: "UniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Factory__factory>;
    getContractFactory(
      name: "UniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Pair__factory>;
    getContractFactory(
      name: "UniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Router02__factory>;
    getContractFactory(
      name: "NFTDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTDescriptor__factory>;
    getContractFactory(
      name: "NonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonfungiblePositionManager__factory>;
    getContractFactory(
      name: "Quoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Quoter__factory>;
    getContractFactory(
      name: "SwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapRouter__factory>;
    getContractFactory(
      name: "UniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Factory__factory>;
    getContractFactory(
      name: "UniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Pool__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Registry__factory>;
    getContractFactory(
      name: "Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vault__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
