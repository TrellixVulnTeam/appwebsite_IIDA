/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface PositionMockInterface extends ethers.utils.Interface {
  functions: {
    "initialize(address)": FunctionFragment;
    "testCalculateAndEditDefaultPosition(address,address,uint256,uint256)": FunctionFragment;
    "testCalculateDefaultEditPositionUnit(uint256,uint256,uint256,uint256)": FunctionFragment;
    "testEditDefaultPosition(address,address,uint256)": FunctionFragment;
    "testEditExternalPosition(address,address,address,int256,bytes)": FunctionFragment;
    "testGetDefaultPositionUnit(uint256,uint256)": FunctionFragment;
    "testGetDefaultTotalNotional(uint256,uint256)": FunctionFragment;
    "testGetDefaultTrackedBalance(address,address)": FunctionFragment;
    "testHasDefaultPosition(address,address)": FunctionFragment;
    "testHasExternalPosition(address,address)": FunctionFragment;
    "testHasSufficientDefaultUnits(address,address,uint256)": FunctionFragment;
    "testHasSufficientExternalUnits(address,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "testCalculateAndEditDefaultPosition",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testCalculateDefaultEditPositionUnit",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testEditDefaultPosition",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testEditExternalPosition",
    values: [string, string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetDefaultPositionUnit",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetDefaultTotalNotional",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetDefaultTrackedBalance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "testHasDefaultPosition",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "testHasExternalPosition",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "testHasSufficientDefaultUnits",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testHasSufficientExternalUnits",
    values: [string, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "testCalculateAndEditDefaultPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testCalculateDefaultEditPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testEditDefaultPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testEditExternalPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetDefaultPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetDefaultTotalNotional",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetDefaultTrackedBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testHasDefaultPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testHasExternalPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testHasSufficientDefaultUnits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testHasSufficientExternalUnits",
    data: BytesLike
  ): Result;

  events: {};
}

export class PositionMock extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PositionMockInterface;

  functions: {
    initialize(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testCalculateAndEditDefaultPosition(
      _setToken: string,
      _component: string,
      _setTotalSupply: BigNumberish,
      _componentPreviousBalance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testCalculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    testEditDefaultPosition(
      _setToken: string,
      _component: string,
      _newUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testEditExternalPosition(
      _setToken: string,
      _component: string,
      _module: string,
      _newUnit: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testGetDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    testGetDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    testGetDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    testHasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    testHasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    testHasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    testHasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _module: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  initialize(
    _setToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testCalculateAndEditDefaultPosition(
    _setToken: string,
    _component: string,
    _setTotalSupply: BigNumberish,
    _componentPreviousBalance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testCalculateDefaultEditPositionUnit(
    _setTokenSupply: BigNumberish,
    _preTotalNotional: BigNumberish,
    _postTotalNotional: BigNumberish,
    _prePositionUnit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  testEditDefaultPosition(
    _setToken: string,
    _component: string,
    _newUnit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testEditExternalPosition(
    _setToken: string,
    _component: string,
    _module: string,
    _newUnit: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testGetDefaultPositionUnit(
    _setTokenSupply: BigNumberish,
    _totalNotional: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  testGetDefaultTotalNotional(
    _setTokenSupply: BigNumberish,
    _positionUnit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  testGetDefaultTrackedBalance(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  testHasDefaultPosition(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  testHasExternalPosition(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  testHasSufficientDefaultUnits(
    _setToken: string,
    _component: string,
    _unit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  testHasSufficientExternalUnits(
    _setToken: string,
    _component: string,
    _module: string,
    _unit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    initialize(_setToken: string, overrides?: CallOverrides): Promise<void>;

    testCalculateAndEditDefaultPosition(
      _setToken: string,
      _component: string,
      _setTotalSupply: BigNumberish,
      _componentPreviousBalance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    testCalculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testEditDefaultPosition(
      _setToken: string,
      _component: string,
      _newUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testEditExternalPosition(
      _setToken: string,
      _component: string,
      _module: string,
      _newUnit: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    testGetDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testHasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    testHasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    testHasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    testHasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _module: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    initialize(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testCalculateAndEditDefaultPosition(
      _setToken: string,
      _component: string,
      _setTotalSupply: BigNumberish,
      _componentPreviousBalance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testCalculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testEditDefaultPosition(
      _setToken: string,
      _component: string,
      _newUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testEditExternalPosition(
      _setToken: string,
      _component: string,
      _module: string,
      _newUnit: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testGetDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testHasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testHasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testHasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testHasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _module: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initialize(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testCalculateAndEditDefaultPosition(
      _setToken: string,
      _component: string,
      _setTotalSupply: BigNumberish,
      _componentPreviousBalance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testCalculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testEditDefaultPosition(
      _setToken: string,
      _component: string,
      _newUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testEditExternalPosition(
      _setToken: string,
      _component: string,
      _module: string,
      _newUnit: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testGetDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testGetDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testGetDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testHasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testHasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testHasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testHasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _module: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
