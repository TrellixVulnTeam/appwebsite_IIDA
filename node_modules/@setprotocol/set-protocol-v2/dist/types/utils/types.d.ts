import { BigNumber } from "ethers";
import { ContractTransaction as ContractTransactionType, Wallet as WalletType } from "ethers";
export declare type Address = string;
export declare type Bytes = string;
export declare type Position = {
    component: Address;
    module: Address;
    unit: BigNumber;
    positionState: number;
    data: string;
};
export declare type ContractTransaction = ContractTransactionType;
export declare type Wallet = WalletType;
export interface StreamingFeeState {
    feeRecipient: Address;
    streamingFeePercentage: BigNumber;
    maxStreamingFeePercentage: BigNumber;
    lastStreamingFeeTimestamp: BigNumber;
}
export interface AirdropSettings {
    airdrops: Address[];
    feeRecipient: Address;
    airdropFee: BigNumber;
    anyoneAbsorb: boolean;
}
export interface NAVIssuanceSettings {
    managerIssuanceHook: Address;
    managerRedemptionHook: Address;
    reserveAssets: Address[];
    feeRecipient: Address;
    managerFees: [BigNumber, BigNumber];
    maxManagerFee: BigNumber;
    premiumPercentage: BigNumber;
    maxPremiumPercentage: BigNumber;
    minSetTokenSupply: BigNumber;
}
export interface CustomOracleNAVIssuanceSettings extends NAVIssuanceSettings {
    setValuer: Address;
}
