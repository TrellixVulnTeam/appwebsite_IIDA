import { BigNumber } from "ethers";
import { UniswapV2Pair, SetToken, StakingRewards, StandardTokenMock, WETH9, UniswapV2Router02 } from "../contracts";
import { Address } from "../types";
export declare const calculateLPTokensIssued: (pool: UniswapV2Pair, amountOne: BigNumber, amountTwo: BigNumber) => Promise<BigNumber>;
export declare const calculateEngageQuantities: (setToken: SetToken, assetOne: StandardTokenMock | WETH9, assetTwo: StandardTokenMock | WETH9, lpToken: UniswapV2Pair, stakingRewards: StakingRewards, reservePercentage: BigNumber, extraAssetOne?: BigNumber, extraAssetTwo?: BigNumber) => Promise<[BigNumber, BigNumber]>;
export declare const calculateRebalanceFlows: (setToken: SetToken, router: UniswapV2Router02, sellTokenQuantity: BigNumber, assetOne: StandardTokenMock | WETH9, assetTwo: StandardTokenMock | WETH9, assetOneToTwoPrice: BigNumber, extraAssetOne?: BigNumber, extraAssetTwo?: BigNumber) => Promise<BigNumber[]>;
export declare const calculateRebalanceQuantity: (sellTokenQuantity: BigNumber, setToken: SetToken, assetOne: StandardTokenMock | WETH9, assetTwo: StandardTokenMock | WETH9, assetOneToTwoPrice: BigNumber, extraAssetOne?: BigNumber, extraAssetTwo?: BigNumber) => Promise<[BigNumber, Address, Address]>;
export declare const calculateTokensInReserve: (setToken: SetToken, assetOne: StandardTokenMock | WETH9, assetTwo: StandardTokenMock | WETH9, lpToken: UniswapV2Pair, stakingRewards: StakingRewards) => Promise<[BigNumber, BigNumber]>;
export declare const getReservesSafe: (assetOne: Address, assetTwo: Address, lpToken: UniswapV2Pair) => Promise<[BigNumber, BigNumber]>;
export declare const min: (valueOne: BigNumber, valueTwo: BigNumber) => BigNumber;
