import { BigNumber, providers } from "ethers";
import { Address } from "../types";
import { Account } from "../test/types";
import { BFactory, BPool, BRegistry, ExchangeProxy } from "../contracts/balancer";
import { StandardTokenMock } from "../contracts";
import { WETH9 } from "../../typechain/WETH9";
export declare class BalancerFixture {
    private _deployer;
    private _ownerSigner;
    owner: Account;
    factory: BFactory;
    exchange: ExchangeProxy;
    registry: BRegistry;
    wethDaiPool: BPool;
    wethWbtcPool: BPool;
    wbtcDaiPool: BPool;
    constructor(provider: providers.Web3Provider | providers.JsonRpcProvider, ownerAddress: Address);
    initialize(_owner: Account, _weth: WETH9, _wbtc: StandardTokenMock, _dai: StandardTokenMock): Promise<void>;
    createNewPool(tokenOne: StandardTokenMock | WETH9, tokenTwo: StandardTokenMock | WETH9, tokenOneBalance: BigNumber, tokenTwoBalance: BigNumber): Promise<BPool>;
    private getPoolAddressFromTransaction;
}
