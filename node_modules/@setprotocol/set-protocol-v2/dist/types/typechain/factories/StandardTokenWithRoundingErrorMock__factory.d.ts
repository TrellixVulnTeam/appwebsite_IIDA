import { Signer, BigNumberish, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StandardTokenWithRoundingErrorMock, StandardTokenWithRoundingErrorMockInterface } from "../StandardTokenWithRoundingErrorMock";
export declare class StandardTokenWithRoundingErrorMock__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_initialAccount: string, _initialBalance: BigNumberish, _err: BigNumberish, _name: string, _symbol: string, arg5: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<StandardTokenWithRoundingErrorMock>;
    getDeployTransaction(_initialAccount: string, _initialBalance: BigNumberish, _err: BigNumberish, _name: string, _symbol: string, arg5: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): StandardTokenWithRoundingErrorMock;
    connect(signer: Signer): StandardTokenWithRoundingErrorMock__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b5060405162000fe738038062000fe7833981810160405260c08110156200003757600080fd5b8151602083015160408085015160608601805192519496939591949391820192846401000000008211156200006b57600080fd5b9083019060208201858111156200008157600080fd5b82516401000000008111828201881017156200009c57600080fd5b82525081516020918201929091019080838360005b83811015620000cb578181015183820152602001620000b1565b50505050905090810190601f168015620000f95780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011d57600080fd5b9083019060208201858111156200013357600080fd5b82516401000000008111828201881017156200014e57600080fd5b82525081516020918201929091019080838360005b838110156200017d57818101518382015260200162000163565b50505050905090810190601f168015620001ab5780820380516001836020036101000a031916815260200191505b5060409081526020918201516001600160a01b038a1660009081526003845291822089905560058990558651909450620001eb9350909186019062000214565b5081516200020190600190602085019062000214565b50505060029190915550620002b9915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025757805160ff191683800117855562000287565b8280016001018555821562000287579182015b82811115620002875782518255916020019190600101906200026a565b506200029592915062000299565b5090565b620002b691905b80821115620002955760008155600101620002a0565b90565b610d1e80620002c96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636ebcf60711610097578063a457c2d711610066578063a457c2d7146102c7578063a9059cbb146102f3578063ba0fb8611461031f578063dd62ed3e1461034d57610100565b80636ebcf6071461025657806370a082311461027c578063818c62b1146102a257806395d89b41146102bf57610100565b8063313ce567116100d3578063313ce5671461021257806338df76771461021a57806339509351146102225780633eaaf86b1461024e57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d61037b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b038135169060200135610409565b604080519115158252519081900360200190f35b6101ca610486565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b0381358116916020810135909116906040013561048c565b6101ca6106c5565b6101ca6106ca565b6101ae6004803603604081101561023857600080fd5b506001600160a01b0381351690602001356106d0565b6101ca61077e565b6101ca6004803603602081101561026c57600080fd5b50356001600160a01b0316610784565b6101ca6004803603602081101561029257600080fd5b50356001600160a01b0316610796565b6101ae600480360360208110156102b857600080fd5b503561082a565b61010d610832565b6101ae600480360360408110156102dd57600080fd5b506001600160a01b03813516906020013561088c565b6101ae6004803603604081101561030957600080fd5b506001600160a01b0381351690602001356108d5565b6101ca6004803603604081101561033557600080fd5b506001600160a01b0381358116916020013516610a1a565b6101ca6004803603604081101561036357600080fd5b506001600160a01b0381358116916020013516610a37565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b505050505081565b60006001600160a01b03831661041e57600080fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60055490565b60006001600160a01b0383166104d3576040805162461bcd60e51b81526020600482015260076024820152661d1bc81b9d5b1b60ca1b604482015290519081900360640190fd5b6001600160a01b038416600090815260036020526040902054821115610540576040805162461bcd60e51b815260206004820152601f60248201527f76616c75652067726561746572207468616e2066726f6d2062616c616e636500604482015290519081900360640190fd5b6001600160a01b03841660009081526004602090815260408083203384529091529020548211156105b8576040805162461bcd60e51b815260206004820152601a60248201527f76616c75652067726561746572207468616e20616c6c6f776564000000000000604482015290519081900360640190fd5b6001600160a01b0384166000908152600360205260409020546105e1908363ffffffff610a6216565b6001600160a01b038086166000908152600360205260408082209390935590851681522054610616908363ffffffff610aab16565b6001600160a01b03808516600090815260036020908152604080832094909455918716815260048252828120338252909152205461065a908363ffffffff610a6216565b6001600160a01b03808616600081815260046020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b60025481565b60006001600160a01b0383166106e557600080fd5b3360009081526004602090815260408083206001600160a01b0387168452909152902054610719908363ffffffff610aab16565b3360008181526004602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60055481565b60036020526000908152604090205481565b6001600160a01b03811660009081526003602052604081205460025482136107db576107d36107c6600254610b05565b829063ffffffff610aab16565b915050610825565b60006107fc6107f7600019600254610b6090919063ffffffff16565b610b05565b905080821061081e57610815828263ffffffff610a6216565b92505050610825565b6000925050505b919050565b600255600190565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104015780601f106103d657610100808354040283529160200191610401565b60006001600160a01b0383166108a157600080fd5b3360009081526004602090815260408083206001600160a01b0387168452909152902054610719908363ffffffff610a6216565b60006001600160a01b03831661091c576040805162461bcd60e51b81526020600482015260076024820152661d1bc81b9d5b1b60ca1b604482015290519081900360640190fd5b3360009081526003602052604090205482111561096a5760405162461bcd60e51b8152600401808060200182810382526021815260200180610cc86021913960400191505060405180910390fd5b3360009081526003602052604090205461098a908363ffffffff610a6216565b33600090815260036020526040808220929092556001600160a01b038516815220546109bc908363ffffffff610aab16565b6001600160a01b0384166000818152600360209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600460209081526000928352604080842090915290825290205481565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6000610aa483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c09565b9392505050565b600082820183811015610aa4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080821215610b5c576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fd5b5090565b600082610b6f57506000610480565b82600019148015610b835750600160ff1b82145b15610bbf5760405162461bcd60e51b8152600401808060200182810382526027815260200180610ca16027913960400191505060405180910390fd5b82820282848281610bcc57fe5b0514610aa45760405162461bcd60e51b8152600401808060200182810382526027815260200180610ca16027913960400191505060405180910390fd5b60008184841115610c985760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c5d578181015183820152602001610c45565b50505050905090810190601f168015610c8a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7776616c75652067726561746572207468616e2073656e6465722062616c616e6365a2646970667358221220859e428ad3a9dacc9a6cc14776b15e5a6d6b137c9e420d4c180343eb7a706cf564736f6c634300060a0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): StandardTokenWithRoundingErrorMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): StandardTokenWithRoundingErrorMock;
}
