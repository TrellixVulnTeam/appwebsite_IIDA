import { Signer, BigNumberish, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleMock, OracleMockInterface } from "../OracleMock";
export declare class OracleMock__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_startingPrice: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<OracleMock>;
    getDeployTransaction(_startingPrice: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): OracleMock;
    connect(signer: Signer): OracleMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506040516101083803806101088339818101604052602081101561003357600080fd5b505160005560c2806100466000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806357de26a41460415780638d6cc56d146059578063a035b1fe146075575b600080fd5b6047607b565b60408051918252519081900360200190f35b607360048036036020811015606d57600080fd5b50356081565b005b60476086565b60005490565b600055565b6000548156fea2646970667358221220bfc6bdb48969ea665170cf7a12bba567cfecc36599083c147738f4e97c69e89564736f6c634300060a0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): OracleMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OracleMock;
}
