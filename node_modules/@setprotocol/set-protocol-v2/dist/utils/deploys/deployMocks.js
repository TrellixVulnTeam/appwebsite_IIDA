"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ethers_1 = require("ethers");
var common_1 = require("../common");
var dependencies_1 = __importDefault(require("./dependencies"));
var AaveLendingPoolCoreMock__factory_1 = require("../../typechain/factories/AaveLendingPoolCoreMock__factory");
var AaveLendingPoolMock__factory_1 = require("../../typechain/factories/AaveLendingPoolMock__factory");
var AddressArrayUtilsMock__factory_1 = require("../../typechain/factories/AddressArrayUtilsMock__factory");
var AmmAdapterMock__factory_1 = require("../../typechain/factories/AmmAdapterMock__factory");
var ChainlinkAggregatorMock__factory_1 = require("../../typechain/factories/ChainlinkAggregatorMock__factory");
var ClaimAdapterMock__factory_1 = require("../../typechain/factories/ClaimAdapterMock__factory");
var CompoundMock__factory_1 = require("../../typechain/factories/CompoundMock__factory");
var ComptrollerMock__factory_1 = require("../../typechain/factories/ComptrollerMock__factory");
var ContractCallerMock__factory_1 = require("../../typechain/factories/ContractCallerMock__factory");
var CustomSetValuerMock__factory_1 = require("../../typechain/factories/CustomSetValuerMock__factory");
var DebtIssuanceMock__factory_1 = require("../../typechain/factories/DebtIssuanceMock__factory");
var DebtModuleMock__factory_1 = require("../../typechain/factories/DebtModuleMock__factory");
var ExplicitERC20Mock__factory_1 = require("../../typechain/factories/ExplicitERC20Mock__factory");
var ForceFunderMock__factory_1 = require("../../typechain/factories/ForceFunderMock__factory");
var GaugeControllerMock__factory_1 = require("../../typechain/factories/GaugeControllerMock__factory");
var GodModeMock__factory_1 = require("../../typechain/factories/GodModeMock__factory");
var GovernanceAdapterMock__factory_1 = require("../../typechain/factories/GovernanceAdapterMock__factory");
var InvokeMock__factory_1 = require("../../typechain/factories/InvokeMock__factory");
var KyberNetworkProxyMock__factory_1 = require("../../typechain/factories/KyberNetworkProxyMock__factory");
var ManagerIssuanceHookMock__factory_1 = require("../../typechain/factories/ManagerIssuanceHookMock__factory");
var ModuleBaseMock__factory_1 = require("../../typechain/factories/ModuleBaseMock__factory");
var ModuleIssuanceHookMock__factory_1 = require("../../typechain/factories/ModuleIssuanceHookMock__factory");
var NAVIssuanceCaller__factory_1 = require("../../typechain/factories/NAVIssuanceCaller__factory");
var NAVIssuanceHookMock__factory_1 = require("../../typechain/factories/NAVIssuanceHookMock__factory");
var OneInchExchangeMock__factory_1 = require("../../typechain/factories/OneInchExchangeMock__factory");
var OracleAdapterMock__factory_1 = require("../../typechain/factories/OracleAdapterMock__factory");
var OracleMock__factory_1 = require("../../typechain/factories/OracleMock__factory");
var YearnVaultMock__factory_1 = require("../../typechain/factories/YearnVaultMock__factory");
var PerpV2Mock__factory_1 = require("../../typechain/factories/PerpV2Mock__factory");
var PositionMock__factory_1 = require("../../typechain/factories/PositionMock__factory");
var PreciseUnitMathMock__factory_1 = require("../../typechain/factories/PreciseUnitMathMock__factory");
var ResourceIdentifierMock__factory_1 = require("../../typechain/factories/ResourceIdentifierMock__factory");
var StakingAdapterMock__factory_1 = require("../../typechain/factories/StakingAdapterMock__factory");
var StandardTokenMock__factory_1 = require("../../typechain/factories/StandardTokenMock__factory");
var StandardTokenWithRoundingErrorMock__factory_1 = require("../../typechain/factories/StandardTokenWithRoundingErrorMock__factory");
var StandardTokenWithFeeMock__factory_1 = require("../../typechain/factories/StandardTokenWithFeeMock__factory");
var TradeAdapterMock__factory_1 = require("../../typechain/factories/TradeAdapterMock__factory");
var Uint256ArrayUtilsMock__factory_1 = require("../../typechain/factories/Uint256ArrayUtilsMock__factory");
var WrapAdapterMock__factory_1 = require("../../typechain/factories/WrapAdapterMock__factory");
var WrapV2AdapterMock__factory_1 = require("../../typechain/factories/WrapV2AdapterMock__factory");
var ZeroExMock__factory_1 = require("../../typechain/factories/ZeroExMock__factory");
var SynthMock__factory_1 = require("../../typechain/factories/SynthMock__factory");
var SynthetixExchangerMock__factory_1 = require("../../typechain/factories/SynthetixExchangerMock__factory");
var YearnStrategyMock__factory_1 = require("../../typechain/factories/YearnStrategyMock__factory");
var AaveV2Mock__factory_1 = require("../../typechain/factories/AaveV2Mock__factory");
var DeployMocks = /** @class */ (function () {
    function DeployMocks(deployerSigner) {
        this._deployerSigner = deployerSigner;
    }
    DeployMocks.prototype.deployExplicitErc20Mock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ExplicitERC20Mock__factory_1.ExplicitERC20Mock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployInvokeMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new InvokeMock__factory_1.InvokeMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployManagerIssuanceHookMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ManagerIssuanceHookMock__factory_1.ManagerIssuanceHookMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployModuleIssuanceHookMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ModuleIssuanceHookMock__factory_1.ModuleIssuanceHookMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployNavIssuanceHookMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new NAVIssuanceHookMock__factory_1.NAVIssuanceHookMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployNAVIssuanceCaller = function (navIssuanceModule) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new NAVIssuanceCaller__factory_1.NAVIssuanceCaller__factory(this._deployerSigner).deploy(navIssuanceModule)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployAddressArrayUtilsMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new AddressArrayUtilsMock__factory_1.AddressArrayUtilsMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployUint256ArrayUtilsMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new Uint256ArrayUtilsMock__factory_1.Uint256ArrayUtilsMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployKyberNetworkProxyMock = function (mockWethAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new KyberNetworkProxyMock__factory_1.KyberNetworkProxyMock__factory(this._deployerSigner).deploy(mockWethAddress)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployModuleBaseMock = function (controllerAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ModuleBaseMock__factory_1.ModuleBaseMock__factory(this._deployerSigner).deploy(controllerAddress)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployGodModeMock = function (controllerAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new GodModeMock__factory_1.GodModeMock__factory(this._deployerSigner).deploy(controllerAddress)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployDebtModuleMock = function (controllerAddress, moduleAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new DebtModuleMock__factory_1.DebtModuleMock__factory(this._deployerSigner).deploy(controllerAddress, moduleAddress)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployGovernanceAdapterMock = function (initialProposalId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new GovernanceAdapterMock__factory_1.GovernanceAdapterMock__factory(this._deployerSigner).deploy(initialProposalId)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployOneInchExchangeMock = function (sendToken, receiveToken, sendQuantity, receiveQuantity) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new OneInchExchangeMock__factory_1.OneInchExchangeMock__factory(this._deployerSigner).deploy(sendToken, receiveToken, sendQuantity, receiveQuantity)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployZeroExMock = function (sendToken, receiveToken, sendQuantity, receiveQuantity) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ZeroExMock__factory_1.ZeroExMock__factory(this._deployerSigner).deploy(sendToken, receiveToken, sendQuantity, receiveQuantity)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployOracleMock = function (initialValue) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new OracleMock__factory_1.OracleMock__factory(this._deployerSigner).deploy(initialValue)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployYearnVaultMock = function (pricePerShare) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new YearnVaultMock__factory_1.YearnVaultMock__factory(this._deployerSigner).deploy(pricePerShare)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployOracleAdapterMock = function (asset, dummyPrice) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new OracleAdapterMock__factory_1.OracleAdapterMock__factory(this._deployerSigner).deploy(asset, dummyPrice)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployPositionMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new PositionMock__factory_1.PositionMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployPreciseUnitMathMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new PreciseUnitMathMock__factory_1.PreciseUnitMathMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployResourceIdentifierMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ResourceIdentifierMock__factory_1.ResourceIdentifierMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployStakingAdapterMock = function (stakingAsset) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new StakingAdapterMock__factory_1.StakingAdapterMock__factory(this._deployerSigner)
                            .deploy(stakingAsset)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployTokenMock = function (initialAccount, initialBalance, decimals, name, symbol) {
        if (initialBalance === void 0) { initialBalance = (0, common_1.ether)(1000000000); }
        if (decimals === void 0) { decimals = 18; }
        if (name === void 0) { name = "Token"; }
        if (symbol === void 0) { symbol = "Symbol"; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new StandardTokenMock__factory_1.StandardTokenMock__factory(this._deployerSigner)
                            .deploy(initialAccount, initialBalance, name, symbol, decimals)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployTokenWithFeeMock = function (initialAccount, initialBalance, fee, name, symbol) {
        if (initialBalance === void 0) { initialBalance = (0, common_1.ether)(1000000000); }
        if (fee === void 0) { fee = (0, common_1.ether)(0.1); }
        if (name === void 0) { name = "Token"; }
        if (symbol === void 0) { symbol = "Symbol"; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new StandardTokenWithFeeMock__factory_1.StandardTokenWithFeeMock__factory(this._deployerSigner)
                            .deploy(initialAccount, initialBalance, name, symbol, fee)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployTokenWithErrorMock = function (initialAccount, initialBalance, error, name, symbol, decimals) {
        if (name === void 0) { name = "Token"; }
        if (symbol === void 0) { symbol = "Symbol"; }
        if (decimals === void 0) { decimals = ethers_1.BigNumber.from(18); }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new StandardTokenWithRoundingErrorMock__factory_1.StandardTokenWithRoundingErrorMock__factory(this._deployerSigner).deploy(initialAccount, initialBalance, error, name, symbol, decimals)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployTradeAdapterMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new TradeAdapterMock__factory_1.TradeAdapterMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployAmmAdapterMock = function (_underlyingTokens) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new AmmAdapterMock__factory_1.AmmAdapterMock__factory(this._deployerSigner).deploy(_underlyingTokens)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployWrapAdapterMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new WrapAdapterMock__factory_1.WrapAdapterMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployAaveLendingPoolCoreMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new AaveLendingPoolCoreMock__factory_1.AaveLendingPoolCoreMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployAaveLendingPoolMock = function (aaveLendingPoolCore) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new AaveLendingPoolMock__factory_1.AaveLendingPoolMock__factory(this._deployerSigner).deploy(aaveLendingPoolCore)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployAaveV2Mock = function (libraryName, libraryAddress) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, new AaveV2Mock__factory_1.AaveV2Mock__factory((_a = {},
                            _a[libraryName] = libraryAddress,
                            _a), this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployPerpV2Mock = function (libraryName, libraryAddress) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, new PerpV2Mock__factory_1.PerpV2Mock__factory((_a = {},
                            _a[libraryName] = libraryAddress,
                            _a), this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployClaimAdapterMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ClaimAdapterMock__factory_1.ClaimAdapterMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployGaugeControllerMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new GaugeControllerMock__factory_1.GaugeControllerMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployContractCallerMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ContractCallerMock__factory_1.ContractCallerMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployDebtIssuanceMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new DebtIssuanceMock__factory_1.DebtIssuanceMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployComptrollerMock = function (comp, compAmount, cToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ComptrollerMock__factory_1.ComptrollerMock__factory(this._deployerSigner).deploy(comp, compAmount, cToken)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployCompoundMock = function (libraryName, libraryAddress) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, new CompoundMock__factory_1.CompoundMock__factory((_a = {},
                            _a[libraryName] = libraryAddress,
                            _a), this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deploySynthMock = function (initialAccount, currencyKey, initialBalance, name, symbol) {
        if (initialBalance === void 0) { initialBalance = (0, common_1.ether)(1000000000); }
        if (name === void 0) { name = "Token"; }
        if (symbol === void 0) { symbol = "Symbol"; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new SynthMock__factory_1.SynthMock__factory(this._deployerSigner)
                            .deploy(initialAccount, initialBalance, name, symbol, 18, currencyKey)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deploySynthetixExchangerMock = function (sUsd, sEth, sBtc, currencyKeys, rates) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new SynthetixExchangerMock__factory_1.SynthetixExchangerMock__factory(this._deployerSigner).deploy(sUsd, sEth, sBtc, currencyKeys.sUsd, currencyKeys.sEth, currencyKeys.sBtc, rates.usd.eth, rates.eth.usd, rates.usd.btc, rates.btc.usd)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployCustomSetValuerMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new CustomSetValuerMock__factory_1.CustomSetValuerMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployYearnStrategyMock = function (vault) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new YearnStrategyMock__factory_1.YearnStrategyMock__factory(this._deployerSigner).deploy(vault)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployForceFunderMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ForceFunderMock__factory_1.ForceFunderMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployWrapV2AdapterMock = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new WrapV2AdapterMock__factory_1.WrapV2AdapterMock__factory(this._deployerSigner).deploy()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.deployChainlinkAggregatorMock = function (decimals) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new ChainlinkAggregatorMock__factory_1.ChainlinkAggregatorMock__factory(this._deployerSigner).deploy(decimals)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /** ***********************************
     * Instance getters
     ************************************/
    DeployMocks.prototype.getTokenMock = function (token) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new StandardTokenMock__factory_1.StandardTokenMock__factory(this._deployerSigner).attach(token)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DeployMocks.prototype.getForkedZeroExExchange = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, ZeroExMock__factory_1.ZeroExMock__factory.connect(dependencies_1.default.ZERO_EX_EXCHANGE[1], this._deployerSigner)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return DeployMocks;
}());
exports.default = DeployMocks;
