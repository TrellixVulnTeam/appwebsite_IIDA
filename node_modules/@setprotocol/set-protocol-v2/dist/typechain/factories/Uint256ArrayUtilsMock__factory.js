"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Uint256ArrayUtilsMock__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "A",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "B",
                type: "uint256[]",
            },
        ],
        name: "testExtend",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506102b8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636449bc0114610030575b600080fd5b61004361003e3660046101dd565b610059565b604051610050919061023e565b60405180910390f35b606061006b838363ffffffff61007216565b9392505050565b81518151606091908281830167ffffffffffffffff8111801561009457600080fd5b506040519080825280602002602001820160405280156100be578160200160208202803683370190505b50905060005b838110156100ff578681815181106100d857fe5b60200260200101518282815181106100ec57fe5b60209081029190910101526001016100c4565b5060005b828110156101405785818151811061011757fe5b6020026020010151828286018151811061012d57fe5b6020908102919091010152600101610103565b5095945050505050565b600082601f83011261015a578081fd5b813567ffffffffffffffff80821115610171578283fd5b60208083026040518282820101818110858211171561018e578687fd5b6040528481529450818501925085820181870183018810156101af57600080fd5b600091505b848210156101d25780358452928201926001919091019082016101b4565b505050505092915050565b600080604083850312156101ef578182fd5b823567ffffffffffffffff80821115610206578384fd5b6102128683870161014a565b93506020850135915080821115610227578283fd5b506102348582860161014a565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156102765783518352928401929184019160010161025a565b5090969550505050505056fea26469706673582212201561a87e90c1f3b0c810bf7dd273d43c17924d5f6394122a609b59883bccc7ff64736f6c634300060a0033";
var Uint256ArrayUtilsMock__factory = /** @class */ (function (_super) {
    __extends(Uint256ArrayUtilsMock__factory, _super);
    function Uint256ArrayUtilsMock__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    Uint256ArrayUtilsMock__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Uint256ArrayUtilsMock__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Uint256ArrayUtilsMock__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Uint256ArrayUtilsMock__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Uint256ArrayUtilsMock__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Uint256ArrayUtilsMock__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Uint256ArrayUtilsMock__factory.bytecode = _bytecode;
    Uint256ArrayUtilsMock__factory.abi = _abi;
    return Uint256ArrayUtilsMock__factory;
}(ethers_1.ContractFactory));
exports.Uint256ArrayUtilsMock__factory = Uint256ArrayUtilsMock__factory;
