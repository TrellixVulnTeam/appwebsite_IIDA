"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20Viewer__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_tokenAddresses",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "_ownerAddresses",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "_spenderAddresses",
                type: "address[]",
            },
        ],
        name: "batchFetchAllowances",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_tokenAddresses",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "_ownerAddresses",
                type: "address[]",
            },
        ],
        name: "batchFetchBalancesOf",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50610532806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063312c61131461003b57806381316c8414610149575b600080fd5b6100f96004803603604081101561005157600080fd5b810190602081018135600160201b81111561006b57600080fd5b82018360208201111561007d57600080fd5b803590602001918460208302840111600160201b8311171561009e57600080fd5b919390929091602081019035600160201b8111156100bb57600080fd5b8201836020820111156100cd57600080fd5b803590602001918460208302840111600160201b831117156100ee57600080fd5b509092509050610257565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561013557818101518382015260200161011d565b505050509050019250505060405180910390f35b6100f96004803603606081101561015f57600080fd5b810190602081018135600160201b81111561017957600080fd5b82018360208201111561018b57600080fd5b803590602001918460208302840111600160201b831117156101ac57600080fd5b919390929091602081019035600160201b8111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460208302840111600160201b831117156101fc57600080fd5b919390929091602081019035600160201b81111561021957600080fd5b82018360208201111561022b57600080fd5b803590602001918460208302840111600160201b8311171561024c57600080fd5b50909250905061038e565b606083818167ffffffffffffffff8111801561027257600080fd5b5060405190808252806020026020018201604052801561029c578160200160208202803683370190505b50905060005b82811015610383578787828181106102b657fe5b905060200201356001600160a01b03166001600160a01b03166370a082318787848181106102e057fe5b905060200201356001600160a01b03166040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561033657600080fd5b505afa15801561034a573d6000803e3d6000fd5b505050506040513d602081101561036057600080fd5b5051825183908390811061037057fe5b60209081029190910101526001016102a2565b509695505050505050565b606085818167ffffffffffffffff811180156103a957600080fd5b506040519080825280602002602001820160405280156103d3578160200160208202803683370190505b50905060005b828110156104ef578989828181106103ed57fe5b905060200201356001600160a01b03166001600160a01b031663dd62ed3e89898481811061041757fe5b905060200201356001600160a01b031688888581811061043357fe5b905060200201356001600160a01b03166040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b03168152602001826001600160a01b03166001600160a01b031681526020019250505060206040518083038186803b1580156104a257600080fd5b505afa1580156104b6573d6000803e3d6000fd5b505050506040513d60208110156104cc57600080fd5b505182518390839081106104dc57fe5b60209081029190910101526001016103d9565b509897505050505050505056fea264697066735822122052b39d0a6f7b2c0ffde922a445d0fd23017ca19141b1dc6388c7e9eb3d3fe48664736f6c634300060a0033";
var ERC20Viewer__factory = /** @class */ (function (_super) {
    __extends(ERC20Viewer__factory, _super);
    function ERC20Viewer__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    ERC20Viewer__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ERC20Viewer__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ERC20Viewer__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ERC20Viewer__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ERC20Viewer__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ERC20Viewer__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ERC20Viewer__factory.bytecode = _bytecode;
    ERC20Viewer__factory.abi = _abi;
    return ERC20Viewer__factory;
}(ethers_1.ContractFactory));
exports.ERC20Viewer__factory = ERC20Viewer__factory;
