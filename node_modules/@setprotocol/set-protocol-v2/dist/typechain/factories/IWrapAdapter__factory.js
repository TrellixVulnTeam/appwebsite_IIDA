"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IWrapAdapter__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "ETH_TOKEN_ADDRESS",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_wrappedToken",
                type: "address",
            },
        ],
        name: "getSpenderAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_wrappedToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_wrappedTokenUnits",
                type: "uint256",
            },
        ],
        name: "getUnwrapCallData",
        outputs: [
            {
                internalType: "address",
                name: "_subject",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_calldata",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_wrappedToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_underlyingUnits",
                type: "uint256",
            },
        ],
        name: "getWrapCallData",
        outputs: [
            {
                internalType: "address",
                name: "_subject",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_calldata",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var IWrapAdapter__factory = /** @class */ (function () {
    function IWrapAdapter__factory() {
    }
    IWrapAdapter__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IWrapAdapter__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IWrapAdapter__factory.abi = _abi;
    return IWrapAdapter__factory;
}());
exports.IWrapAdapter__factory = IWrapAdapter__factory;
