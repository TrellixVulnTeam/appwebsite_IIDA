"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PerpV2TestAggregatorV3__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
        gas: "0x01ba8140",
    },
    {
        inputs: [],
        name: "description",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
        gas: "0x01ba8140",
    },
    {
        inputs: [
            {
                internalType: "uint80",
                name: "_roundId",
                type: "uint80",
            },
        ],
        name: "getRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80",
            },
        ],
        stateMutability: "view",
        type: "function",
        gas: "0x01ba8140",
    },
    {
        inputs: [],
        name: "latestRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80",
            },
        ],
        stateMutability: "view",
        type: "function",
        gas: "0x01ba8140",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
        gas: "0x01ba8140",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506101e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063313ce5671461005c57806354fd4d501461007a5780637284e4161461008f5780639a6fc8f5146100a4578063feaf968c146100c8575b600080fd5b6100646100d0565b60405161007191906101a5565b60405180910390f35b6100826100d0565b604051610071919061016c565b6100976100d7565b6040516100719190610119565b6100b76100b23660046100eb565b6100de565b604051610071959493929190610175565b6100b76100de565b6000806000fd5b6060600080fd5b6000806000806000806000fd5b6000602082840312156100fc578081fd5b81356001600160501b0381168114610112578182fd5b9392505050565b6000602080835283518082850152825b8181101561014557858101830151858201604001528201610129565b818111156101565783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b6001600160501b039586168152602081019490945260408401929092526060830152909116608082015260a00190565b60ff9190911681526020019056fea26469706673582212203753f98b73a9090957ed70bfb25c49d2457f004d91f7f96f778e6e2f31abb8ab64736f6c63430007060033";
var PerpV2TestAggregatorV3__factory = /** @class */ (function (_super) {
    __extends(PerpV2TestAggregatorV3__factory, _super);
    function PerpV2TestAggregatorV3__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    PerpV2TestAggregatorV3__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    PerpV2TestAggregatorV3__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    PerpV2TestAggregatorV3__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    PerpV2TestAggregatorV3__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    PerpV2TestAggregatorV3__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    PerpV2TestAggregatorV3__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    PerpV2TestAggregatorV3__factory.bytecode = _bytecode;
    PerpV2TestAggregatorV3__factory.abi = _abi;
    return PerpV2TestAggregatorV3__factory;
}(ethers_1.ContractFactory));
exports.PerpV2TestAggregatorV3__factory = PerpV2TestAggregatorV3__factory;
