"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IExchange__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
        ],
        name: "getAllPendingFundingPayment",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "baseToken",
                type: "address",
            },
        ],
        name: "getMaxTickCrossedWithinBlock",
        outputs: [
            {
                internalType: "uint24",
                name: "",
                type: "uint24",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "address",
                name: "baseToken",
                type: "address",
            },
        ],
        name: "getPendingFundingPayment",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "baseToken",
                type: "address",
            },
        ],
        name: "getPool",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "baseToken",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "twapInterval",
                type: "uint32",
            },
        ],
        name: "getSqrtMarkTwapX96",
        outputs: [
            {
                internalType: "uint160",
                name: "",
                type: "uint160",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "baseToken",
                type: "address",
            },
        ],
        name: "getTick",
        outputs: [
            {
                internalType: "int24",
                name: "",
                type: "int24",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var IExchange__factory = /** @class */ (function () {
    function IExchange__factory() {
    }
    IExchange__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IExchange__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IExchange__factory.abi = _abi;
    return IExchange__factory;
}());
exports.IExchange__factory = IExchange__factory;
