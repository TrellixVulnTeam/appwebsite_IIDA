{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/components/TopBar/components/WalletButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Button } from 'react-neu';\nimport styled from 'styled-components';\nimport Davatar from '@davatar/react';\nimport { shortenAddress, useLookupAddress } from '@usedapp/core';\nimport UnlockWalletModal from 'components/UnlockWalletModal';\nimport WalletModal from 'components/WalletModal';\nimport useWallet from 'hooks/useWallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WalletButton = () => {\n  _s();\n\n  const {\n    account,\n    ethereum,\n    isShowingWalletModal,\n    onCloseWalletModal,\n    onOpenWalletModal,\n    status,\n    connect\n  } = useWallet();\n  const ens = useLookupAddress();\n  const onClick = useCallback(() => {\n    var _ethereum;\n\n    // If the user comes from the onto app it should directly connect without opening the web3 modal\n    if (status !== 'connected' && ((_ethereum = window.ethereum) === null || _ethereum === void 0 ? void 0 : _ethereum.isONTO)) {\n      connect('injected');\n    } else {\n      onOpenWalletModal();\n    }\n  }, [status, connect, onOpenWalletModal]);\n  const openWalletText = getOpenWalletText(account, ens);\n  const variant = !!account ? 'tertiary' : 'default';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClick,\n      size: \"md\",\n      text: openWalletText,\n      variant: variant,\n      children: account && /*#__PURE__*/_jsxDEV(StyledDavatar, {\n        children: /*#__PURE__*/_jsxDEV(Davatar, {\n          size: 24,\n          address: account,\n          provider: ethereum,\n          generatedAvatarType: \"jazzicon\" // optional, 'jazzicon' or 'blockies'\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletModal, {\n      isOpen: !!account && isShowingWalletModal,\n      onDismiss: onCloseWalletModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UnlockWalletModal, {\n      isOpen: !account && isShowingWalletModal,\n      onDismiss: onCloseWalletModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WalletButton, \"Ld3yBoXKV/8JYtGwMWvA2mSXJ2g=\", false, function () {\n  return [useWallet, useLookupAddress];\n});\n\n_c = WalletButton;\n\nfunction getOpenWalletText(account, ens) {\n  if (account && ens) {\n    return ens;\n  } else if (account) {\n    return shortenAddress(account);\n  } else {\n    return 'Connect Wallet';\n  }\n}\n\nconst StyledDavatar = styled.div`\n  margin-right: 6px;\n`;\n_c2 = StyledDavatar;\nexport default WalletButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WalletButton\");\n$RefreshReg$(_c2, \"StyledDavatar\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/components/TopBar/components/WalletButton.tsx"],"names":["React","useCallback","Button","styled","Davatar","shortenAddress","useLookupAddress","UnlockWalletModal","WalletModal","useWallet","WalletButton","account","ethereum","isShowingWalletModal","onCloseWalletModal","onOpenWalletModal","status","connect","ens","onClick","window","isONTO","openWalletText","getOpenWalletText","variant","StyledDavatar","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AAEA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AAAA;;AACnC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA;AAPI,MAQFR,SAAS,EARb;AASA,QAAMS,GAAG,GAAGZ,gBAAgB,EAA5B;AAEA,QAAMa,OAAO,GAAGlB,WAAW,CAAC,MAAM;AAAA;;AAChC;AACA,QAAIe,MAAM,KAAK,WAAX,kBAA2BI,MAAD,CAAgBR,QAA1C,8CAA0B,UAA0BS,MAApD,CAAJ,EAAgE;AAC9DJ,MAAAA,OAAO,CAAC,UAAD,CAAP;AACD,KAFD,MAEO;AACLF,MAAAA,iBAAiB;AAClB;AACF,GAP0B,EAOxB,CAACC,MAAD,EAASC,OAAT,EAAkBF,iBAAlB,CAPwB,CAA3B;AASA,QAAMO,cAAc,GAAGC,iBAAiB,CAACZ,OAAD,EAAUO,GAAV,CAAxC;AACA,QAAMM,OAAO,GAAG,CAAC,CAACb,OAAF,GAAY,UAAZ,GAAyB,SAAzC;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEQ,OADX;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,IAAI,EAAEG,cAHR;AAIE,MAAA,OAAO,EAAEE,OAJX;AAAA,gBAMGb,OAAO,iBACN,QAAC,aAAD;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,OAAO,EAAEA,OAFX;AAGE,UAAA,QAAQ,EAAEC,QAHZ;AAIE,UAAA,mBAAmB,EAAC,UAJtB,CAIiC;;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,WAAD;AACE,MAAA,MAAM,EAAE,CAAC,CAACD,OAAF,IAAaE,oBADvB;AAEE,MAAA,SAAS,EAAEC;AAFb;AAAA;AAAA;AAAA;AAAA,YAlBF,eAsBE,QAAC,iBAAD;AACE,MAAA,MAAM,EAAE,CAACH,OAAD,IAAYE,oBADtB;AAEE,MAAA,SAAS,EAAEC;AAFb;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA6BD,CArDD;;GAAMJ,Y;UASAD,S,EACQH,gB;;;KAVRI,Y;;AAuDN,SAASa,iBAAT,CACEZ,OADF,EAEEO,GAFF,EAGE;AACA,MAAIP,OAAO,IAAIO,GAAf,EAAoB;AAClB,WAAOA,GAAP;AACD,GAFD,MAEO,IAAIP,OAAJ,EAAa;AAClB,WAAON,cAAc,CAACM,OAAD,CAArB;AACD,GAFM,MAEA;AACL,WAAO,gBAAP;AACD;AACF;;AAED,MAAMc,aAAa,GAAGtB,MAAM,CAACuB,GAAI;AACjC;AACA,CAFA;MAAMD,a;AAIN,eAAef,YAAf","sourcesContent":["import React, { useCallback } from 'react'\n\nimport { Button } from 'react-neu'\n\nimport styled from 'styled-components'\n\nimport Davatar from '@davatar/react'\nimport { shortenAddress, useLookupAddress } from '@usedapp/core'\n\nimport UnlockWalletModal from 'components/UnlockWalletModal'\nimport WalletModal from 'components/WalletModal'\nimport useWallet from 'hooks/useWallet'\n\nconst WalletButton: React.FC = () => {\n  const {\n    account,\n    ethereum,\n    isShowingWalletModal,\n    onCloseWalletModal,\n    onOpenWalletModal,\n    status,\n    connect,\n  } = useWallet()\n  const ens = useLookupAddress()\n\n  const onClick = useCallback(() => {\n    // If the user comes from the onto app it should directly connect without opening the web3 modal\n    if (status !== 'connected' && (window as any).ethereum?.isONTO) {\n      connect('injected')\n    } else {\n      onOpenWalletModal()\n    }\n  }, [status, connect, onOpenWalletModal])\n\n  const openWalletText = getOpenWalletText(account, ens)\n  const variant = !!account ? 'tertiary' : 'default'\n\n  return (\n    <>\n      <Button\n        onClick={onClick}\n        size='md'\n        text={openWalletText}\n        variant={variant}\n      >\n        {account && (\n          <StyledDavatar>\n            <Davatar\n              size={24}\n              address={account}\n              provider={ethereum}\n              generatedAvatarType='jazzicon' // optional, 'jazzicon' or 'blockies'\n            />\n          </StyledDavatar>\n        )}\n      </Button>\n      <WalletModal\n        isOpen={!!account && isShowingWalletModal}\n        onDismiss={onCloseWalletModal}\n      />\n      <UnlockWalletModal\n        isOpen={!account && isShowingWalletModal}\n        onDismiss={onCloseWalletModal}\n      />\n    </>\n  )\n}\n\nfunction getOpenWalletText(\n  account: string | null | undefined,\n  ens: string | null | undefined\n) {\n  if (account && ens) {\n    return ens\n  } else if (account) {\n    return shortenAddress(account)\n  } else {\n    return 'Connect Wallet'\n  }\n}\n\nconst StyledDavatar = styled.div`\n  margin-right: 6px;\n`\n\nexport default WalletButton\n"]},"metadata":{},"sourceType":"module"}