{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashAdapterName = exports.bigNumberToData = exports.addressToData = void 0;\n\nvar utils_1 = require(\"ethers/lib/utils\");\n\nvar addressToData = function (address) {\n  return address.replace(\"0x\", \"000000000000000000000000\");\n};\n\nexports.addressToData = addressToData;\n\nvar bigNumberToData = function (number) {\n  return number.toHexString().replace(\"0x\", \"\").padStart(64, \"0\");\n};\n\nexports.bigNumberToData = bigNumberToData;\n\nvar hashAdapterName = function (name) {\n  return (0, utils_1.keccak256)(new Buffer(name));\n};\n\nexports.hashAdapterName = hashAdapterName;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/node_modules/@setprotocol/set-protocol-v2/dist/utils/common/adapterUtils.js"],"names":["Object","defineProperty","exports","value","hashAdapterName","bigNumberToData","addressToData","utils_1","require","address","replace","number","toHexString","padStart","name","keccak256","Buffer"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,eAAR,GAA0BH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAAjF;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIF,aAAa,GAAG,UAAUG,OAAV,EAAmB;AAAE,SAAOA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsB,0BAAtB,CAAP;AAA2D,CAApG;;AACAR,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AACA,IAAID,eAAe,GAAG,UAAUM,MAAV,EAAkB;AAAE,SAAOA,MAAM,CAACC,WAAP,GAAqBF,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,EAAuCG,QAAvC,CAAgD,EAAhD,EAAoD,GAApD,CAAP;AAAkE,CAA5G;;AACAX,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AACA,IAAID,eAAe,GAAG,UAAUU,IAAV,EAAgB;AAAE,SAAO,CAAC,GAAGP,OAAO,CAACQ,SAAZ,EAAuB,IAAIC,MAAJ,CAAWF,IAAX,CAAvB,CAAP;AAAkD,CAA1F;;AACAZ,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashAdapterName = exports.bigNumberToData = exports.addressToData = void 0;\nvar utils_1 = require(\"ethers/lib/utils\");\nvar addressToData = function (address) { return address.replace(\"0x\", \"000000000000000000000000\"); };\nexports.addressToData = addressToData;\nvar bigNumberToData = function (number) { return number.toHexString().replace(\"0x\", \"\").padStart(64, \"0\"); };\nexports.bigNumberToData = bigNumberToData;\nvar hashAdapterName = function (name) { return (0, utils_1.keccak256)(new Buffer(name)); };\nexports.hashAdapterName = hashAdapterName;\n"]},"metadata":{},"sourceType":"script"}