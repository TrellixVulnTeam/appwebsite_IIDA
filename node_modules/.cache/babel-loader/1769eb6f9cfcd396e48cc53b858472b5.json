{"ast":null,"code":"import { createContext } from 'react';\nimport BigNumber from 'utils/bignumber';\nconst BuySellContext = /*#__PURE__*/createContext({\n  buySellToken: 'dpi',\n  isFetchingOrderData: false,\n  isUserBuying: true,\n  activeField: 'currency',\n  selectedCurrency: undefined,\n  spendingTokenBalance: new BigNumber(0),\n  zeroExTradeData: undefined,\n  currencyOptions: [],\n  buySellQuantity: '0',\n  onSetBuySellToken: () => {},\n  onToggleIsUserBuying: () => {},\n  onSetActiveField: () => {},\n  onSetSelectedCurrency: () => {},\n  onSetBuySellQuantity: () => {},\n  onExecuteBuySell: () => {}\n});\nexport default BuySellContext;","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/contexts/BuySell/BuySellContext.ts"],"names":["createContext","BigNumber","BuySellContext","buySellToken","isFetchingOrderData","isUserBuying","activeField","selectedCurrency","undefined","spendingTokenBalance","zeroExTradeData","currencyOptions","buySellQuantity","onSetBuySellToken","onToggleIsUserBuying","onSetActiveField","onSetSelectedCurrency","onSetBuySellQuantity","onExecuteBuySell"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAsBA,MAAMC,cAAc,gBAAGF,aAAa,CAAuB;AACzDG,EAAAA,YAAY,EAAE,KAD2C;AAEzDC,EAAAA,mBAAmB,EAAE,KAFoC;AAGzDC,EAAAA,YAAY,EAAE,IAH2C;AAIzDC,EAAAA,WAAW,EAAE,UAJ4C;AAKzDC,EAAAA,gBAAgB,EAAEC,SALuC;AAMzDC,EAAAA,oBAAoB,EAAE,IAAIR,SAAJ,CAAc,CAAd,CANmC;AAOzDS,EAAAA,eAAe,EAAEF,SAPwC;AAQzDG,EAAAA,eAAe,EAAE,EARwC;AASzDC,EAAAA,eAAe,EAAE,GATwC;AAUzDC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CAV8B;AAWzDC,EAAAA,oBAAoB,EAAE,MAAM,CAAE,CAX2B;AAYzDC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAZ+B;AAazDC,EAAAA,qBAAqB,EAAE,MAAM,CAAE,CAb0B;AAczDC,EAAAA,oBAAoB,EAAE,MAAM,CAAE,CAd2B;AAezDC,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAf+B,CAAvB,CAApC;AAkBA,eAAehB,cAAf","sourcesContent":["import { createContext } from 'react'\n\nimport BigNumber from 'utils/bignumber'\n\nimport { ZeroExData } from './types'\n\ninterface BuySellContextValues {\n  buySellToken: string\n  isFetchingOrderData: boolean\n  isUserBuying: boolean\n  activeField: 'currency' | 'set'\n  selectedCurrency: any\n  spendingTokenBalance: BigNumber\n  zeroExTradeData: ZeroExData | undefined\n  currencyOptions: any[]\n  buySellQuantity: string\n  onSetBuySellToken: (tokenId: string) => void\n  onToggleIsUserBuying: () => void\n  onSetActiveField: (field: 'currency' | 'set') => void\n  onSetSelectedCurrency: (selectedCurrency: any) => void\n  onSetBuySellQuantity: (amount: string) => void\n  onExecuteBuySell: () => void\n}\n\nconst BuySellContext = createContext<BuySellContextValues>({\n  buySellToken: 'dpi',\n  isFetchingOrderData: false,\n  isUserBuying: true,\n  activeField: 'currency',\n  selectedCurrency: undefined,\n  spendingTokenBalance: new BigNumber(0),\n  zeroExTradeData: undefined,\n  currencyOptions: [],\n  buySellQuantity: '0',\n  onSetBuySellToken: () => {},\n  onToggleIsUserBuying: () => {},\n  onSetActiveField: () => {},\n  onSetSelectedCurrency: () => {},\n  onSetBuySellQuantity: () => {},\n  onExecuteBuySell: () => {},\n})\n\nexport default BuySellContext\n"]},"metadata":{},"sourceType":"module"}