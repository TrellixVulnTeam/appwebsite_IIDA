{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/contexts/Btc2xFliTokenSupplyCap/Btc2xFliTokenSupplyCapProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { btc2xfliSuppyCapAddress } from 'constants/ethContractAddresses';\nimport { getSupplyCap } from 'utils';\nimport BigNumber from 'utils/bignumber';\nimport TotalSupplyContext from './Btc2xFliTokenSupplyCapContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Btc2xFliTokenSupplyCapProvider = ({\n  children\n}) => {\n  _s();\n\n  const [btcFliSupplyCap, setBtcFliSupplyCap] = useState();\n  useEffect(() => {\n    getSupplyCap(btc2xfliSuppyCapAddress).then(val => {\n      setBtcFliSupplyCap(new BigNumber(val).dividedBy(new BigNumber(10).pow(18)));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TotalSupplyContext.Provider, {\n    value: {\n      btcfliSupplyCap: btcFliSupplyCap\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Btc2xFliTokenSupplyCapProvider, \"DuIdLLg967iViaE1VXGALW3SsZ4=\");\n\n_c = Btc2xFliTokenSupplyCapProvider;\nexport default Btc2xFliTokenSupplyCapProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Btc2xFliTokenSupplyCapProvider\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/contexts/Btc2xFliTokenSupplyCap/Btc2xFliTokenSupplyCapProvider.tsx"],"names":["React","useEffect","useState","btc2xfliSuppyCapAddress","getSupplyCap","BigNumber","TotalSupplyContext","Btc2xFliTokenSupplyCapProvider","children","btcFliSupplyCap","setBtcFliSupplyCap","then","val","dividedBy","pow","btcfliSupplyCap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAOC,kBAAP,MAA+B,iCAA/B;;;AAEA,MAAMC,8BAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjE,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACD,uBAAD,CAAZ,CAAgDQ,IAAhD,CAAsDC,GAAD,IAAS;AAC5DF,MAAAA,kBAAkB,CAChB,IAAIL,SAAJ,CAAcO,GAAd,EAAmBC,SAAnB,CAA6B,IAAIR,SAAJ,CAAc,EAAd,EAAkBS,GAAlB,CAAsB,EAAtB,CAA7B,CADgB,CAAlB;AAGD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAEN;AADZ,KADT;AAAA,cAKGD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBD;;GAAMD,8B;;KAAAA,8B;AAqBN,eAAeA,8BAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { btc2xfliSuppyCapAddress } from 'constants/ethContractAddresses'\nimport { getSupplyCap } from 'utils'\nimport BigNumber from 'utils/bignumber'\n\nimport TotalSupplyContext from './Btc2xFliTokenSupplyCapContext'\n\nconst Btc2xFliTokenSupplyCapProvider: React.FC = ({ children }) => {\n  const [btcFliSupplyCap, setBtcFliSupplyCap] = useState<BigNumber>()\n\n  useEffect(() => {\n    getSupplyCap(btc2xfliSuppyCapAddress as string).then((val) => {\n      setBtcFliSupplyCap(\n        new BigNumber(val).dividedBy(new BigNumber(10).pow(18))\n      )\n    })\n  }, [])\n\n  return (\n    <TotalSupplyContext.Provider\n      value={{\n        btcfliSupplyCap: btcFliSupplyCap,\n      }}\n    >\n      {children}\n    </TotalSupplyContext.Provider>\n  )\n}\nexport default Btc2xFliTokenSupplyCapProvider\n"]},"metadata":{},"sourceType":"module"}