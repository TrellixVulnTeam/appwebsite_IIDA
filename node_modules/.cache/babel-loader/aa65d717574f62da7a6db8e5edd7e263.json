{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/components/SimplePriceChart/SimplePriceChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Spacer, useTheme } from 'react-neu';\nimport numeral from 'numeral';\nimport { Line, LineChart, ResponsiveContainer, Tooltip, YAxis } from 'recharts';\nimport styled from 'styled-components';\nimport FancyValue from 'components/FancyValue';\nimport { Durations, PriceChartRangeOption } from 'constants/priceChartEnums'; // docs - http://recharts.org/en-US/guide/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketDataChart = ({\n  title,\n  showTooltip,\n  icon,\n  data,\n  hourlyData,\n  onMouseMove = () => {},\n  onMouseLeave = () => {},\n  setChartRange = () => {}\n}) => {\n  _s();\n\n  const theme = useTheme();\n\n  const formatFloats = n => parseFloat(numeral(n).format('0.00a'));\n\n  const formatToolTip = chartData => {\n    if (!chartData) return ['--', 'No Data Available'];\n    const {\n      payload: {\n        x,\n        y\n      }\n    } = chartData;\n    let timeString = new Date(x).toLocaleDateString();\n\n    if (durationSelector === Durations.DAILY) {\n      timeString = new Date(x).toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: 'numeric'\n      });\n    }\n\n    return [timeString, '$' + formatFloats(y)];\n  };\n\n  const [durationSelector, setDurationSelector] = useState(Durations.MONTHLY);\n  const [price, setPrice] = useState(data);\n  useEffect(() => {\n    setTimeout(() => {\n      const hourlyDataInterval = 24;\n\n      if (durationSelector === Durations.DAILY) {\n        setPrice(hourlyData === null || hourlyData === void 0 ? void 0 : hourlyData.slice(-PriceChartRangeOption.DAILY_PRICE_RANGE * hourlyDataInterval)); //last day, hourly\n      } else if (durationSelector === Durations.WEEKLY) {\n        setPrice(hourlyData === null || hourlyData === void 0 ? void 0 : hourlyData.slice(-PriceChartRangeOption.WEEKLY_PRICE_RANGE * hourlyDataInterval)); //last 7 days, hourly\n      } else if (durationSelector === Durations.MONTHLY) {\n        setPrice(hourlyData === null || hourlyData === void 0 ? void 0 : hourlyData.slice(-PriceChartRangeOption.MONTHLY_PRICE_RANGE * hourlyDataInterval)); //last 30 days, hourly\n      } else if (durationSelector === Durations.QUARTERLY) {\n        setPrice(hourlyData === null || hourlyData === void 0 ? void 0 : hourlyData.slice(-PriceChartRangeOption.QUARTERLY_PRICE_RANGE * hourlyDataInterval)); //last 90 days, hourly\n      } else if (durationSelector === Durations.YEARLY) {\n        setPrice(data === null || data === void 0 ? void 0 : data.slice(-PriceChartRangeOption.YEARLY_PRICE_RANGE)); //last year, daily\n      }\n    }, 0);\n  }, [durationSelector, data, hourlyData]);\n\n  const handleDailyButton = () => {\n    setDurationSelector(Durations.DAILY);\n    setChartRange(PriceChartRangeOption.DAILY_PRICE_RANGE);\n  };\n\n  const handleWeeklyButton = () => {\n    setDurationSelector(Durations.WEEKLY);\n    setChartRange(PriceChartRangeOption.WEEKLY_PRICE_RANGE);\n  };\n\n  const handleMonthlyButton = () => {\n    setDurationSelector(Durations.MONTHLY);\n    setChartRange(PriceChartRangeOption.MONTHLY_PRICE_RANGE);\n  };\n\n  const handleQuarterlyButton = () => {\n    setDurationSelector(Durations.QUARTERLY);\n    setChartRange(PriceChartRangeOption.QUARTERLY_PRICE_RANGE);\n  };\n\n  const handleYearlyButton = () => {\n    setDurationSelector(Durations.YEARLY);\n    setChartRange(PriceChartRangeOption.YEARLY_PRICE_RANGE);\n  };\n\n  const renderTooltip = props => {\n    var _props$payload;\n\n    if (!showTooltip) return null;\n    const tooltipData = (_props$payload = props.payload) === null || _props$payload === void 0 ? void 0 : _props$payload[0];\n    const [label, value] = formatToolTip(tooltipData);\n    return /*#__PURE__*/_jsxDEV(FancyValue, {\n      icon: icon,\n      label: label,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  };\n\n  const tickFormatter = val => {\n    if (val <= minY) return 'Min: $' + formatFloats(val);\n    return 'Max: $' + formatFloats(val);\n  };\n\n  const minY = Math.min(...(price || []).map(({\n    y\n  }) => y));\n  const maxY = Math.max(...(price || []).map(({\n    y\n  }) => y));\n  const minimumYAxisLabel = minY - 5 > 0 ? minY - 5 : 0;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"lg\",\n    children: [title && /*#__PURE__*/_jsxDEV(ChartTitle, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: price,\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave,\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"y\",\n          dot: false,\n          stroke: 'url(#gradient)',\n          strokeWidth: 2,\n          animationEasing: \"ease\",\n          animationDuration: 800\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: theme.colors.grey[500],\n          tickFormatter: tickFormatter,\n          axisLine: false,\n          tickLine: false,\n          mirror: true,\n          ticks: [minimumYAxisLabel + 0.001, maxY + 5.001],\n          domain: [minY - 15, maxY + 5],\n          orientation: \"right\",\n          width: 100,\n          dy: 7,\n          dx: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: renderTooltip,\n          wrapperStyle: {\n            backgroundColor: theme.baseColor\n          },\n          cursor: {\n            stroke: theme.colors.primary.light,\n            strokeWidth: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"gradient\",\n            gradientTransform: \"rotate(90)\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: \"#8150E6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: \"#E825A3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DurationWrapper, {\n      children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        \"data-cy\": \"date-range-selector\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          full: true,\n          size: 'sm',\n          text: \"1D\",\n          variant: durationSelector === Durations.DAILY ? 'default' : 'secondary',\n          onClick: handleDailyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n          size: 'sm'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          full: true,\n          size: 'sm',\n          text: \"1W\",\n          variant: durationSelector === Durations.WEEKLY ? 'default' : 'secondary',\n          onClick: handleWeeklyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n          size: 'sm'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          full: true,\n          size: 'sm',\n          text: \"1M\",\n          variant: durationSelector === Durations.MONTHLY ? 'default' : 'secondary',\n          onClick: handleMonthlyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n          size: 'sm'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          full: true,\n          size: 'sm',\n          text: \"3M\",\n          variant: durationSelector === Durations.QUARTERLY ? 'default' : 'secondary',\n          onClick: handleQuarterlyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n          size: 'sm'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          full: true,\n          size: 'sm',\n          text: \"1Y\",\n          variant: durationSelector === Durations.YEARLY ? 'default' : 'secondary',\n          onClick: handleYearlyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MarketDataChart, \"Kf+r9y3PLgafSlrjx0QatThR7N8=\", false, function () {\n  return [useTheme];\n});\n\n_c = MarketDataChart;\nconst ChartContainer = styled(ResponsiveContainer)`\n  min-height: 25rem;\n`;\n_c2 = ChartContainer;\nconst ChartTitle = styled.h2`\n  font-size: 42px;\n`;\n_c3 = ChartTitle;\nconst DurationWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n_c4 = DurationWrapper;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  padding-top: 10px;\n`;\n_c5 = ButtonWrapper;\nexport default MarketDataChart;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"MarketDataChart\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"ChartTitle\");\n$RefreshReg$(_c4, \"DurationWrapper\");\n$RefreshReg$(_c5, \"ButtonWrapper\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/components/SimplePriceChart/SimplePriceChart.tsx"],"names":["React","useEffect","useState","Button","Container","Spacer","useTheme","numeral","Line","LineChart","ResponsiveContainer","Tooltip","YAxis","styled","FancyValue","Durations","PriceChartRangeOption","MarketDataChart","title","showTooltip","icon","data","hourlyData","onMouseMove","onMouseLeave","setChartRange","theme","formatFloats","n","parseFloat","format","formatToolTip","chartData","payload","x","y","timeString","Date","toLocaleDateString","durationSelector","DAILY","toLocaleTimeString","hour","minute","setDurationSelector","MONTHLY","price","setPrice","setTimeout","hourlyDataInterval","slice","DAILY_PRICE_RANGE","WEEKLY","WEEKLY_PRICE_RANGE","MONTHLY_PRICE_RANGE","QUARTERLY","QUARTERLY_PRICE_RANGE","YEARLY","YEARLY_PRICE_RANGE","handleDailyButton","handleWeeklyButton","handleMonthlyButton","handleQuarterlyButton","handleYearlyButton","renderTooltip","props","tooltipData","label","value","tickFormatter","val","minY","Math","min","map","maxY","max","minimumYAxisLabel","colors","grey","backgroundColor","baseColor","stroke","primary","light","strokeWidth","ChartContainer","ChartTitle","h2","DurationWrapper","div","ButtonWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,WAApD;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,mBAA1B,EAA+CC,OAA/C,EAAwDC,KAAxD,QAAqE,UAArE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,qBAApB,QAAiD,2BAAjD,C,CACA;;;;AAuBA,MAAMC,eAAgD,GAAG,CAAC;AACxDC,EAAAA,KADwD;AAExDC,EAAAA,WAFwD;AAGxDC,EAAAA,IAHwD;AAIxDC,EAAAA,IAJwD;AAKxDC,EAAAA,UALwD;AAMxDC,EAAAA,WAAW,GAAG,MAAM,CAAE,CANkC;AAOxDC,EAAAA,YAAY,GAAG,MAAM,CAAE,CAPiC;AAQxDC,EAAAA,aAAa,GAAG,MAAM,CAAE;AARgC,CAAD,KASnD;AAAA;;AACJ,QAAMC,KAAK,GAAGpB,QAAQ,EAAtB;;AACA,QAAMqB,YAAY,GAAIC,CAAD,IAAeC,UAAU,CAACtB,OAAO,CAACqB,CAAD,CAAP,CAAWE,MAAX,CAAkB,OAAlB,CAAD,CAA9C;;AACA,QAAMC,aAAa,GAAIC,SAAD,IAAoB;AACxC,QAAI,CAACA,SAAL,EAAgB,OAAO,CAAC,IAAD,EAAO,mBAAP,CAAP;AAChB,UAAM;AACJC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,CAAF;AAAKC,QAAAA;AAAL;AADL,QAEFH,SAFJ;AAGA,QAAII,UAAU,GAAG,IAAIC,IAAJ,CAASH,CAAT,EAAYI,kBAAZ,EAAjB;;AACA,QAAIC,gBAAgB,KAAKxB,SAAS,CAACyB,KAAnC,EAA0C;AACxCJ,MAAAA,UAAU,GAAG,IAAIC,IAAJ,CAASH,CAAT,EAAYO,kBAAZ,CAA+B,EAA/B,EAAmC;AAC9CC,QAAAA,IAAI,EAAE,SADwC;AAE9CC,QAAAA,MAAM,EAAE;AAFsC,OAAnC,CAAb;AAID;;AACD,WAAO,CAACP,UAAD,EAAa,MAAMT,YAAY,CAACQ,CAAD,CAA/B,CAAP;AACD,GAbD;;AAeA,QAAM,CAACI,gBAAD,EAAmBK,mBAAnB,IAA0C1C,QAAQ,CACtDa,SAAS,CAAC8B,OAD4C,CAAxD;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7C,QAAQ,CAACmB,IAAD,CAAlC;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMC,kBAAkB,GAAG,EAA3B;;AACA,UAAIV,gBAAgB,KAAKxB,SAAS,CAACyB,KAAnC,EAA0C;AACxCO,QAAAA,QAAQ,CACNzB,UADM,aACNA,UADM,uBACNA,UAAU,CAAE4B,KAAZ,CACE,CAAClC,qBAAqB,CAACmC,iBAAvB,GAA2CF,kBAD7C,CADM,CAAR,CADwC,CAKtC;AACH,OAND,MAMO,IAAIV,gBAAgB,KAAKxB,SAAS,CAACqC,MAAnC,EAA2C;AAChDL,QAAAA,QAAQ,CACNzB,UADM,aACNA,UADM,uBACNA,UAAU,CAAE4B,KAAZ,CACE,CAAClC,qBAAqB,CAACqC,kBAAvB,GAA4CJ,kBAD9C,CADM,CAAR,CADgD,CAK9C;AACH,OANM,MAMA,IAAIV,gBAAgB,KAAKxB,SAAS,CAAC8B,OAAnC,EAA4C;AACjDE,QAAAA,QAAQ,CACNzB,UADM,aACNA,UADM,uBACNA,UAAU,CAAE4B,KAAZ,CACE,CAAClC,qBAAqB,CAACsC,mBAAvB,GAA6CL,kBAD/C,CADM,CAAR,CADiD,CAK/C;AACH,OANM,MAMA,IAAIV,gBAAgB,KAAKxB,SAAS,CAACwC,SAAnC,EAA8C;AACnDR,QAAAA,QAAQ,CACNzB,UADM,aACNA,UADM,uBACNA,UAAU,CAAE4B,KAAZ,CACE,CAAClC,qBAAqB,CAACwC,qBAAvB,GAA+CP,kBADjD,CADM,CAAR,CADmD,CAKjD;AACH,OANM,MAMA,IAAIV,gBAAgB,KAAKxB,SAAS,CAAC0C,MAAnC,EAA2C;AAChDV,QAAAA,QAAQ,CAAC1B,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE6B,KAAN,CAAY,CAAClC,qBAAqB,CAAC0C,kBAAnC,CAAD,CAAR,CADgD,CACiB;AAClE;AACF,KA7BS,EA6BP,CA7BO,CAAV;AA8BD,GA/BQ,EA+BN,CAACnB,gBAAD,EAAmBlB,IAAnB,EAAyBC,UAAzB,CA/BM,CAAT;;AAiCA,QAAMqC,iBAAiB,GAAG,MAAM;AAC9Bf,IAAAA,mBAAmB,CAAC7B,SAAS,CAACyB,KAAX,CAAnB;AACAf,IAAAA,aAAa,CAACT,qBAAqB,CAACmC,iBAAvB,CAAb;AACD,GAHD;;AAKA,QAAMS,kBAAkB,GAAG,MAAM;AAC/BhB,IAAAA,mBAAmB,CAAC7B,SAAS,CAACqC,MAAX,CAAnB;AACA3B,IAAAA,aAAa,CAACT,qBAAqB,CAACqC,kBAAvB,CAAb;AACD,GAHD;;AAKA,QAAMQ,mBAAmB,GAAG,MAAM;AAChCjB,IAAAA,mBAAmB,CAAC7B,SAAS,CAAC8B,OAAX,CAAnB;AACApB,IAAAA,aAAa,CAACT,qBAAqB,CAACsC,mBAAvB,CAAb;AACD,GAHD;;AAKA,QAAMQ,qBAAqB,GAAG,MAAM;AAClClB,IAAAA,mBAAmB,CAAC7B,SAAS,CAACwC,SAAX,CAAnB;AACA9B,IAAAA,aAAa,CAACT,qBAAqB,CAACwC,qBAAvB,CAAb;AACD,GAHD;;AAKA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BnB,IAAAA,mBAAmB,CAAC7B,SAAS,CAAC0C,MAAX,CAAnB;AACAhC,IAAAA,aAAa,CAACT,qBAAqB,CAAC0C,kBAAvB,CAAb;AACD,GAHD;;AAKA,QAAMM,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AACpC,QAAI,CAAC9C,WAAL,EAAkB,OAAO,IAAP;AAElB,UAAM+C,WAAW,qBAAGD,KAAK,CAAChC,OAAT,mDAAG,eAAgB,CAAhB,CAApB;AACA,UAAM,CAACkC,KAAD,EAAQC,KAAR,IAAiBrC,aAAa,CAACmC,WAAD,CAApC;AAEA,wBAAO,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE9C,IAAlB;AAAwB,MAAA,KAAK,EAAE+C,KAA/B;AAAsC,MAAA,KAAK,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAPD;;AASA,QAAMC,aAAa,GAAIC,GAAD,IAAc;AAClC,QAAIA,GAAG,IAAIC,IAAX,EAAiB,OAAO,WAAW5C,YAAY,CAAC2C,GAAD,CAA9B;AACjB,WAAO,WAAW3C,YAAY,CAAC2C,GAAD,CAA9B;AACD,GAHD;;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAG,CAAC3B,KAAK,IAAI,EAAV,EAAc4B,GAAd,CAA0B,CAAC;AAAEvC,IAAAA;AAAF,GAAD,KAAWA,CAArC,CAAZ,CAAb;AACA,QAAMwC,IAAI,GAAGH,IAAI,CAACI,GAAL,CAAS,GAAG,CAAC9B,KAAK,IAAI,EAAV,EAAc4B,GAAd,CAA0B,CAAC;AAAEvC,IAAAA;AAAF,GAAD,KAAWA,CAArC,CAAZ,CAAb;AACA,QAAM0C,iBAAiB,GAAGN,IAAI,GAAG,CAAP,GAAW,CAAX,GAAeA,IAAI,GAAG,CAAtB,GAA0B,CAApD;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,IAAhB;AAAA,eACGrD,KAAK,iBAAI,QAAC,UAAD;AAAA,gBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,cAAD;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAE4B,KADR;AAEE,QAAA,WAAW,EAAEvB,WAFf;AAGE,QAAA,YAAY,EAAEC,YAHhB;AAAA,gCAKE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAC,GAFV;AAGE,UAAA,GAAG,EAAE,KAHP;AAIE,UAAA,MAAM,EAAE,gBAJV;AAKE,UAAA,WAAW,EAAE,CALf;AAME,UAAA,eAAe,EAAC,MANlB;AAOE,UAAA,iBAAiB,EAAE;AAPrB;AAAA;AAAA;AAAA;AAAA,gBALF,eAcE,QAAC,KAAD;AACE,UAAA,MAAM,EAAEE,KAAK,CAACoD,MAAN,CAAaC,IAAb,CAAkB,GAAlB,CADV;AAEE,UAAA,aAAa,EAAEV,aAFjB;AAGE,UAAA,QAAQ,EAAE,KAHZ;AAIE,UAAA,QAAQ,EAAE,KAJZ;AAKE,UAAA,MAAM,EAAE,IALV;AAME,UAAA,KAAK,EAAE,CAACQ,iBAAiB,GAAG,KAArB,EAA4BF,IAAI,GAAG,KAAnC,CANT;AAOE,UAAA,MAAM,EAAE,CAACJ,IAAI,GAAG,EAAR,EAAYI,IAAI,GAAG,CAAnB,CAPV;AAQE,UAAA,WAAW,EAAC,OARd;AASE,UAAA,KAAK,EAAE,GATT;AAUE,UAAA,EAAE,EAAE,CAVN;AAWE,UAAA,EAAE,EAAE;AAXN;AAAA;AAAA;AAAA;AAAA,gBAdF,eA2BE,QAAC,OAAD;AACE,UAAA,OAAO,EAAEX,aADX;AAEE,UAAA,YAAY,EAAE;AAAEgB,YAAAA,eAAe,EAAEtD,KAAK,CAACuD;AAAzB,WAFhB;AAGE,UAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAExD,KAAK,CAACoD,MAAN,CAAaK,OAAb,CAAqBC,KAA/B;AAAsCC,YAAAA,WAAW,EAAE;AAAnD;AAHV;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAgCE;AAAA,iCACE;AAAgB,YAAA,EAAE,EAAC,UAAnB;AAA8B,YAAA,iBAAiB,EAAC,YAAhD;AAAA,oCACE;AAAM,cAAA,MAAM,EAAC,IAAb;AAAkB,cAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,MAAM,EAAC,KAAb;AAAmB,cAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eA2CE,QAAC,eAAD;AAAA,6BACE,QAAC,aAAD;AAAe,mBAAQ,qBAAvB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EACL9C,gBAAgB,KAAKxB,SAAS,CAACyB,KAA/B,GAAuC,SAAvC,GAAmD,WALvD;AAOE,UAAA,OAAO,EAAEmB;AAPX;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EACLpB,gBAAgB,KAAKxB,SAAS,CAACqC,MAA/B,GAAwC,SAAxC,GAAoD,WALxD;AAOE,UAAA,OAAO,EAAEQ;AAPX;AAAA;AAAA;AAAA;AAAA,gBAXF,eAoBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBApBF,eAqBE,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EACLrB,gBAAgB,KAAKxB,SAAS,CAAC8B,OAA/B,GAAyC,SAAzC,GAAqD,WALzD;AAOE,UAAA,OAAO,EAAEgB;AAPX;AAAA;AAAA;AAAA;AAAA,gBArBF,eA8BE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBA9BF,eA+BE,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EACLtB,gBAAgB,KAAKxB,SAAS,CAACwC,SAA/B,GAA2C,SAA3C,GAAuD,WAL3D;AAOE,UAAA,OAAO,EAAEO;AAPX;AAAA;AAAA;AAAA;AAAA,gBA/BF,eAwCE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAxCF,eAyCE,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EACLvB,gBAAgB,KAAKxB,SAAS,CAAC0C,MAA/B,GAAwC,SAAxC,GAAoD,WALxD;AAOE,UAAA,OAAO,EAAEM;AAPX;AAAA;AAAA;AAAA;AAAA,gBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmGD,CA/MD;;GAAM9C,e;UAUUX,Q;;;KAVVW,e;AAiNN,MAAMqE,cAAc,GAAGzE,MAAM,CAACH,mBAAD,CAAsB;AACnD;AACA,CAFA;MAAM4E,c;AAIN,MAAMC,UAAU,GAAG1E,MAAM,CAAC2E,EAAG;AAC7B;AACA,CAFA;MAAMD,U;AAIN,MAAME,eAAe,GAAG5E,MAAM,CAAC6E,GAAI;AACnC;AACA;AACA,CAHA;MAAMD,e;AAKN,MAAME,aAAa,GAAG9E,MAAM,CAAC6E,GAAI;AACjC;AACA;AACA;AACA,CAJA;MAAMC,a;AAMN,eAAe1E,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, Container, Spacer, useTheme } from 'react-neu'\n\nimport numeral from 'numeral'\nimport { Line, LineChart, ResponsiveContainer, Tooltip, YAxis } from 'recharts'\nimport styled from 'styled-components'\n\nimport FancyValue from 'components/FancyValue'\nimport { Durations, PriceChartRangeOption } from 'constants/priceChartEnums'\n// docs - http://recharts.org/en-US/guide/\n\ninterface SimplePriceChartProps {\n  title?: string\n  showTooltip?: boolean\n  showDurations?: boolean\n  icon: {\n    src: string\n    alt: string\n  }\n  data?: {\n    x: string | number\n    y: number\n  }[]\n  hourlyData?: {\n    x: string | number\n    y: number\n  }[]\n  onMouseMove?: (...args: any[]) => any\n  onMouseLeave?: (...args: any[]) => any\n  setChartRange?: (...args: any[]) => any\n}\n\nconst MarketDataChart: React.FC<SimplePriceChartProps> = ({\n  title,\n  showTooltip,\n  icon,\n  data,\n  hourlyData,\n  onMouseMove = () => {},\n  onMouseLeave = () => {},\n  setChartRange = () => {},\n}) => {\n  const theme = useTheme()\n  const formatFloats = (n: number) => parseFloat(numeral(n).format('0.00a'))\n  const formatToolTip = (chartData: any) => {\n    if (!chartData) return ['--', 'No Data Available']\n    const {\n      payload: { x, y },\n    } = chartData\n    let timeString = new Date(x).toLocaleDateString()\n    if (durationSelector === Durations.DAILY) {\n      timeString = new Date(x).toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: 'numeric',\n      })\n    }\n    return [timeString, '$' + formatFloats(y)]\n  }\n\n  const [durationSelector, setDurationSelector] = useState<number>(\n    Durations.MONTHLY\n  )\n  const [price, setPrice] = useState(data)\n\n  useEffect(() => {\n    setTimeout(() => {\n      const hourlyDataInterval = 24\n      if (durationSelector === Durations.DAILY) {\n        setPrice(\n          hourlyData?.slice(\n            -PriceChartRangeOption.DAILY_PRICE_RANGE * hourlyDataInterval\n          )\n        ) //last day, hourly\n      } else if (durationSelector === Durations.WEEKLY) {\n        setPrice(\n          hourlyData?.slice(\n            -PriceChartRangeOption.WEEKLY_PRICE_RANGE * hourlyDataInterval\n          )\n        ) //last 7 days, hourly\n      } else if (durationSelector === Durations.MONTHLY) {\n        setPrice(\n          hourlyData?.slice(\n            -PriceChartRangeOption.MONTHLY_PRICE_RANGE * hourlyDataInterval\n          )\n        ) //last 30 days, hourly\n      } else if (durationSelector === Durations.QUARTERLY) {\n        setPrice(\n          hourlyData?.slice(\n            -PriceChartRangeOption.QUARTERLY_PRICE_RANGE * hourlyDataInterval\n          )\n        ) //last 90 days, hourly\n      } else if (durationSelector === Durations.YEARLY) {\n        setPrice(data?.slice(-PriceChartRangeOption.YEARLY_PRICE_RANGE)) //last year, daily\n      }\n    }, 0)\n  }, [durationSelector, data, hourlyData])\n\n  const handleDailyButton = () => {\n    setDurationSelector(Durations.DAILY)\n    setChartRange(PriceChartRangeOption.DAILY_PRICE_RANGE)\n  }\n\n  const handleWeeklyButton = () => {\n    setDurationSelector(Durations.WEEKLY)\n    setChartRange(PriceChartRangeOption.WEEKLY_PRICE_RANGE)\n  }\n\n  const handleMonthlyButton = () => {\n    setDurationSelector(Durations.MONTHLY)\n    setChartRange(PriceChartRangeOption.MONTHLY_PRICE_RANGE)\n  }\n\n  const handleQuarterlyButton = () => {\n    setDurationSelector(Durations.QUARTERLY)\n    setChartRange(PriceChartRangeOption.QUARTERLY_PRICE_RANGE)\n  }\n\n  const handleYearlyButton = () => {\n    setDurationSelector(Durations.YEARLY)\n    setChartRange(PriceChartRangeOption.YEARLY_PRICE_RANGE)\n  }\n\n  const renderTooltip = (props: any) => {\n    if (!showTooltip) return null\n\n    const tooltipData = props.payload?.[0]\n    const [label, value] = formatToolTip(tooltipData)\n\n    return <FancyValue icon={icon} label={label} value={value} />\n  }\n\n  const tickFormatter = (val: any) => {\n    if (val <= minY) return 'Min: $' + formatFloats(val)\n    return 'Max: $' + formatFloats(val)\n  }\n\n  const minY = Math.min(...(price || []).map<number>(({ y }) => y))\n  const maxY = Math.max(...(price || []).map<number>(({ y }) => y))\n  const minimumYAxisLabel = minY - 5 > 0 ? minY - 5 : 0\n\n  return (\n    <Container size='lg'>\n      {title && <ChartTitle>{title}</ChartTitle>}\n      <ChartContainer>\n        <LineChart\n          data={price}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <Line\n            type='monotone'\n            dataKey='y'\n            dot={false}\n            stroke={'url(#gradient)'}\n            strokeWidth={2}\n            animationEasing='ease'\n            animationDuration={800}\n          />\n          <YAxis\n            stroke={theme.colors.grey[500]}\n            tickFormatter={tickFormatter}\n            axisLine={false}\n            tickLine={false}\n            mirror={true}\n            ticks={[minimumYAxisLabel + 0.001, maxY + 5.001]}\n            domain={[minY - 15, maxY + 5]}\n            orientation='right'\n            width={100}\n            dy={7}\n            dx={1}\n          />\n          <Tooltip\n            content={renderTooltip}\n            wrapperStyle={{ backgroundColor: theme.baseColor }}\n            cursor={{ stroke: theme.colors.primary.light, strokeWidth: 2 }}\n          />\n          <defs>\n            <linearGradient id='gradient' gradientTransform='rotate(90)'>\n              <stop offset='5%' stopColor='#8150E6' />\n              <stop offset='95%' stopColor='#E825A3' />\n            </linearGradient>\n          </defs>\n        </LineChart>\n      </ChartContainer>\n      <DurationWrapper>\n        <ButtonWrapper data-cy='date-range-selector'>\n          <Button\n            full\n            size={'sm'}\n            text='1D'\n            variant={\n              durationSelector === Durations.DAILY ? 'default' : 'secondary'\n            }\n            onClick={handleDailyButton}\n          />\n          <Spacer size={'sm'} />\n          <Button\n            full\n            size={'sm'}\n            text='1W'\n            variant={\n              durationSelector === Durations.WEEKLY ? 'default' : 'secondary'\n            }\n            onClick={handleWeeklyButton}\n          />\n          <Spacer size={'sm'} />\n          <Button\n            full\n            size={'sm'}\n            text='1M'\n            variant={\n              durationSelector === Durations.MONTHLY ? 'default' : 'secondary'\n            }\n            onClick={handleMonthlyButton}\n          />\n          <Spacer size={'sm'} />\n          <Button\n            full\n            size={'sm'}\n            text='3M'\n            variant={\n              durationSelector === Durations.QUARTERLY ? 'default' : 'secondary'\n            }\n            onClick={handleQuarterlyButton}\n          />\n          <Spacer size={'sm'} />\n          <Button\n            full\n            size={'sm'}\n            text='1Y'\n            variant={\n              durationSelector === Durations.YEARLY ? 'default' : 'secondary'\n            }\n            onClick={handleYearlyButton}\n          />\n        </ButtonWrapper>\n      </DurationWrapper>\n    </Container>\n  )\n}\n\nconst ChartContainer = styled(ResponsiveContainer)`\n  min-height: 25rem;\n`\n\nconst ChartTitle = styled.h2`\n  font-size: 42px;\n`\n\nconst DurationWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  padding-top: 10px;\n`\n\nexport default MarketDataChart\n"]},"metadata":{},"sourceType":"module"}