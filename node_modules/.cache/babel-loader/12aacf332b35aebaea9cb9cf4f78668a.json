{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/contexts/TokenSupply/TokenSupplyProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { bedTokenAddress, btc2xfliTokenAddress, dataTokenAddress, dpiTokenAddress, dpiTokenPolygonAddress, wlkrTokenAddress, wlkrTokenPolygonAddress, eth2xflipTokenAddress, eth2xfliTokenAddress, gmiTokenAddress, iethflipTokenAddress, imaticflipTokenAddress, matic2xflipTokenAddress, mviTokenAddress, mviTokenPolygonAddress } from 'constants/ethContractAddresses';\nimport useWallet from 'hooks/useWallet';\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from 'utils/connectors';\nimport { getTokenSupply } from 'utils/setjsApi';\nimport TokenSupplyContext from './TokenSupplyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenSupplyProvider = ({\n  children\n}) => {\n  _s();\n\n  const [dpiTotalSupply, setDpiTotalSupply] = useState();\n  const [wlkrTotalSupply, setWlkrTotalSupply] = useState();\n  const [mviTotalSupply, setMviTotalSupply] = useState();\n  const [bedTotalSupply, setBedTotalSupply] = useState();\n  const [gmiTotalSupply, setGmiTotalSupply] = useState();\n  const [eth2xfliTotalSupply, setEth2xfliTotalSupply] = useState();\n  const [eth2xflipTotalSupply, setEth2xflipTotalSupply] = useState();\n  const [btc2xfliTotalSupply, setBtc2xfliTotalSupply] = useState();\n  const [dataTotalSupply, setDataTotalSupply] = useState();\n  const [matic2xflipTotalSupply, setMatic2xflipTotalSupply] = useState();\n  const [iethflipTotalSupply, setiEthflipTotalSupply] = useState();\n  const [imaticflipTotalSupply, setiMaticflipTotalSupply] = useState();\n  const {\n    ethereum: provider,\n    chainId\n  } = useWallet();\n  useEffect(() => {\n    //mainnet\n    if (chainId && chainId === MAINNET_CHAIN_DATA.chainId && provider && dpiTokenAddress && wlkrTokenAddress && mviTokenAddress && bedTokenAddress && gmiTokenAddress && eth2xfliTokenAddress && btc2xfliTokenAddress && dataTokenAddress) {\n      getTokenSupply(provider, [dpiTokenAddress, wlkrTokenAddress, // Added WLKR\n      mviTokenAddress, bedTokenAddress, gmiTokenAddress, eth2xfliTokenAddress, btc2xfliTokenAddress, dataTokenAddress], chainId).then(result => {\n        const [dpiResult, wlkrResult, // Added WLKR\n        mviResult, bedResult, gmiResult, eth2xFliResult, btc2xFliResult, dataResult] = result;\n        setDpiTotalSupply(new BigNumber(dpiResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setWlkrTotalSupply(new BigNumber(wlkrResult.totalSupply.toString()).dividedBy( // Added WLKR\n        new BigNumber(10).pow(18)));\n        setMviTotalSupply(new BigNumber(mviResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setBedTotalSupply(new BigNumber(bedResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setGmiTotalSupply(new BigNumber(gmiResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setEth2xfliTotalSupply(new BigNumber(eth2xFliResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setEth2xflipTotalSupply(undefined);\n        setBtc2xfliTotalSupply(new BigNumber(btc2xFliResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setDataTotalSupply(new BigNumber(dataResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n      }).catch(error => console.error(error));\n    } else if (chainId && chainId === POLYGON_CHAIN_DATA.chainId && provider && dpiTokenPolygonAddress && wlkrTokenPolygonAddress && // Added WLKR\n    mviTokenPolygonAddress && eth2xflipTokenAddress && iethflipTokenAddress && matic2xflipTokenAddress && imaticflipTokenAddress) {\n      getTokenSupply(provider, [dpiTokenPolygonAddress, wlkrTokenPolygonAddress, // Added WLKR\n      mviTokenPolygonAddress, eth2xflipTokenAddress, iethflipTokenAddress, imaticflipTokenAddress, matic2xflipTokenAddress], chainId).then(result => {\n        const [dpiResult, wlkrResult, // Added WLKR\n        mviResult, eth2xFLIPResult, iethFLIPResult, imaticFLIPResult, matic2xFLIPResult] = result;\n        setDpiTotalSupply(new BigNumber(dpiResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setWlkrTotalSupply(new BigNumber(wlkrResult.totalSupply.toString()).dividedBy( // Added WLKR\n        new BigNumber(10).pow(18)));\n        setMviTotalSupply(new BigNumber(mviResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setEth2xflipTotalSupply(new BigNumber(eth2xFLIPResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setiEthflipTotalSupply(new BigNumber(iethFLIPResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setMatic2xflipTotalSupply(new BigNumber(matic2xFLIPResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setiMaticflipTotalSupply(new BigNumber(imaticFLIPResult.totalSupply.toString()).dividedBy(new BigNumber(10).pow(18)));\n        setBedTotalSupply(undefined);\n        setGmiTotalSupply(undefined);\n        setEth2xfliTotalSupply(undefined);\n        setBtc2xfliTotalSupply(undefined);\n        setDataTotalSupply(undefined);\n      }).catch(error => console.error(error));\n    }\n  }, [chainId, provider]);\n  return /*#__PURE__*/_jsxDEV(TokenSupplyContext.Provider, {\n    value: {\n      dpiTotalSupply: dpiTotalSupply,\n      wlkrTotalSupply: wlkrTotalSupply,\n      // Added WLKR\n      mviTotalSupply: mviTotalSupply,\n      bedTotalSupply: bedTotalSupply,\n      gmiTotalSupply: gmiTotalSupply,\n      eth2xfliTotalSupply: eth2xfliTotalSupply,\n      eth2xflipTotalSupply: eth2xflipTotalSupply,\n      btc2xfliTotalSupply: btc2xfliTotalSupply,\n      dataTotalSupply: dataTotalSupply,\n      imaticflipTotalSupply: imaticflipTotalSupply,\n      matic2xflipTotalSupply: matic2xflipTotalSupply,\n      iethflipTotalSupply: iethflipTotalSupply\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenSupplyProvider, \"02lkK9FPYKT2DUx2D6bsJtyULZs=\", false, function () {\n  return [useWallet];\n});\n\n_c = TokenSupplyProvider;\nexport default TokenSupplyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenSupplyProvider\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/contexts/TokenSupply/TokenSupplyProvider.tsx"],"names":["React","useEffect","useState","BigNumber","bedTokenAddress","btc2xfliTokenAddress","dataTokenAddress","dpiTokenAddress","dpiTokenPolygonAddress","wlkrTokenAddress","wlkrTokenPolygonAddress","eth2xflipTokenAddress","eth2xfliTokenAddress","gmiTokenAddress","iethflipTokenAddress","imaticflipTokenAddress","matic2xflipTokenAddress","mviTokenAddress","mviTokenPolygonAddress","useWallet","MAINNET_CHAIN_DATA","POLYGON_CHAIN_DATA","getTokenSupply","TokenSupplyContext","TokenSupplyProvider","children","dpiTotalSupply","setDpiTotalSupply","wlkrTotalSupply","setWlkrTotalSupply","mviTotalSupply","setMviTotalSupply","bedTotalSupply","setBedTotalSupply","gmiTotalSupply","setGmiTotalSupply","eth2xfliTotalSupply","setEth2xfliTotalSupply","eth2xflipTotalSupply","setEth2xflipTotalSupply","btc2xfliTotalSupply","setBtc2xfliTotalSupply","dataTotalSupply","setDataTotalSupply","matic2xflipTotalSupply","setMatic2xflipTotalSupply","iethflipTotalSupply","setiEthflipTotalSupply","imaticflipTotalSupply","setiMaticflipTotalSupply","ethereum","provider","chainId","then","result","dpiResult","wlkrResult","mviResult","bedResult","gmiResult","eth2xFliResult","btc2xFliResult","dataResult","totalSupply","toString","dividedBy","pow","undefined","catch","error","console","eth2xFLIPResult","iethFLIPResult","imaticFLIPResult","matic2xFLIPResult"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport { provider } from 'web3-core'\n\nimport {\n  bedTokenAddress,\n  btc2xfliTokenAddress,\n  dataTokenAddress,\n  dpiTokenAddress,\n  dpiTokenPolygonAddress,\n  wlkrTokenAddress,\n  wlkrTokenPolygonAddress,\n  eth2xflipTokenAddress,\n  eth2xfliTokenAddress,\n  gmiTokenAddress,\n  iethflipTokenAddress,\n  imaticflipTokenAddress,\n  matic2xflipTokenAddress,\n  mviTokenAddress,\n  mviTokenPolygonAddress,\n} from 'constants/ethContractAddresses'\nimport useWallet from 'hooks/useWallet'\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from 'utils/connectors'\nimport { getTokenSupply } from 'utils/setjsApi'\n\nimport TokenSupplyContext from './TokenSupplyContext'\n\nconst TokenSupplyProvider: React.FC = ({ children }) => {\n  const [dpiTotalSupply, setDpiTotalSupply] = useState<BigNumber>()\n  const [wlkrTotalSupply, setWlkrTotalSupply] = useState<BigNumber>()\n  const [mviTotalSupply, setMviTotalSupply] = useState<BigNumber>()\n  const [bedTotalSupply, setBedTotalSupply] = useState<BigNumber>()\n  const [gmiTotalSupply, setGmiTotalSupply] = useState<BigNumber>()\n  const [eth2xfliTotalSupply, setEth2xfliTotalSupply] = useState<BigNumber>()\n  const [eth2xflipTotalSupply, setEth2xflipTotalSupply] = useState<BigNumber>()\n  const [btc2xfliTotalSupply, setBtc2xfliTotalSupply] = useState<BigNumber>()\n  const [dataTotalSupply, setDataTotalSupply] = useState<BigNumber>()\n  const [matic2xflipTotalSupply, setMatic2xflipTotalSupply] =\n    useState<BigNumber>()\n  const [iethflipTotalSupply, setiEthflipTotalSupply] = useState<BigNumber>()\n  const [imaticflipTotalSupply, setiMaticflipTotalSupply] =\n    useState<BigNumber>()\n  const { ethereum: provider, chainId } = useWallet()\n\n  useEffect(() => {\n    //mainnet\n    if (\n      chainId &&\n      chainId === MAINNET_CHAIN_DATA.chainId &&\n      provider &&\n      dpiTokenAddress &&\n      wlkrTokenAddress &&\n      mviTokenAddress &&\n      bedTokenAddress &&\n      gmiTokenAddress &&\n      eth2xfliTokenAddress &&\n      btc2xfliTokenAddress &&\n      dataTokenAddress\n    ) {\n      getTokenSupply(\n        provider,\n        [\n          dpiTokenAddress,\n          wlkrTokenAddress, // Added WLKR\n          mviTokenAddress,\n          bedTokenAddress,\n          gmiTokenAddress,\n          eth2xfliTokenAddress,\n          btc2xfliTokenAddress,\n          dataTokenAddress,\n        ],\n        chainId\n      )\n        .then((result) => {\n          const [\n            dpiResult,\n            wlkrResult, // Added WLKR\n            mviResult,\n            bedResult,\n            gmiResult,\n            eth2xFliResult,\n            btc2xFliResult,\n            dataResult,\n          ] = result\n          setDpiTotalSupply(\n            new BigNumber(dpiResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setWlkrTotalSupply(\n            new BigNumber(wlkrResult.totalSupply.toString()).dividedBy(    // Added WLKR\n              new BigNumber(10).pow(18)\n            )\n          )\n          setMviTotalSupply(\n            new BigNumber(mviResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setBedTotalSupply(\n            new BigNumber(bedResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setGmiTotalSupply(\n            new BigNumber(gmiResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setEth2xfliTotalSupply(\n            new BigNumber(eth2xFliResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setEth2xflipTotalSupply(undefined)\n          setBtc2xfliTotalSupply(\n            new BigNumber(btc2xFliResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setDataTotalSupply(\n            new BigNumber(dataResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n        })\n        .catch((error: any) => console.error(error))\n    } else if (\n      chainId &&\n      chainId === POLYGON_CHAIN_DATA.chainId &&\n      provider &&\n      dpiTokenPolygonAddress &&\n      wlkrTokenPolygonAddress &&    // Added WLKR\n      mviTokenPolygonAddress &&\n      eth2xflipTokenAddress &&\n      iethflipTokenAddress &&\n      matic2xflipTokenAddress &&\n      imaticflipTokenAddress\n    ) {\n      getTokenSupply(\n        provider,\n        [\n          dpiTokenPolygonAddress,\n          wlkrTokenPolygonAddress,     // Added WLKR\n          mviTokenPolygonAddress,\n          eth2xflipTokenAddress,\n          iethflipTokenAddress,\n          imaticflipTokenAddress,\n          matic2xflipTokenAddress,\n        ],\n        chainId\n      )\n        .then((result) => {\n          const [\n            dpiResult,\n            wlkrResult,   // Added WLKR\n            mviResult,\n            eth2xFLIPResult,\n            iethFLIPResult,\n            imaticFLIPResult,\n            matic2xFLIPResult,\n          ] = result\n          setDpiTotalSupply(\n            new BigNumber(dpiResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setWlkrTotalSupply(\n            new BigNumber(wlkrResult.totalSupply.toString()).dividedBy(   // Added WLKR\n              new BigNumber(10).pow(18)\n            )\n          )\n          setMviTotalSupply(\n            new BigNumber(mviResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setEth2xflipTotalSupply(\n            new BigNumber(eth2xFLIPResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setiEthflipTotalSupply(\n            new BigNumber(iethFLIPResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setMatic2xflipTotalSupply(\n            new BigNumber(matic2xFLIPResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n          setiMaticflipTotalSupply(\n            new BigNumber(imaticFLIPResult.totalSupply.toString()).dividedBy(\n              new BigNumber(10).pow(18)\n            )\n          )\n\n          setBedTotalSupply(undefined)\n          setGmiTotalSupply(undefined)\n          setEth2xfliTotalSupply(undefined)\n          setBtc2xfliTotalSupply(undefined)\n          setDataTotalSupply(undefined)\n        })\n        .catch((error: any) => console.error(error))\n    }\n  }, [chainId, provider])\n\n  return (\n    <TokenSupplyContext.Provider\n      value={{\n        dpiTotalSupply: dpiTotalSupply,\n        wlkrTotalSupply: wlkrTotalSupply, // Added WLKR\n        mviTotalSupply: mviTotalSupply,\n        bedTotalSupply: bedTotalSupply,\n        gmiTotalSupply: gmiTotalSupply,\n        eth2xfliTotalSupply: eth2xfliTotalSupply,\n        eth2xflipTotalSupply: eth2xflipTotalSupply,\n        btc2xfliTotalSupply: btc2xfliTotalSupply,\n        dataTotalSupply: dataTotalSupply,\n        imaticflipTotalSupply: imaticflipTotalSupply,\n        matic2xflipTotalSupply: matic2xflipTotalSupply,\n        iethflipTotalSupply: iethflipTotalSupply,\n      }}\n    >\n      {children}\n    </TokenSupplyContext.Provider>\n  )\n}\n\nexport default TokenSupplyProvider\n"]},"metadata":{},"sourceType":"module"}