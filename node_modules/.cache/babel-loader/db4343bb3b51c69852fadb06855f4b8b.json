{"ast":null,"code":"import Set from 'set.js';\nimport { basicIssuanceModuleAddress, basicIssuanceModulePolygonAddress, controllerAddress, debtIssuanceModuleAddress, debtIssuanceModuleV2Address, debtIssuanceModuleV2PolygonAddress, governanceModuleAddress, masterOracleAddress, navIssuanceModuleAddress, protocolViewerAddress, protocolViewerPolygonAddress, setTokenCreatorAddress, streamingFeeModuleAddress, streamingFeeModulePolygonAddress, tradeModuleAddress, tradeModulePolygonAddress } from 'constants/ethContractAddresses';\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from './connectors';\nexport async function getTokenSupply(ethersProvider, productAddresses, chainId) {\n  if (basicIssuanceModuleAddress === undefined || basicIssuanceModulePolygonAddress === undefined || streamingFeeModuleAddress === undefined || streamingFeeModulePolygonAddress === undefined || tradeModuleAddress === undefined || tradeModulePolygonAddress === undefined || debtIssuanceModuleAddress === undefined || debtIssuanceModuleV2Address === undefined || debtIssuanceModuleV2PolygonAddress === undefined) {\n    throw new Error('A set JS module address is not defined. Please check your .env file');\n  }\n\n  const set = getSet(ethersProvider, chainId);\n  let moduleAddresses;\n\n  if (chainId === MAINNET_CHAIN_DATA.chainId) {\n    moduleAddresses = [basicIssuanceModuleAddress, streamingFeeModuleAddress, tradeModuleAddress, debtIssuanceModuleAddress];\n  } else {\n    moduleAddresses = [basicIssuanceModulePolygonAddress, streamingFeeModulePolygonAddress, tradeModulePolygonAddress, debtIssuanceModuleV2PolygonAddress];\n  }\n\n  return await set.setToken.batchFetchSetDetailsAsync(productAddresses, moduleAddresses);\n}\nexport async function getStreamingFees(ethersProvider, productAddresses, chainId) {\n  const set = getSet(ethersProvider, chainId);\n  return set.fees.batchFetchStreamingFeeInfoAsync(productAddresses);\n}\nexport async function getSetDetails(ethersProvider, productAddresses, chainId) {\n  if (basicIssuanceModuleAddress === undefined || basicIssuanceModulePolygonAddress === undefined || streamingFeeModuleAddress === undefined || streamingFeeModulePolygonAddress === undefined || tradeModuleAddress === undefined || tradeModulePolygonAddress === undefined || debtIssuanceModuleAddress === undefined || debtIssuanceModuleV2Address === undefined || debtIssuanceModuleV2PolygonAddress === undefined) {\n    throw new Error('A set JS module address is not defined. Please check your .env file');\n  }\n\n  const set = getSet(ethersProvider, chainId);\n  let moduleAddresses = [];\n\n  if (chainId === MAINNET_CHAIN_DATA.chainId) {\n    moduleAddresses = [basicIssuanceModuleAddress, streamingFeeModuleAddress, tradeModuleAddress, debtIssuanceModuleAddress, debtIssuanceModuleV2Address];\n  } else if (chainId === POLYGON_CHAIN_DATA.chainId) {\n    moduleAddresses = [basicIssuanceModulePolygonAddress, streamingFeeModulePolygonAddress, tradeModulePolygonAddress, debtIssuanceModuleV2PolygonAddress];\n  }\n\n  return set.setToken.batchFetchSetDetailsAsync(productAddresses, moduleAddresses);\n}\n\nfunction getSet(ethersProvider, chainId) {\n  if (!chainId || basicIssuanceModuleAddress === undefined || basicIssuanceModulePolygonAddress === undefined || controllerAddress === undefined || masterOracleAddress === undefined || navIssuanceModuleAddress === undefined || protocolViewerAddress === undefined || protocolViewerPolygonAddress === undefined || setTokenCreatorAddress === undefined || streamingFeeModuleAddress === undefined || streamingFeeModulePolygonAddress === undefined || tradeModuleAddress === undefined || tradeModulePolygonAddress === undefined || governanceModuleAddress === undefined || debtIssuanceModuleAddress === undefined || debtIssuanceModuleV2Address === undefined || debtIssuanceModuleV2PolygonAddress === undefined) {\n    throw new Error('A set JS address is not defined. Please check your .env file');\n  }\n\n  if (chainId === POLYGON_CHAIN_DATA.chainId) {\n    return new Set({\n      web3Provider: ethersProvider,\n      basicIssuanceModuleAddress: basicIssuanceModulePolygonAddress,\n      controllerAddress: controllerAddress,\n      masterOracleAddress: masterOracleAddress,\n      navIssuanceModuleAddress: navIssuanceModuleAddress,\n      protocolViewerAddress: protocolViewerPolygonAddress,\n      setTokenCreatorAddress: setTokenCreatorAddress,\n      streamingFeeModuleAddress: streamingFeeModulePolygonAddress,\n      tradeModuleAddress: tradeModulePolygonAddress,\n      governanceModuleAddress: governanceModuleAddress,\n      debtIssuanceModuleAddress: debtIssuanceModuleAddress,\n      debtIssuanceModuleV2Address: debtIssuanceModuleV2PolygonAddress\n    });\n  }\n\n  return new Set({\n    web3Provider: ethersProvider,\n    basicIssuanceModuleAddress: basicIssuanceModuleAddress,\n    controllerAddress: controllerAddress,\n    masterOracleAddress: masterOracleAddress,\n    navIssuanceModuleAddress: navIssuanceModuleAddress,\n    protocolViewerAddress: protocolViewerAddress,\n    setTokenCreatorAddress: setTokenCreatorAddress,\n    streamingFeeModuleAddress: streamingFeeModuleAddress,\n    tradeModuleAddress: tradeModuleAddress,\n    governanceModuleAddress: governanceModuleAddress,\n    debtIssuanceModuleAddress: debtIssuanceModuleAddress,\n    debtIssuanceModuleV2Address: debtIssuanceModuleAddress\n  });\n}","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/utils/setjsApi.ts"],"names":["Set","basicIssuanceModuleAddress","basicIssuanceModulePolygonAddress","controllerAddress","debtIssuanceModuleAddress","debtIssuanceModuleV2Address","debtIssuanceModuleV2PolygonAddress","governanceModuleAddress","masterOracleAddress","navIssuanceModuleAddress","protocolViewerAddress","protocolViewerPolygonAddress","setTokenCreatorAddress","streamingFeeModuleAddress","streamingFeeModulePolygonAddress","tradeModuleAddress","tradeModulePolygonAddress","MAINNET_CHAIN_DATA","POLYGON_CHAIN_DATA","getTokenSupply","ethersProvider","productAddresses","chainId","undefined","Error","set","getSet","moduleAddresses","setToken","batchFetchSetDetailsAsync","getStreamingFees","fees","batchFetchStreamingFeeInfoAsync","getSetDetails","web3Provider"],"mappings":"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","sourcesContent":["import Set from 'set.js'\nimport { SetDetails, StreamingFeeInfo } from 'set.js/dist/types/src/types'\n\nimport { JsonRpcProvider } from '@ethersproject/providers'\n\nimport {\n  basicIssuanceModuleAddress,\n  basicIssuanceModulePolygonAddress,\n  controllerAddress,\n  debtIssuanceModuleAddress,\n  debtIssuanceModuleV2Address,\n  debtIssuanceModuleV2PolygonAddress,\n  governanceModuleAddress,\n  masterOracleAddress,\n  navIssuanceModuleAddress,\n  protocolViewerAddress,\n  protocolViewerPolygonAddress,\n  setTokenCreatorAddress,\n  streamingFeeModuleAddress,\n  streamingFeeModulePolygonAddress,\n  tradeModuleAddress,\n  tradeModulePolygonAddress,\n} from 'constants/ethContractAddresses'\n\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from './connectors'\n\nexport async function getTokenSupply(\n  ethersProvider: any,\n  productAddresses: string[],\n  chainId: number\n): Promise<SetDetails[]> {\n  if (\n    basicIssuanceModuleAddress === undefined ||\n    basicIssuanceModulePolygonAddress === undefined ||\n    streamingFeeModuleAddress === undefined ||\n    streamingFeeModulePolygonAddress === undefined ||\n    tradeModuleAddress === undefined ||\n    tradeModulePolygonAddress === undefined ||\n    debtIssuanceModuleAddress === undefined ||\n    debtIssuanceModuleV2Address === undefined ||\n    debtIssuanceModuleV2PolygonAddress === undefined\n  ) {\n    throw new Error(\n      'A set JS module address is not defined. Please check your .env file'\n    )\n  }\n\n  const set = getSet(ethersProvider, chainId)\n  let moduleAddresses\n  if (chainId === MAINNET_CHAIN_DATA.chainId) {\n    moduleAddresses = [\n      basicIssuanceModuleAddress,\n      streamingFeeModuleAddress,\n      tradeModuleAddress,\n      debtIssuanceModuleAddress,\n    ]\n  } else {\n    moduleAddresses = [\n      basicIssuanceModulePolygonAddress,\n      streamingFeeModulePolygonAddress,\n      tradeModulePolygonAddress,\n      debtIssuanceModuleV2PolygonAddress,\n    ]\n  }\n  return await set.setToken.batchFetchSetDetailsAsync(\n    productAddresses,\n    moduleAddresses\n  )\n}\n\nexport async function getStreamingFees(\n  ethersProvider: any,\n  productAddresses: string[],\n  chainId: number\n): Promise<StreamingFeeInfo[]> {\n  const set = getSet(ethersProvider, chainId)\n  return set.fees.batchFetchStreamingFeeInfoAsync(productAddresses)\n}\n\nexport async function getSetDetails(\n  ethersProvider: any,\n  productAddresses: string[],\n  chainId: number\n): Promise<SetDetails[]> {\n  if (\n    basicIssuanceModuleAddress === undefined ||\n    basicIssuanceModulePolygonAddress === undefined ||\n    streamingFeeModuleAddress === undefined ||\n    streamingFeeModulePolygonAddress === undefined ||\n    tradeModuleAddress === undefined ||\n    tradeModulePolygonAddress === undefined ||\n    debtIssuanceModuleAddress === undefined ||\n    debtIssuanceModuleV2Address === undefined ||\n    debtIssuanceModuleV2PolygonAddress === undefined\n  ) {\n    throw new Error(\n      'A set JS module address is not defined. Please check your .env file'\n    )\n  }\n\n  const set = getSet(ethersProvider, chainId)\n  let moduleAddresses: string[] = []\n  if (chainId === MAINNET_CHAIN_DATA.chainId) {\n    moduleAddresses = [\n      basicIssuanceModuleAddress,\n      streamingFeeModuleAddress,\n      tradeModuleAddress,\n      debtIssuanceModuleAddress,\n      debtIssuanceModuleV2Address,\n    ]\n  } else if (chainId === POLYGON_CHAIN_DATA.chainId) {\n    moduleAddresses = [\n      basicIssuanceModulePolygonAddress,\n      streamingFeeModulePolygonAddress,\n      tradeModulePolygonAddress,\n      debtIssuanceModuleV2PolygonAddress,\n    ]\n  }\n  return set.setToken.batchFetchSetDetailsAsync(\n    productAddresses,\n    moduleAddresses\n  )\n}\n\nfunction getSet(ethersProvider: any, chainId: number): Set {\n  if (\n    !chainId ||\n    basicIssuanceModuleAddress === undefined ||\n    basicIssuanceModulePolygonAddress === undefined ||\n    controllerAddress === undefined ||\n    masterOracleAddress === undefined ||\n    navIssuanceModuleAddress === undefined ||\n    protocolViewerAddress === undefined ||\n    protocolViewerPolygonAddress === undefined ||\n    setTokenCreatorAddress === undefined ||\n    streamingFeeModuleAddress === undefined ||\n    streamingFeeModulePolygonAddress === undefined ||\n    tradeModuleAddress === undefined ||\n    tradeModulePolygonAddress === undefined ||\n    governanceModuleAddress === undefined ||\n    debtIssuanceModuleAddress === undefined ||\n    debtIssuanceModuleV2Address === undefined ||\n    debtIssuanceModuleV2PolygonAddress === undefined\n  ) {\n    throw new Error(\n      'A set JS address is not defined. Please check your .env file'\n    )\n  }\n  if (chainId === POLYGON_CHAIN_DATA.chainId) {\n    return new Set({\n      web3Provider: ethersProvider,\n      basicIssuanceModuleAddress: basicIssuanceModulePolygonAddress,\n      controllerAddress: controllerAddress,\n      masterOracleAddress: masterOracleAddress,\n      navIssuanceModuleAddress: navIssuanceModuleAddress,\n      protocolViewerAddress: protocolViewerPolygonAddress,\n      setTokenCreatorAddress: setTokenCreatorAddress,\n      streamingFeeModuleAddress: streamingFeeModulePolygonAddress,\n      tradeModuleAddress: tradeModulePolygonAddress,\n      governanceModuleAddress: governanceModuleAddress,\n      debtIssuanceModuleAddress: debtIssuanceModuleAddress,\n      debtIssuanceModuleV2Address: debtIssuanceModuleV2PolygonAddress,\n    })\n  }\n  return new Set({\n    web3Provider: ethersProvider,\n    basicIssuanceModuleAddress: basicIssuanceModuleAddress,\n    controllerAddress: controllerAddress,\n    masterOracleAddress: masterOracleAddress,\n    navIssuanceModuleAddress: navIssuanceModuleAddress,\n    protocolViewerAddress: protocolViewerAddress,\n    setTokenCreatorAddress: setTokenCreatorAddress,\n    streamingFeeModuleAddress: streamingFeeModuleAddress,\n    tradeModuleAddress: tradeModuleAddress,\n    governanceModuleAddress: governanceModuleAddress,\n    debtIssuanceModuleAddress: debtIssuanceModuleAddress,\n    debtIssuanceModuleV2Address: debtIssuanceModuleAddress,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}