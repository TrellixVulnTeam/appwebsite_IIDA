{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/views/Farm/components/Stake/components/V3StakeDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, ModalActions, ModalContent } from 'react-neu';\nimport styled from 'styled-components';\nimport { getActiveFarms, getMostRecentFarmNumber, getUpcomingFarms } from 'index-sdk/uniV3Farm';\nimport { deriveRGBColorFromString } from 'utils/colorUtils';\nimport NftFarmPlot from './NftFarmPlot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/**\n * V3StakingDetail\n * Content for the V3Staking Modal. Displays different information & copy depending\n * on whether there are upcoming/active farms, or only expired farms.\n */\nconst StakeModal = ({\n  farm,\n  selectedNftId,\n  onStake,\n  onClose\n}) => {\n  _s();\n\n  const [activeFarmPlot, setActiveFarmPlot] = useState();\n  const handleStakeClick = useCallback(() => {\n    if (!selectedNftId) return;\n    onStake(selectedNftId, farm);\n    onClose && onClose();\n  }, [selectedNftId, onStake, farm, onClose]);\n  useEffect(() => {\n    setActiveFarmPlot(farm.farms[getMostRecentFarmNumber(farm)]);\n  }, [farm]);\n  const hasUpcomingFarm = getUpcomingFarms(farm).length > 0;\n  const hasActiveFarm = getActiveFarms(farm).length > 0;\n\n  if (!hasUpcomingFarm && !hasActiveFarm) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StyledNftCardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(StyledBigNftColor, {\n              nftColor: deriveRGBColorFromString((selectedNftId === null || selectedNftId === void 0 ? void 0 : selectedNftId.toString()) || '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), selectedNftId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This token is not eligible for any active or upcoming Index Coop farms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          variant: \"secondary\",\n          text: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (hasUpcomingFarm) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StyledNftCardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(StyledBigNftColor, {\n              nftColor: deriveRGBColorFromString((selectedNftId === null || selectedNftId === void 0 ? void 0 : selectedNftId.toString()) || '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), selectedNftId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This token is currently unstaked and undeposited in any active LM farms. In order to earn Uniswap V3 LM rewards you must deposit this NFT to the Uniswap V3 Staking contract, and stake it in the following upcoming farm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Farm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NftFarmPlot, {\n            farmName: 'Uniswap V3 ' + farm.poolLabel + ' LM #1',\n            farmPlot: activeFarmPlot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          variant: \"secondary\",\n          text: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          text: \"Staking Not Yet Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StyledNftCardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(StyledBigNftColor, {\n            nftColor: deriveRGBColorFromString((selectedNftId === null || selectedNftId === void 0 ? void 0 : selectedNftId.toString()) || '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), selectedNftId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This token is currently unstaked and undeposited in any active LM farms. In order to earn Uniswap V3 LM rewards you must deposit this NFT to the Uniswap V3 Staking contract, and stake it in the following farm:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NftFarmPlot, {\n          farmName: 'Uniswap V3 ' + farm.poolLabel + ' LM #1',\n          farmPlot: activeFarmPlot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"secondary\",\n        text: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStakeClick,\n        text: \"Deposit & Stake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StakeModal, \"ssIgnMHElE2P2nq9ZNAxj78Vcnw=\");\n\n_c = StakeModal;\nconst StyledBigNftColor = styled.div`\n  height: 30px;\n  width: 30px;\n  margin-right: 10px;\n  border-radius: 20px;\n  ${props => `background-color: #${props.nftColor};`}\n`;\n_c2 = StyledBigNftColor;\nconst StyledNftCardTitle = styled.h2`\n  display: flex;\n  align-items: center;\n`;\n_c3 = StyledNftCardTitle;\nexport default StakeModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StakeModal\");\n$RefreshReg$(_c2, \"StyledBigNftColor\");\n$RefreshReg$(_c3, \"StyledNftCardTitle\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/views/Farm/components/Stake/components/V3StakeDetail.tsx"],"names":["React","useCallback","useEffect","useState","Button","ModalActions","ModalContent","styled","getActiveFarms","getMostRecentFarmNumber","getUpcomingFarms","deriveRGBColorFromString","NftFarmPlot","StakeModal","farm","selectedNftId","onStake","onClose","activeFarmPlot","setActiveFarmPlot","handleStakeClick","farms","hasUpcomingFarm","length","hasActiveFarm","toString","poolLabel","StyledBigNftColor","div","props","nftColor","StyledNftCardTitle","h2"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\n\nimport { Button, ModalActions, ModalContent, ModalProps } from 'react-neu'\n\nimport styled from 'styled-components'\n\nimport { FarmData, V3Farm } from 'constants/v3Farms'\nimport {\n  getActiveFarms,\n  getMostRecentFarmNumber,\n  getUpcomingFarms,\n} from 'index-sdk/uniV3Farm'\nimport { deriveRGBColorFromString } from 'utils/colorUtils'\n\nimport NftFarmPlot from './NftFarmPlot'\n\ninterface StakeModalProps extends ModalProps {\n  farm: V3Farm\n  selectedNftId: number | undefined\n  onStake: (nftId: number, farm: V3Farm) => void\n  onClose: () => void\n}\n\n/**\n * V3StakingDetail\n * Content for the V3Staking Modal. Displays different information & copy depending\n * on whether there are upcoming/active farms, or only expired farms.\n */\nconst StakeModal: React.FC<StakeModalProps> = ({\n  farm,\n  selectedNftId,\n  onStake,\n  onClose,\n}) => {\n  const [activeFarmPlot, setActiveFarmPlot] = useState<FarmData>()\n\n  const handleStakeClick = useCallback(() => {\n    if (!selectedNftId) return\n\n    onStake(selectedNftId, farm)\n    onClose && onClose()\n  }, [selectedNftId, onStake, farm, onClose])\n\n  useEffect(() => {\n    setActiveFarmPlot(farm.farms[getMostRecentFarmNumber(farm)])\n  }, [farm])\n\n  const hasUpcomingFarm = getUpcomingFarms(farm).length > 0\n  const hasActiveFarm = getActiveFarms(farm).length > 0\n\n  if (!hasUpcomingFarm && !hasActiveFarm) {\n    return (\n      <>\n        <ModalContent>\n          <div>\n            <StyledNftCardTitle>\n              <StyledBigNftColor\n                nftColor={deriveRGBColorFromString(\n                  selectedNftId?.toString() || ''\n                )}\n              />\n              {selectedNftId}\n            </StyledNftCardTitle>\n            <p>\n              This token is not eligible for any active or upcoming Index Coop\n              farms.\n            </p>\n          </div>\n        </ModalContent>\n        <ModalActions>\n          <Button onClick={onClose} variant='secondary' text='Cancel' />\n        </ModalActions>\n      </>\n    )\n  }\n\n  if (hasUpcomingFarm) {\n    return (\n      <>\n        <ModalContent>\n          <div>\n            <StyledNftCardTitle>\n              <StyledBigNftColor\n                nftColor={deriveRGBColorFromString(\n                  selectedNftId?.toString() || ''\n                )}\n              />\n              {selectedNftId}\n            </StyledNftCardTitle>\n            <p>\n              This token is currently unstaked and undeposited in any active LM\n              farms. In order to earn Uniswap V3 LM rewards you must deposit\n              this NFT to the Uniswap V3 Staking contract, and stake it in the\n              following upcoming farm:\n            </p>\n\n            <h3>Upcoming Farm</h3>\n            <NftFarmPlot\n              farmName={'Uniswap V3 ' + farm.poolLabel + ' LM #1'}\n              farmPlot={activeFarmPlot}\n            />\n          </div>\n        </ModalContent>\n        <ModalActions>\n          <Button onClick={onClose} variant='secondary' text='Cancel' />\n          <Button disabled text='Staking Not Yet Available' />\n        </ModalActions>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <ModalContent>\n        <div>\n          <StyledNftCardTitle>\n            <StyledBigNftColor\n              nftColor={deriveRGBColorFromString(\n                selectedNftId?.toString() || ''\n              )}\n            />\n            {selectedNftId}\n          </StyledNftCardTitle>\n          <p>\n            This token is currently unstaked and undeposited in any active LM\n            farms. In order to earn Uniswap V3 LM rewards you must deposit this\n            NFT to the Uniswap V3 Staking contract, and stake it in the\n            following farm:\n          </p>\n\n          <h3>Active Farm</h3>\n          <NftFarmPlot\n            farmName={'Uniswap V3 ' + farm.poolLabel + ' LM #1'}\n            farmPlot={activeFarmPlot}\n          />\n        </div>\n      </ModalContent>\n      <ModalActions>\n        <Button onClick={onClose} variant='secondary' text='Cancel' />\n        <Button onClick={handleStakeClick} text='Deposit & Stake' />\n      </ModalActions>\n    </>\n  )\n}\n\nconst StyledBigNftColor = styled.div`\n  height: 30px;\n  width: 30px;\n  margin-right: 10px;\n  border-radius: 20px;\n  ${(props: { nftColor: string }) => `background-color: #${props.nftColor};`}\n`\n\nconst StyledNftCardTitle = styled.h2`\n  display: flex;\n  align-items: center;\n`\n\nexport default StakeModal\n"]},"metadata":{},"sourceType":"module"}