{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/components/ProductPage/ProductPriceChanges.tsx\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport styled from 'styled-components';\nimport { ProductPageSection } from './ProductPageLayouts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPriceChanges = ({\n  prices,\n  hourlyPrices\n}) => {\n  const priceChangeIntervals = [['1 Day', 1], ['1 Month', 30], ['3 Months', 90], ['1 Year', 365]];\n\n  const calculatePriceChange = daysOfComparison => {\n    if (daysOfComparison <= 30) {\n      const startPrice = hourlyPrices ? hourlyPrices.slice(-24 * daysOfComparison)[0][1] : 1;\n      const hourlyPricesLength = hourlyPrices ? hourlyPrices.length - 1 : 0;\n      const latestPrice = hourlyPrices ? hourlyPrices[hourlyPricesLength][1] : 1;\n      return (latestPrice - startPrice) / startPrice * 100;\n    } else if (prices && (prices === null || prices === void 0 ? void 0 : prices.length) > daysOfComparison) {\n      const startPrice = prices[prices.length - daysOfComparison][1];\n      const latestPrice = prices[prices.length - 1][1];\n      return (latestPrice - startPrice) / startPrice * 100;\n    }\n\n    return 0;\n  };\n\n  const renderAssetPriceChange = priceChange => {\n    // placeholder if no data available for timerange\n    if (!priceChange) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    const formattedChange = numeral(priceChange).format('+0.00a') + '%';\n\n    if (priceChange > 0) {\n      return /*#__PURE__*/_jsxDEV(StyledPositiveChange, {\n        children: formattedChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(StyledNegativeChange, {\n      children: formattedChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderPriceChanges = config => {\n    const [dateString, daysOfComparison] = config;\n    const priceChange = calculatePriceChange(daysOfComparison);\n    return /*#__PURE__*/_jsxDEV(StyledPriceChange, {\n      children: [/*#__PURE__*/_jsxDEV(StyledDateString, {\n        children: dateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), renderAssetPriceChange(priceChange)]\n    }, daysOfComparison, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductPageSection, {\n    title: \"Changes\",\n    children: /*#__PURE__*/_jsxDEV(PriceChangesContainer, {\n      children: priceChangeIntervals.map(renderPriceChanges)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProductPriceChanges;\nconst PriceChangesContainer = styled.div`\n  display: flex;\n`;\n_c2 = PriceChangesContainer;\nconst StyledPriceChange = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n_c3 = StyledPriceChange;\nconst StyledDateString = styled.div`\n  font-size: 16px;\n  margin-bottom: 16px;\n`;\n_c4 = StyledDateString;\nconst StyledNegativeChange = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c5 = StyledNegativeChange;\nconst StyledPositiveChange = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.green};\n`;\n_c6 = StyledPositiveChange;\nexport default ProductPriceChanges;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ProductPriceChanges\");\n$RefreshReg$(_c2, \"PriceChangesContainer\");\n$RefreshReg$(_c3, \"StyledPriceChange\");\n$RefreshReg$(_c4, \"StyledDateString\");\n$RefreshReg$(_c5, \"StyledNegativeChange\");\n$RefreshReg$(_c6, \"StyledPositiveChange\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/components/ProductPage/ProductPriceChanges.tsx"],"names":["React","numeral","styled","ProductPageSection","ProductPriceChanges","prices","hourlyPrices","priceChangeIntervals","calculatePriceChange","daysOfComparison","startPrice","slice","hourlyPricesLength","length","latestPrice","renderAssetPriceChange","priceChange","formattedChange","format","renderPriceChanges","config","dateString","map","PriceChangesContainer","div","StyledPriceChange","StyledDateString","StyledNegativeChange","theme","colors","red","StyledPositiveChange","green"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react'\n\nimport numeral from 'numeral'\nimport styled from 'styled-components'\n\nimport { ProductPageSection } from './ProductPageLayouts'\n\ninterface ProductPriceChangesProps {\n  prices?: number[][]\n  hourlyPrices?: number[][]\n}\n\nconst ProductPriceChanges: React.FC<ProductPriceChangesProps> = ({\n  prices,\n  hourlyPrices,\n}) => {\n  const priceChangeIntervals = [\n    ['1 Day', 1],\n    ['1 Month', 30],\n    ['3 Months', 90],\n    ['1 Year', 365],\n  ]\n\n  const calculatePriceChange = (daysOfComparison: number) => {\n    if (daysOfComparison <= 30) {\n      const startPrice = hourlyPrices\n        ? hourlyPrices.slice(-24 * daysOfComparison)[0][1]\n        : 1\n      const hourlyPricesLength = hourlyPrices ? hourlyPrices.length - 1 : 0\n      const latestPrice = hourlyPrices ? hourlyPrices[hourlyPricesLength][1] : 1\n      return ((latestPrice - startPrice) / startPrice) * 100\n    } else if (prices && prices?.length > daysOfComparison) {\n      const startPrice = prices[prices.length - daysOfComparison][1]\n      const latestPrice = prices[prices.length - 1][1]\n      return ((latestPrice - startPrice) / startPrice) * 100\n    }\n    return 0\n  }\n\n  const renderAssetPriceChange = (priceChange: number) => {\n    // placeholder if no data available for timerange\n    if (!priceChange) {\n      return <div>---</div>\n    }\n    const formattedChange = numeral(priceChange).format('+0.00a') + '%'\n    if (priceChange > 0) {\n      return <StyledPositiveChange>{formattedChange}</StyledPositiveChange>\n    }\n    return <StyledNegativeChange>{formattedChange}</StyledNegativeChange>\n  }\n\n  const renderPriceChanges = (config: any) => {\n    const [dateString, daysOfComparison] = config\n    const priceChange = calculatePriceChange(daysOfComparison)\n    return (\n      <StyledPriceChange key={daysOfComparison}>\n        <StyledDateString>{dateString}</StyledDateString>\n        {renderAssetPriceChange(priceChange)}\n      </StyledPriceChange>\n    )\n  }\n\n  return (\n    <ProductPageSection title='Changes'>\n      <PriceChangesContainer>\n        {priceChangeIntervals.map<ReactNode>(renderPriceChanges)}\n      </PriceChangesContainer>\n    </ProductPageSection>\n  )\n}\n\nconst PriceChangesContainer = styled.div`\n  display: flex;\n`\nconst StyledPriceChange = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`\nconst StyledDateString = styled.div`\n  font-size: 16px;\n  margin-bottom: 16px;\n`\n\nconst StyledNegativeChange = styled.div`\n  color: ${({ theme }) => theme.colors.red};\n`\n\nconst StyledPositiveChange = styled.div`\n  color: ${({ theme }) => theme.colors.green};\n`\n\nexport default ProductPriceChanges\n"]},"metadata":{},"sourceType":"module"}