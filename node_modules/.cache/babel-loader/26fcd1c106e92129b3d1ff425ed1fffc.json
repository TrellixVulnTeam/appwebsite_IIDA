{"ast":null,"code":"const createTheme = () => {\n  /* Light styles */\n  const baseColor = {\n    h: 236,\n    s: 95,\n    l: 59\n  };\n  const baseGreyColor = {\n    h: 326,\n    s: 50,\n    l: 41\n  };\n  /* Dark Styles */\n\n  const baseColorDark = {\n    h: 236,\n    s: 95,\n    l: 67\n  };\n  const baseGreyColorDark = {\n    h: 250,\n    s: 49,\n    l: 10\n  };\n  const borderRadius = 14;\n  const siteWidth = 1400;\n  const {\n    h,\n    s\n  } = baseColor;\n  const {\n    h: hDark,\n    s: sDark\n  } = baseColorDark || baseColor;\n  const {\n    h: baseGreyH\n  } = baseGreyColor || baseColor;\n  const {\n    h: baseGreyDarkH\n  } = baseGreyColorDark || baseColorDark || baseGreyColor || baseColor;\n  const blackHSLA = {\n    h: baseGreyH,\n    s: 95,\n    l: 0\n  };\n  const whiteHSLA = {\n    h: baseGreyH,\n    s: 100,\n    l: 100\n  };\n  const black = hslToCssString(blackHSLA);\n  const white = hslToCssString(whiteHSLA);\n  const grey = generateGreys(baseGreyH);\n  const blackDarkHSLA = {\n    h: baseGreyDarkH,\n    s: 95,\n    l: 4\n  };\n  const whiteDarkHSLA = {\n    h: baseGreyDarkH,\n    s: 100,\n    l: 100\n  };\n  const blackDark = hslToCssString(blackDarkHSLA);\n  const whiteDark = hslToCssString(whiteDarkHSLA);\n  const greyDark = generateGreys(baseGreyDarkH);\n  const green = hslToCssString({\n    h: 147,\n    s: 73,\n    l: 44\n  });\n  const red = hslToCssString({\n    h: 356,\n    s: 69,\n    l: 55\n  });\n  const transparentColors = generateTransparentColors(baseGreyH);\n  const buttonSizes = {\n    lg: 72,\n    md: 48,\n    sm: 36\n  };\n  const colors = {\n    black,\n    grey,\n    primary: {\n      dark: hslToCssString({\n        h,\n        s,\n        l: 5\n      }),\n      light: hslToCssString({\n        h,\n        s,\n        l: 75\n      }),\n      main: hslToCssString(baseColor)\n    },\n    white,\n    green,\n    red,\n    transparentColors\n  };\n  const colorsDark = {\n    black: blackDark,\n    grey: greyDark,\n    primary: {\n      dark: hslToCssString({\n        h: hDark,\n        s: sDark,\n        l: 15\n      }),\n      light: hslToCssString({\n        h: hDark,\n        s: sDark,\n        l: 75\n      }),\n      main: hslToCssString(baseColorDark || baseColor)\n    },\n    white: whiteDark,\n    green,\n    red,\n    transparentColors\n  };\n  const spacing = {\n    0: 0,\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 72,\n    8: 96\n  };\n  const lightTheme = {\n    baseBg: `radial-gradient(circle at top, ${grey[100]}, ${grey[200]})`,\n    baseColor: grey[200],\n    borderRadius,\n    buttonSizes,\n    colors,\n    highlightColor: grey[100],\n    shadowColor: grey[300],\n    siteWidth,\n    spacing,\n    surfaces: generateSurfaces({\n      dark: grey[300],\n      light: grey[100],\n      main: grey[200]\n    }, hslToCssString({ ...whiteHSLA,\n      a: 40\n    }), hslToCssString({ ...whiteHSLA,\n      a: 40\n    })),\n    textColor: black\n  };\n  const darkTheme = { ...lightTheme,\n    baseBg: `radial-gradient(circle at top, ${greyDark[800]}, ${greyDark[800]})`,\n    baseColor: greyDark[800],\n    colors: colorsDark,\n    highlightColor: greyDark[700],\n    shadowColor: greyDark[900],\n    surfaces: generateSurfaces({\n      dark: greyDark[900],\n      light: greyDark[700],\n      main: greyDark[800]\n    }, hslToCssString({ ...blackHSLA,\n      a: 40\n    }), hslToCssString({ ...blackHSLA,\n      a: 40\n    })),\n    textColor: whiteDark\n  };\n  return {\n    dark: darkTheme,\n    light: lightTheme\n  };\n};\n\nconst hslToCssString = hsla => {\n  const {\n    h,\n    s,\n    l,\n    a = 100\n  } = hsla;\n  return `hsl(${h}deg ${s}% ${l}% / ${a}%)`;\n};\n\nconst generateGreys = h => {\n  return {\n    100: hslToCssString({\n      h,\n      s: 20,\n      l: 96\n    }),\n    200: hslToCssString({\n      h,\n      s: 20,\n      l: 94\n    }),\n    300: hslToCssString({\n      h,\n      s: 20,\n      l: 90\n    }),\n    400: hslToCssString({\n      h,\n      s: 20,\n      l: 70\n    }),\n    500: hslToCssString({\n      h,\n      s: 7,\n      l: 52\n    }),\n    600: hslToCssString({\n      h,\n      s: 10,\n      l: 37\n    }),\n    700: hslToCssString({\n      h,\n      s: 17,\n      l: 15\n    }),\n    800: hslToCssString({\n      h,\n      s: 20,\n      l: 10\n    }),\n    900: hslToCssString({\n      h,\n      s: 20,\n      l: 5\n    })\n  };\n};\n\nconst generateTransparentColors = h => {\n  return {\n    grey: hslToCssString({\n      h,\n      s: 7,\n      l: 52,\n      a: 20\n    })\n  };\n};\n\nconst generateSurfaces = (base, highlight, shadow) => {\n  return {\n    N2: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`\n    },\n    N1: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`\n    },\n    0: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`\n    },\n    1: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`\n    },\n    2: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`\n    }\n  };\n};\n\nexport default createTheme;","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/utils/createCustomTheme.ts"],"names":["createTheme","baseColor","h","s","l","baseGreyColor","baseColorDark","baseGreyColorDark","borderRadius","siteWidth","hDark","sDark","baseGreyH","baseGreyDarkH","blackHSLA","whiteHSLA","black","hslToCssString","white","grey","generateGreys","blackDarkHSLA","whiteDarkHSLA","blackDark","whiteDark","greyDark","green","red","transparentColors","generateTransparentColors","buttonSizes","lg","md","sm","colors","primary","dark","light","main","colorsDark","spacing","lightTheme","baseBg","highlightColor","shadowColor","surfaces","generateSurfaces","a","textColor","darkTheme","hsla","base","highlight","shadow","N2","background","border","N1"],"mappings":"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","sourcesContent":["import { HSLA, Theme } from 'react-neu/dist/theme/types'\n\nconst createTheme = (): {\n  dark: Theme\n  light: Theme\n} => {\n  /* Light styles */\n  const baseColor = { h: 236, s: 95, l: 59 }\n  const baseGreyColor = { h: 326, s: 50, l: 41 }\n\n  /* Dark Styles */\n  const baseColorDark = { h: 236, s: 95, l: 67 }\n  const baseGreyColorDark = { h: 250, s: 49, l: 10 }\n\n  const borderRadius = 14\n  const siteWidth = 1400\n\n  const { h, s } = baseColor\n  const { h: hDark, s: sDark } = baseColorDark || baseColor\n  const { h: baseGreyH } = baseGreyColor || baseColor\n  const { h: baseGreyDarkH } =\n    baseGreyColorDark || baseColorDark || baseGreyColor || baseColor\n\n  const blackHSLA: HSLA = { h: baseGreyH, s: 95, l: 0 }\n  const whiteHSLA: HSLA = { h: baseGreyH, s: 100, l: 100 }\n  const black = hslToCssString(blackHSLA)\n  const white = hslToCssString(whiteHSLA)\n  const grey = generateGreys(baseGreyH)\n\n  const blackDarkHSLA: HSLA = { h: baseGreyDarkH, s: 95, l: 4 }\n  const whiteDarkHSLA: HSLA = { h: baseGreyDarkH, s: 100, l: 100 }\n  const blackDark = hslToCssString(blackDarkHSLA)\n  const whiteDark = hslToCssString(whiteDarkHSLA)\n  const greyDark = generateGreys(baseGreyDarkH)\n\n  const green = hslToCssString({ h: 147, s: 73, l: 44 })\n  const red = hslToCssString({ h: 356, s: 69, l: 55 })\n  const transparentColors = generateTransparentColors(baseGreyH)\n\n  const buttonSizes = {\n    lg: 72,\n    md: 48,\n    sm: 36,\n  }\n\n  const colors = {\n    black,\n    grey,\n    primary: {\n      dark: hslToCssString({ h, s, l: 5 }),\n      light: hslToCssString({ h, s, l: 75 }),\n      main: hslToCssString(baseColor),\n    },\n    white,\n    green,\n    red,\n    transparentColors,\n  }\n\n  const colorsDark = {\n    black: blackDark,\n    grey: greyDark,\n    primary: {\n      dark: hslToCssString({ h: hDark, s: sDark, l: 15 }),\n      light: hslToCssString({ h: hDark, s: sDark, l: 75 }),\n      main: hslToCssString(baseColorDark || baseColor),\n    },\n    white: whiteDark,\n    green,\n    red,\n    transparentColors,\n  }\n\n  const spacing = {\n    0: 0,\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 72,\n    8: 96,\n  }\n\n  const lightTheme: Theme = {\n    baseBg: `radial-gradient(circle at top, ${grey[100]}, ${grey[200]})`,\n    baseColor: grey[200],\n    borderRadius,\n    buttonSizes,\n    colors,\n    highlightColor: grey[100],\n    shadowColor: grey[300],\n    siteWidth,\n    spacing,\n    surfaces: generateSurfaces(\n      {\n        dark: grey[300],\n        light: grey[100],\n        main: grey[200],\n      },\n      hslToCssString({ ...whiteHSLA, a: 40 }),\n      hslToCssString({ ...whiteHSLA, a: 40 })\n    ),\n    textColor: black,\n  }\n\n  const darkTheme: Theme = {\n    ...lightTheme,\n    baseBg: `radial-gradient(circle at top, ${greyDark[800]}, ${greyDark[800]})`,\n    baseColor: greyDark[800],\n    colors: colorsDark,\n    highlightColor: greyDark[700],\n    shadowColor: greyDark[900],\n    surfaces: generateSurfaces(\n      {\n        dark: greyDark[900],\n        light: greyDark[700],\n        main: greyDark[800],\n      },\n      hslToCssString({ ...blackHSLA, a: 40 }),\n      hslToCssString({ ...blackHSLA, a: 40 })\n    ),\n    textColor: whiteDark,\n  }\n\n  return {\n    dark: darkTheme,\n    light: lightTheme,\n  }\n}\n\nconst hslToCssString = (hsla: HSLA) => {\n  const { h, s, l, a = 100 } = hsla\n  return `hsl(${h}deg ${s}% ${l}% / ${a}%)`\n}\n\nconst generateGreys = (h: number) => {\n  return {\n    100: hslToCssString({ h, s: 20, l: 96 }),\n    200: hslToCssString({ h, s: 20, l: 94 }),\n    300: hslToCssString({ h, s: 20, l: 90 }),\n    400: hslToCssString({ h, s: 20, l: 70 }),\n    500: hslToCssString({ h, s: 7, l: 52 }),\n    600: hslToCssString({ h, s: 10, l: 37 }),\n    700: hslToCssString({ h, s: 17, l: 15 }),\n    800: hslToCssString({ h, s: 20, l: 10 }),\n    900: hslToCssString({ h, s: 20, l: 5 }),\n  }\n}\n\nconst generateTransparentColors = (h: number) => {\n  return {\n    grey: hslToCssString({ h, s: 7, l: 52, a: 20 }),\n  }\n}\n\nconst generateSurfaces = (\n  base: {\n    dark: string\n    light: string\n    main: string\n  },\n  highlight: string,\n  shadow: string\n) => {\n  return {\n    N2: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`,\n    },\n    N1: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`,\n    },\n    0: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`,\n    },\n    1: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`,\n    },\n    2: {\n      background: `${highlight}`,\n      border: '0',\n      highlight: `none`,\n      shadow: `none`,\n    },\n  }\n}\n\nexport default createTheme\n"]},"metadata":{},"sourceType":"module"}