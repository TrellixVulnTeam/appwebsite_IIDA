{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/views/Farm/components/Stake/components/DpiStakeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, ModalActions, ModalContent, ModalTitle } from 'react-neu';\nimport Modal from 'components/CustomModal';\nimport TokenInput from 'components/TokenInput';\nimport useBalances from 'hooks/useBalances';\nimport { fromWei, getFullDisplayBalance } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StakeModal = ({\n  isOpen,\n  onDismiss,\n  onStake\n}) => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const {\n    uniswapEthDpiLpBalance\n  } = useBalances();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(fromWei(uniswapEthDpiLpBalance), 0);\n  }, [uniswapEthDpiLpBalance]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  const handleStakeClick = useCallback(() => {\n    onStake(val);\n  }, [onStake, val]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n      text: \"Stake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: /*#__PURE__*/_jsxDEV(TokenInput, {\n        value: val,\n        onSelectMax: handleSelectMax,\n        onChange: handleChange,\n        max: fullBalance,\n        symbol: \"Uniswap ETH/DPI LP Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onDismiss,\n        text: \"Cancel\",\n        variant: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakeModal, \"Lh1p+IdRB6oNStCDAOgf2JxzdZA=\", false, function () {\n  return [useBalances];\n});\n\n_c = StakeModal;\nexport default StakeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeModal\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/views/Farm/components/Stake/components/DpiStakeModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","ModalActions","ModalContent","ModalTitle","Modal","TokenInput","useBalances","fromWei","getFullDisplayBalance","StakeModal","isOpen","onDismiss","onStake","val","setVal","uniswapEthDpiLpBalance","fullBalance","handleChange","e","currentTarget","value","handleSelectMax","handleStakeClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,SACEC,MADF,EAEEC,YAFF,EAGEC,YAHF,EAKEC,UALF,QAMO,WANP;AAQA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,OAA/C;;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAC7CC,EAAAA,MAD6C;AAE7CC,EAAAA,SAF6C;AAG7CC,EAAAA;AAH6C,CAAD,KAIxC;AAAA;;AACJ,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAA6BT,WAAW,EAA9C;AAEA,QAAMU,WAAW,GAAGlB,OAAO,CAAC,MAAM;AAChC,WAAOU,qBAAqB,CAACD,OAAO,CAACQ,sBAAD,CAAR,EAAkC,CAAlC,CAA5B;AACD,GAF0B,EAExB,CAACA,sBAAD,CAFwB,CAA3B;AAIA,QAAME,YAAY,GAAGpB,WAAW,CAC7BqB,CAAD,IAA0C;AACxCJ,IAAAA,MAAM,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACD,GAH6B,EAI9B,CAACN,MAAD,CAJ8B,CAAhC;AAOA,QAAMO,eAAe,GAAGxB,WAAW,CAAC,MAAM;AACxCiB,IAAAA,MAAM,CAACE,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcF,MAAd,CAFgC,CAAnC;AAIA,QAAMQ,gBAAgB,GAAGzB,WAAW,CAAC,MAAM;AACzCe,IAAAA,OAAO,CAACC,GAAD,CAAP;AACD,GAFmC,EAEjC,CAACD,OAAD,EAAUC,GAAV,CAFiC,CAApC;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEH,MAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEG,GADT;AAEE,QAAA,WAAW,EAAEQ,eAFf;AAGE,QAAA,QAAQ,EAAEJ,YAHZ;AAIE,QAAA,GAAG,EAAED,WAJP;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,YAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,SAAjB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,OAAO,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5CD;;GAAMF,U;UAM+BH,W;;;KAN/BG,U;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\n\nimport {\n  Button,\n  ModalActions,\n  ModalContent,\n  ModalProps,\n  ModalTitle,\n} from 'react-neu'\n\nimport Modal from 'components/CustomModal'\nimport TokenInput from 'components/TokenInput'\nimport useBalances from 'hooks/useBalances'\nimport { fromWei, getFullDisplayBalance } from 'utils'\nimport BigNumber from 'utils/bignumber'\n\ninterface StakeModalProps extends ModalProps {\n  onStake: (amount: string) => void\n}\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isOpen,\n  onDismiss,\n  onStake,\n}) => {\n  const [val, setVal] = useState('')\n  const { uniswapEthDpiLpBalance } = useBalances()\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(fromWei(uniswapEthDpiLpBalance), 0)\n  }, [uniswapEthDpiLpBalance])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal]\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  const handleStakeClick = useCallback(() => {\n    onStake(val)\n  }, [onStake, val])\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalTitle text='Stake' />\n      <ModalContent>\n        <TokenInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={fullBalance}\n          symbol='Uniswap ETH/DPI LP Tokens'\n        />\n      </ModalContent>\n      <ModalActions>\n        <Button onClick={onDismiss} text='Cancel' variant='secondary' />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default StakeModal\n"]},"metadata":{},"sourceType":"module"}