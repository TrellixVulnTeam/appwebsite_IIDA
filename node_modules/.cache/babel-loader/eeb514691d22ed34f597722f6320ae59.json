{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/contexts/IEthFLIPTokenMarketData/IEthFLIPTokenMarketDataProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IEthereumFLIP } from 'constants/productTokens';\nimport { fetchHistoricalTokenMarketDataOnPolygon } from 'utils/coingeckoApi';\nimport { fetchSetComponentsBeta } from 'utils/tokensetsApi';\nimport MarketDataContext from './IEthFLIPTokenMarketDataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IEthFLIPMarketDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const [fliMarketData, setFliMarketData] = useState([[]]);\n  const [fliMarketCap, setFliMarketCap] = useState(0);\n  useEffect(() => {\n    fetchHistoricalTokenMarketDataOnPolygon(IEthereumFLIP.polygonAddress).then(response => {\n      setFliMarketData(response);\n    }).catch(error => console.log(error));\n  }, []); // TODO: Replace this with coingecko data once available.\n\n  useEffect(() => {\n    fetchSetComponentsBeta(IEthereumFLIP.tokensetsId).then(response => {\n      setFliMarketCap(response === null || response === void 0 ? void 0 : response.marketCap);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const selectLatestMarketData = marketData => {\n    var _marketData;\n\n    return (marketData === null || marketData === void 0 ? void 0 : (_marketData = marketData[marketData.length - 1]) === null || _marketData === void 0 ? void 0 : _marketData[1]) || 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(MarketDataContext.Provider, {\n    value: { ...fliMarketData,\n      latestMarketCap: fliMarketCap,\n      latestPrice: selectLatestMarketData(fliMarketData === null || fliMarketData === void 0 ? void 0 : fliMarketData.hourlyPrices),\n      latestVolume: selectLatestMarketData(fliMarketData === null || fliMarketData === void 0 ? void 0 : fliMarketData.volumes)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IEthFLIPMarketDataProvider, \"3n/QH/9gc2XLlQccSz/haDuEk3I=\");\n\n_c = IEthFLIPMarketDataProvider;\nexport default IEthFLIPMarketDataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"IEthFLIPMarketDataProvider\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/contexts/IEthFLIPTokenMarketData/IEthFLIPTokenMarketDataProvider.tsx"],"names":["React","useEffect","useState","IEthereumFLIP","fetchHistoricalTokenMarketDataOnPolygon","fetchSetComponentsBeta","MarketDataContext","IEthFLIPMarketDataProvider","children","fliMarketData","setFliMarketData","fliMarketCap","setFliMarketCap","polygonAddress","then","response","catch","error","console","log","tokensetsId","marketCap","selectLatestMarketData","marketData","length","latestMarketCap","latestPrice","hourlyPrices","latestVolume","volumes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,uCAAT,QAAwD,oBAAxD;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,0BAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAM,CAAC,EAAD,CAAN,CAAlD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAM,CAAN,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,uCAAuC,CAACD,aAAa,CAACU,cAAf,CAAvC,CACGC,IADH,CACSC,QAAD,IAAmB;AACvBL,MAAAA,gBAAgB,CAACK,QAAD,CAAhB;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJzB;AAKD,GANQ,EAMN,EANM,CAAT,CAJ6D,CAY7D;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,sBAAsB,CAACF,aAAa,CAACiB,WAAf,CAAtB,CACGN,IADH,CACSC,QAAD,IAAmB;AACvBH,MAAAA,eAAe,CAACG,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEM,SAAX,CAAf;AACD,KAHH,EAIGL,KAJH,CAIUC,KAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJzB;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,sBAAsB,GAAIC,UAAD;AAAA;;AAAA,WAC7B,CAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,2BAAAA,UAAU,CAAGA,UAAU,CAACC,MAAX,GAAoB,CAAvB,CAAV,4DAAsC,CAAtC,MAA4C,CADf;AAAA,GAA/B;;AAGA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE,EACL,GAAGf,aADE;AAELgB,MAAAA,eAAe,EAAEd,YAFZ;AAGLe,MAAAA,WAAW,EAAEJ,sBAAsB,CAACb,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEkB,YAAhB,CAH9B;AAILC,MAAAA,YAAY,EAAEN,sBAAsB,CAACb,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEoB,OAAhB;AAJ/B,KADT;AAAA,cAQGrB;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;GAAMD,0B;;KAAAA,0B;AAsCN,eAAeA,0BAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { IEthereumFLIP } from 'constants/productTokens'\nimport { fetchHistoricalTokenMarketDataOnPolygon } from 'utils/coingeckoApi'\nimport { fetchSetComponentsBeta } from 'utils/tokensetsApi'\n\nimport MarketDataContext from './IEthFLIPTokenMarketDataContext'\n\nconst IEthFLIPMarketDataProvider: React.FC = ({ children }) => {\n  const [fliMarketData, setFliMarketData] = useState<any>([[]])\n  const [fliMarketCap, setFliMarketCap] = useState<any>(0)\n\n  useEffect(() => {\n    fetchHistoricalTokenMarketDataOnPolygon(IEthereumFLIP.polygonAddress)\n      .then((response: any) => {\n        setFliMarketData(response)\n      })\n      .catch((error: any) => console.log(error))\n  }, [])\n\n  // TODO: Replace this with coingecko data once available.\n  useEffect(() => {\n    fetchSetComponentsBeta(IEthereumFLIP.tokensetsId)\n      .then((response: any) => {\n        setFliMarketCap(response?.marketCap)\n      })\n      .catch((error: any) => console.log(error))\n  }, [])\n\n  const selectLatestMarketData = (marketData?: number[][]) =>\n    marketData?.[marketData.length - 1]?.[1] || 0\n\n  return (\n    <MarketDataContext.Provider\n      value={{\n        ...fliMarketData,\n        latestMarketCap: fliMarketCap,\n        latestPrice: selectLatestMarketData(fliMarketData?.hourlyPrices),\n        latestVolume: selectLatestMarketData(fliMarketData?.volumes),\n      }}\n    >\n      {children}\n    </MarketDataContext.Provider>\n  )\n}\n\nexport default IEthFLIPMarketDataProvider\n"]},"metadata":{},"sourceType":"module"}