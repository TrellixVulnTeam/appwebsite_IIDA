{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/contexts/Eth2xFliTokenMarketData/Eth2xFliTokenMarketDataProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Ethereum2xFlexibleLeverageIndex } from 'constants/productTokens';\nimport { fetchHistoricalTokenMarketData } from 'utils/coingeckoApi';\nimport MarketDataContext from './Eth2xFliTokenMarketDataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Eth2xFliMarketDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const [fliMarketData, setFliMarketData] = useState({});\n  useEffect(() => {\n    fetchHistoricalTokenMarketData(Ethereum2xFlexibleLeverageIndex.coingeckoId).then(response => {\n      setFliMarketData(response);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const selectLatestMarketData = marketData => {\n    var _marketData;\n\n    return (marketData === null || marketData === void 0 ? void 0 : (_marketData = marketData[marketData.length - 1]) === null || _marketData === void 0 ? void 0 : _marketData[1]) || 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(MarketDataContext.Provider, {\n    value: { ...fliMarketData,\n      latestMarketCap: selectLatestMarketData(fliMarketData === null || fliMarketData === void 0 ? void 0 : fliMarketData.marketcaps),\n      latestPrice: selectLatestMarketData(fliMarketData === null || fliMarketData === void 0 ? void 0 : fliMarketData.hourlyPrices),\n      latestVolume: selectLatestMarketData(fliMarketData === null || fliMarketData === void 0 ? void 0 : fliMarketData.volumes)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Eth2xFliMarketDataProvider, \"CUcHG2SjyFUOzNkzyIfeuQ+FMps=\");\n\n_c = Eth2xFliMarketDataProvider;\nexport default Eth2xFliMarketDataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Eth2xFliMarketDataProvider\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/contexts/Eth2xFliTokenMarketData/Eth2xFliTokenMarketDataProvider.tsx"],"names":["React","useEffect","useState","Ethereum2xFlexibleLeverageIndex","fetchHistoricalTokenMarketData","MarketDataContext","Eth2xFliMarketDataProvider","children","fliMarketData","setFliMarketData","coingeckoId","then","response","catch","error","console","log","selectLatestMarketData","marketData","length","latestMarketCap","marketcaps","latestPrice","hourlyPrices","latestVolume","volumes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,+BAAT,QAAgD,yBAAhD;AACA,SAASC,8BAAT,QAA+C,oBAA/C;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,0BAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAM,EAAN,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,8BAA8B,CAACD,+BAA+B,CAACO,WAAjC,CAA9B,CACGC,IADH,CACSC,QAAD,IAAmB;AACvBH,MAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJzB;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,sBAAsB,GAAIC,UAAD;AAAA;;AAAA,WAC7B,CAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,2BAAAA,UAAU,CAAGA,UAAU,CAACC,MAAX,GAAoB,CAAvB,CAAV,4DAAsC,CAAtC,MAA4C,CADf;AAAA,GAA/B;;AAGA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE,EACL,GAAGX,aADE;AAELY,MAAAA,eAAe,EAAEH,sBAAsB,CAACT,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEa,UAAhB,CAFlC;AAGLC,MAAAA,WAAW,EAAEL,sBAAsB,CAACT,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEe,YAAhB,CAH9B;AAILC,MAAAA,YAAY,EAAEP,sBAAsB,CAACT,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEiB,OAAhB;AAJ/B,KADT;AAAA,cAQGlB;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;GAAMD,0B;;KAAAA,0B;AA4BN,eAAeA,0BAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Ethereum2xFlexibleLeverageIndex } from 'constants/productTokens'\nimport { fetchHistoricalTokenMarketData } from 'utils/coingeckoApi'\n\nimport MarketDataContext from './Eth2xFliTokenMarketDataContext'\n\nconst Eth2xFliMarketDataProvider: React.FC = ({ children }) => {\n  const [fliMarketData, setFliMarketData] = useState<any>({})\n\n  useEffect(() => {\n    fetchHistoricalTokenMarketData(Ethereum2xFlexibleLeverageIndex.coingeckoId)\n      .then((response: any) => {\n        setFliMarketData(response)\n      })\n      .catch((error: any) => console.log(error))\n  }, [])\n\n  const selectLatestMarketData = (marketData?: number[][]) =>\n    marketData?.[marketData.length - 1]?.[1] || 0\n\n  return (\n    <MarketDataContext.Provider\n      value={{\n        ...fliMarketData,\n        latestMarketCap: selectLatestMarketData(fliMarketData?.marketcaps),\n        latestPrice: selectLatestMarketData(fliMarketData?.hourlyPrices),\n        latestVolume: selectLatestMarketData(fliMarketData?.volumes),\n      }}\n    >\n      {children}\n    </MarketDataContext.Provider>\n  )\n}\n\nexport default Eth2xFliMarketDataProvider\n"]},"metadata":{},"sourceType":"module"}