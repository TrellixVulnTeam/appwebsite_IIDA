{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/components/ProductPage/ProductIndexComponentsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport numeral from 'numeral';\nimport styled from 'styled-components';\nimport useWallet from 'hooks/useWallet';\nimport { POLYGON_CHAIN_DATA } from 'utils/connectors';\nimport { ProductPageSection } from './ProductPageLayouts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductIndexComponentsTable = ({\n  components\n}) => {\n  _s();\n\n  const [amountToDisplay, setAmountToDisplay] = useState(5);\n\n  const showAllComponents = () => setAmountToDisplay((components === null || components === void 0 ? void 0 : components.length) || amountToDisplay);\n\n  const showDefaultComponents = () => setAmountToDisplay(5);\n\n  const {\n    chainId\n  } = useWallet();\n\n  const renderTableDisplayControls = () => {\n    if (!components) return null;\n\n    if (amountToDisplay < components.length) {\n      return /*#__PURE__*/_jsxDEV(TableControlText, {\n        onClick: showAllComponents,\n        children: [\"+\", components.length - amountToDisplay, \" More\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (components.length < 5) return null;\n    return /*#__PURE__*/_jsxDEV(TableControlText, {\n      onClick: showDefaultComponents,\n      children: \"Show Less\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (chainId && chainId === POLYGON_CHAIN_DATA.chainId && (components === undefined || components.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(ProductPageSection, {\n      title: \"Allocations\",\n      children: \"Connect wallet to Mainnet to view allocations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else if (components === undefined || components.length === 0) {\n    return /*#__PURE__*/_jsxDEV(ProductPageSection, {\n      title: \"Allocations\",\n      children: \"Connect wallet to view allocations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductPageSection, {\n    title: \"Allocations\",\n    children: [/*#__PURE__*/_jsxDEV(IndexComponentsTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledNameColumn, {\n        children: /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayOnDesktopOnly, {\n        children: /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Quantity per token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayOnDesktopOnly, {\n        children: /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Value per token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n        children: \"Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n        children: \"24hr Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), components === null || components === void 0 ? void 0 : components.slice(0, amountToDisplay).map(data => /*#__PURE__*/_jsxDEV(ComponentRow, {\n        component: data\n      }, data.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), renderTableDisplayControls()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductIndexComponentsTable, \"HorC5oAx2ADnTxr/uI2BF6li2xg=\", false, function () {\n  return [useWallet];\n});\n\n_c = ProductIndexComponentsTable;\n\nconst ComponentRow = ({\n  component\n}) => {\n  const {\n    symbol,\n    quantity,\n    percentOfSet,\n    totalPriceUsd,\n    dailyPercentChange,\n    image,\n    name\n  } = component;\n  const formattedPriceUSD = numeral(totalPriceUsd).format('$0,0.00');\n  const absPercentChange = numeral(Math.abs(parseFloat(dailyPercentChange))).format('0.00');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTokenLogo, {\n      src: image,\n      alt: `${name} Logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledNameColumn, {\n      children: /*#__PURE__*/_jsxDEV(StyledTableData, {\n        children: symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayOnDesktopOnly, {\n      children: /*#__PURE__*/_jsxDEV(StyledTableData, {\n        children: [numeral(quantity).format('0.000000'), \" \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayOnDesktopOnly, {\n      children: /*#__PURE__*/_jsxDEV(StyledTableData, {\n        children: formattedPriceUSD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableData, {\n      children: [percentOfSet, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), parseFloat(dailyPercentChange) < 0 ? /*#__PURE__*/_jsxDEV(NegativeChange, {\n      children: [absPercentChange, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PositiveChange, {\n      children: [absPercentChange, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = ComponentRow;\nconst IndexComponentsTable = styled.div`\n  display: grid;\n  grid-template-columns: [logo] 25px repeat(3, 1fr);\n  grid-column-gap: ${({\n  theme\n}) => theme.spacing[3]}px;\n  grid-row-gap: ${({\n  theme\n}) => theme.spacing[4]}px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: [logo] 25px repeat(2, 1.5fr) repeat(3, 1fr);\n  }\n`;\n_c3 = IndexComponentsTable;\nconst StyledNameColumn = styled.span`\n  font-weight: 600;\n`;\n_c4 = StyledNameColumn;\nconst StyledTableHeader = styled.p`\n  margin: 0;\n  font-size: 12px;\n`;\n_c5 = StyledTableHeader;\nconst StyledTokenLogo = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 50%;\n`;\n_c6 = StyledTokenLogo;\nconst StyledTableData = styled(StyledTableHeader)`\n  font-size: 16px;\n  line-height: 24px;\n`;\n_c7 = StyledTableData;\nconst PositiveChange = styled(StyledTableData)`\n  color: ${({\n  theme\n}) => theme.colors.green};\n`;\n_c8 = PositiveChange;\nconst NegativeChange = styled(StyledTableData)`\n  color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c9 = NegativeChange;\nconst DisplayOnDesktopOnly = styled.span`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: block;\n  }\n`;\n_c10 = DisplayOnDesktopOnly;\nconst TableControlText = styled.p`\n  text-align: center;\n  color: ${({\n  theme\n}) => theme.colors.primary.grey};\n  cursor: pointer;\n\n  :hover {\n    transition: color 0.5s;\n    color: ${({\n  theme\n}) => theme.colors.primary.main};\n  }\n`;\n_c11 = TableControlText;\nexport default ProductIndexComponentsTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"ProductIndexComponentsTable\");\n$RefreshReg$(_c2, \"ComponentRow\");\n$RefreshReg$(_c3, \"IndexComponentsTable\");\n$RefreshReg$(_c4, \"StyledNameColumn\");\n$RefreshReg$(_c5, \"StyledTableHeader\");\n$RefreshReg$(_c6, \"StyledTokenLogo\");\n$RefreshReg$(_c7, \"StyledTableData\");\n$RefreshReg$(_c8, \"PositiveChange\");\n$RefreshReg$(_c9, \"NegativeChange\");\n$RefreshReg$(_c10, \"DisplayOnDesktopOnly\");\n$RefreshReg$(_c11, \"TableControlText\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/components/ProductPage/ProductIndexComponentsTable.tsx"],"names":["React","useState","numeral","styled","useWallet","POLYGON_CHAIN_DATA","ProductPageSection","ProductIndexComponentsTable","components","amountToDisplay","setAmountToDisplay","showAllComponents","length","showDefaultComponents","chainId","renderTableDisplayControls","undefined","slice","map","data","name","ComponentRow","component","symbol","quantity","percentOfSet","totalPriceUsd","dailyPercentChange","image","formattedPriceUSD","format","absPercentChange","Math","abs","parseFloat","IndexComponentsTable","div","theme","spacing","StyledNameColumn","span","StyledTableHeader","p","StyledTokenLogo","img","StyledTableData","PositiveChange","colors","green","NegativeChange","red","DisplayOnDesktopOnly","TableControlText","primary","grey","main"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport numeral from 'numeral'\nimport styled from 'styled-components'\n\nimport { SetComponent } from 'contexts/SetComponents/SetComponent'\nimport useWallet from 'hooks/useWallet'\nimport { POLYGON_CHAIN_DATA } from 'utils/connectors'\n\nimport { ProductPageSection } from './ProductPageLayouts'\n\ninterface ProductIndexComponentsProps {\n  components?: SetComponent[]\n}\n\nconst ProductIndexComponentsTable: React.FC<ProductIndexComponentsProps> = ({\n  components,\n}) => {\n  const [amountToDisplay, setAmountToDisplay] = useState<number>(5)\n  const showAllComponents = () =>\n    setAmountToDisplay(components?.length || amountToDisplay)\n  const showDefaultComponents = () => setAmountToDisplay(5)\n  const { chainId } = useWallet()\n\n  const renderTableDisplayControls = () => {\n    if (!components) return null\n\n    if (amountToDisplay < components.length) {\n      return (\n        <TableControlText onClick={showAllComponents}>\n          +{components.length - amountToDisplay} More\n        </TableControlText>\n      )\n    }\n\n    if (components.length < 5) return null\n\n    return (\n      <TableControlText onClick={showDefaultComponents}>\n        Show Less\n      </TableControlText>\n    )\n  }\n\n  if (\n    chainId &&\n    chainId === POLYGON_CHAIN_DATA.chainId &&\n    (components === undefined || components.length === 0)\n  ) {\n    return (\n      <ProductPageSection title='Allocations'>\n        Connect wallet to Mainnet to view allocations\n      </ProductPageSection>\n    )\n  } else if (components === undefined || components.length === 0) {\n    return (\n      <ProductPageSection title='Allocations'>\n        Connect wallet to view allocations\n      </ProductPageSection>\n    )\n  }\n  return (\n    <ProductPageSection title='Allocations'>\n      <IndexComponentsTable>\n        <div>{/** empty space for logo in header */}</div>\n        <StyledNameColumn>\n          <StyledTableHeader>Name</StyledTableHeader>\n        </StyledNameColumn>\n\n        <DisplayOnDesktopOnly>\n          <StyledTableHeader>Quantity per token</StyledTableHeader>\n        </DisplayOnDesktopOnly>\n        <DisplayOnDesktopOnly>\n          <StyledTableHeader>Value per token</StyledTableHeader>\n        </DisplayOnDesktopOnly>\n\n        <StyledTableHeader>Allocation</StyledTableHeader>\n        <StyledTableHeader>24hr Change</StyledTableHeader>\n\n        {components?.slice(0, amountToDisplay).map((data) => (\n          <ComponentRow key={data.name} component={data} />\n        ))}\n      </IndexComponentsTable>\n\n      {renderTableDisplayControls()}\n    </ProductPageSection>\n  )\n}\n\ninterface ComponentRowProps {\n  component: SetComponent\n}\n\nconst ComponentRow: React.FC<ComponentRowProps> = ({ component }) => {\n  const {\n    symbol,\n    quantity,\n    percentOfSet,\n    totalPriceUsd,\n    dailyPercentChange,\n    image,\n    name,\n  } = component\n  const formattedPriceUSD = numeral(totalPriceUsd).format('$0,0.00')\n\n  const absPercentChange = numeral(\n    Math.abs(parseFloat(dailyPercentChange))\n  ).format('0.00')\n\n  return (\n    <>\n      <StyledTokenLogo src={image} alt={`${name} Logo`} />\n      <StyledNameColumn>\n        <StyledTableData>{symbol}</StyledTableData>\n      </StyledNameColumn>\n\n      <DisplayOnDesktopOnly>\n        <StyledTableData>\n          {numeral(quantity).format('0.000000')} {symbol}\n        </StyledTableData>\n      </DisplayOnDesktopOnly>\n      <DisplayOnDesktopOnly>\n        <StyledTableData>{formattedPriceUSD}</StyledTableData>\n      </DisplayOnDesktopOnly>\n\n      <StyledTableData>{percentOfSet}%</StyledTableData>\n      {parseFloat(dailyPercentChange) < 0 ? (\n        <NegativeChange>{absPercentChange}%</NegativeChange>\n      ) : (\n        <PositiveChange>{absPercentChange}%</PositiveChange>\n      )}\n    </>\n  )\n}\n\nconst IndexComponentsTable = styled.div`\n  display: grid;\n  grid-template-columns: [logo] 25px repeat(3, 1fr);\n  grid-column-gap: ${({ theme }) => theme.spacing[3]}px;\n  grid-row-gap: ${({ theme }) => theme.spacing[4]}px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: [logo] 25px repeat(2, 1.5fr) repeat(3, 1fr);\n  }\n`\n\nconst StyledNameColumn = styled.span`\n  font-weight: 600;\n`\n\nconst StyledTableHeader = styled.p`\n  margin: 0;\n  font-size: 12px;\n`\n\nconst StyledTokenLogo = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 50%;\n`\n\nconst StyledTableData = styled(StyledTableHeader)`\n  font-size: 16px;\n  line-height: 24px;\n`\n\nconst PositiveChange = styled(StyledTableData)`\n  color: ${({ theme }) => theme.colors.green};\n`\nconst NegativeChange = styled(StyledTableData)`\n  color: ${({ theme }) => theme.colors.red};\n`\n\nconst DisplayOnDesktopOnly = styled.span`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: block;\n  }\n`\n\nconst TableControlText = styled.p`\n  text-align: center;\n  color: ${({ theme }) => theme.colors.primary.grey};\n  cursor: pointer;\n\n  :hover {\n    transition: color 0.5s;\n    color: ${({ theme }) => theme.colors.primary.main};\n  }\n`\n\nexport default ProductIndexComponentsTable\n"]},"metadata":{},"sourceType":"module"}