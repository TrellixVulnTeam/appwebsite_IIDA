{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/contexts/TransactionWatcher/TransactionWatcherProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionWatcherContext, { TransactionStatusType } from './TransactionWatcherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionWatcherProvider = ({\n  children\n}) => {\n  _s();\n\n  const [transactionId, setTransactionId] = useState();\n  const [transactionStatus, setTransactionStatus] = useState(TransactionStatusType.IS_UNSTARTED);\n  return /*#__PURE__*/_jsxDEV(TransactionWatcherContext.Provider, {\n    value: {\n      transactionId,\n      transactionStatus,\n      onSetTransactionId: setTransactionId,\n      onSetTransactionStatus: setTransactionStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionWatcherProvider, \"/F3qEbOjeqaJw+NMAdiGxQat3pI=\");\n\n_c = TransactionWatcherProvider;\nexport default TransactionWatcherProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionWatcherProvider\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/contexts/TransactionWatcher/TransactionWatcherProvider.tsx"],"names":["React","useState","TransactionWatcherContext","TransactionStatusType","TransactionWatcherProvider","children","transactionId","setTransactionId","transactionStatus","setTransactionStatus","IS_UNSTARTED","onSetTransactionId","onSetTransactionStatus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,yBAAP,IACEC,qBADF,QAEO,6BAFP;;;AAIA,MAAMC,0BAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;AACA,QAAM,CAACO,iBAAD,EAAoBC,oBAApB,IACJR,QAAQ,CAAwBE,qBAAqB,CAACO,YAA9C,CADV;AAGA,sBACE,QAAC,yBAAD,CAA2B,QAA3B;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,aADK;AAELE,MAAAA,iBAFK;AAGLG,MAAAA,kBAAkB,EAAEJ,gBAHf;AAILK,MAAAA,sBAAsB,EAAEH;AAJnB,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;GAAMD,0B;;KAAAA,0B;AAmBN,eAAeA,0BAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport TransactionWatcherContext, {\n  TransactionStatusType,\n} from './TransactionWatcherContext'\n\nconst TransactionWatcherProvider: React.FC = ({ children }) => {\n  const [transactionId, setTransactionId] = useState<string>()\n  const [transactionStatus, setTransactionStatus] =\n    useState<TransactionStatusType>(TransactionStatusType.IS_UNSTARTED)\n\n  return (\n    <TransactionWatcherContext.Provider\n      value={{\n        transactionId,\n        transactionStatus,\n        onSetTransactionId: setTransactionId,\n        onSetTransactionStatus: setTransactionStatus,\n      }}\n    >\n      {children}\n    </TransactionWatcherContext.Provider>\n  )\n}\n\nexport default TransactionWatcherProvider\n"]},"metadata":{},"sourceType":"module"}