{"ast":null,"code":"import { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\nimport { LedgerConnector } from './ledgerConnector';\nconst WS_URL = process.env.REACT_APP_ETHEREUM_WS_URL;\nexport const MAINNET_CHAIN_DATA = {\n  name: 'Ethereum',\n  chainId: 1,\n  rpcUrl: 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\n  icon: 'https://raw.githubusercontent.com/sushiswap/icons/master/network/mainnet.jpg',\n  coingeckoId: 'ethereum'\n};\nexport const POLYGON_CHAIN_DATA = {\n  name: 'Polygon',\n  chainId: 137,\n  rpcUrl: 'https://rpc-mainnet.maticvigil.com/',\n  icon: 'https://raw.githubusercontent.com/sushiswap/icons/master/network/polygon.jpg',\n  coingeckoId: 'polygon-pos'\n};\n\nif (!WS_URL) {\n  throw new Error(`REACT_APP_ETHEREUM_WS_URL must be a defined environment variable`);\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42, 137]\n});\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    [MAINNET_CHAIN_DATA.chainId]: MAINNET_CHAIN_DATA.rpcUrl,\n    [POLYGON_CHAIN_DATA.chainId]: POLYGON_CHAIN_DATA.rpcUrl\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n  supportedChainIds: [1, 137]\n});\nexport const walletlink = new WalletLinkConnector({\n  url: MAINNET_CHAIN_DATA.rpcUrl,\n  appName: 'Index',\n  appLogoUrl: 'https://index-dao.s3.amazonaws.com/index_owl.png',\n  supportedChainIds: [1, 137]\n});\nexport const ledgerwallet = new LedgerConnector(MAINNET_CHAIN_DATA.chainId, MAINNET_CHAIN_DATA.rpcUrl, WS_URL);\nexport const networkConnector = new NetworkConnector({\n  urls: {\n    1: process.env.REACT_APP_ALCHEMY_API || MAINNET_CHAIN_DATA.rpcUrl\n  },\n  defaultChainId: 1\n});","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/utils/connectors.ts"],"names":["InjectedConnector","NetworkConnector","WalletConnectConnector","WalletLinkConnector","LedgerConnector","WS_URL","process","env","REACT_APP_ETHEREUM_WS_URL","MAINNET_CHAIN_DATA","name","chainId","rpcUrl","icon","coingeckoId","POLYGON_CHAIN_DATA","Error","injected","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","walletlink","url","appName","appLogoUrl","ledgerwallet","networkConnector","urls","REACT_APP_ALCHEMY_API","defaultChainId"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AAUA,OAAO,MAAMC,kBAA6B,GAAG;AAC3CC,EAAAA,IAAI,EAAE,UADqC;AAE3CC,EAAAA,OAAO,EAAE,CAFkC;AAG3CC,EAAAA,MAAM,EAAE,+DAHmC;AAI3CC,EAAAA,IAAI,EAAE,8EAJqC;AAK3CC,EAAAA,WAAW,EAAE;AAL8B,CAAtC;AAOP,OAAO,MAAMC,kBAA6B,GAAG;AAC3CL,EAAAA,IAAI,EAAE,SADqC;AAE3CC,EAAAA,OAAO,EAAE,GAFkC;AAG3CC,EAAAA,MAAM,EAAE,qCAHmC;AAI3CC,EAAAA,IAAI,EAAE,8EAJqC;AAK3CC,EAAAA,WAAW,EAAE;AAL8B,CAAtC;;AAQP,IAAI,CAACT,MAAL,EAAa;AACX,QAAM,IAAIW,KAAJ,CACH,kEADG,CAAN;AAGD;;AAED,OAAO,MAAMC,QAAQ,GAAG,IAAIjB,iBAAJ,CAAsB;AAC5CkB,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,GAAjB;AADyB,CAAtB,CAAjB;AAIP,OAAO,MAAMC,aAAa,GAAG,IAAIjB,sBAAJ,CAA2B;AACtDkB,EAAAA,GAAG,EAAE;AACH,KAACX,kBAAkB,CAACE,OAApB,GAA8BF,kBAAkB,CAACG,MAD9C;AAEH,KAACG,kBAAkB,CAACJ,OAApB,GAA8BI,kBAAkB,CAACH;AAF9C,GADiD;AAKtDS,EAAAA,MAAM,EAAE,kCAL8C;AAMtDC,EAAAA,MAAM,EAAE,IAN8C;AAOtDC,EAAAA,eAAe,EAAE,KAPqC;AAQtDL,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,GAAJ;AARmC,CAA3B,CAAtB;AAWP,OAAO,MAAMM,UAAU,GAAG,IAAIrB,mBAAJ,CAAwB;AAChDsB,EAAAA,GAAG,EAAEhB,kBAAkB,CAACG,MADwB;AAEhDc,EAAAA,OAAO,EAAE,OAFuC;AAGhDC,EAAAA,UAAU,EAAE,kDAHoC;AAIhDT,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,GAAJ;AAJ6B,CAAxB,CAAnB;AAOP,OAAO,MAAMU,YAAY,GAAG,IAAIxB,eAAJ,CAC1BK,kBAAkB,CAACE,OADO,EAE1BF,kBAAkB,CAACG,MAFO,EAG1BP,MAH0B,CAArB;AAMP,OAAO,MAAMwB,gBAAgB,GAAG,IAAI5B,gBAAJ,CAAqB;AACnD6B,EAAAA,IAAI,EAAE;AAAE,OAAGxB,OAAO,CAACC,GAAR,CAAYwB,qBAAZ,IAAqCtB,kBAAkB,CAACG;AAA7D,GAD6C;AAEnDoB,EAAAA,cAAc,EAAE;AAFmC,CAArB,CAAzB","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\n\nimport { LedgerConnector } from './ledgerConnector'\n\nconst WS_URL = process.env.REACT_APP_ETHEREUM_WS_URL\n\nexport type ChainData = {\n  name: string\n  chainId: number\n  rpcUrl: string\n  icon: string\n  coingeckoId: string\n}\n\nexport const MAINNET_CHAIN_DATA: ChainData = {\n  name: 'Ethereum',\n  chainId: 1,\n  rpcUrl: 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\n  icon: 'https://raw.githubusercontent.com/sushiswap/icons/master/network/mainnet.jpg',\n  coingeckoId: 'ethereum',\n}\nexport const POLYGON_CHAIN_DATA: ChainData = {\n  name: 'Polygon',\n  chainId: 137,\n  rpcUrl: 'https://rpc-mainnet.maticvigil.com/',\n  icon: 'https://raw.githubusercontent.com/sushiswap/icons/master/network/polygon.jpg',\n  coingeckoId: 'polygon-pos',\n}\n\nif (!WS_URL) {\n  throw new Error(\n    `REACT_APP_ETHEREUM_WS_URL must be a defined environment variable`\n  )\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42, 137],\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    [MAINNET_CHAIN_DATA.chainId]: MAINNET_CHAIN_DATA.rpcUrl,\n    [POLYGON_CHAIN_DATA.chainId]: POLYGON_CHAIN_DATA.rpcUrl,\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n  supportedChainIds: [1, 137],\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: MAINNET_CHAIN_DATA.rpcUrl,\n  appName: 'Index',\n  appLogoUrl: 'https://index-dao.s3.amazonaws.com/index_owl.png',\n  supportedChainIds: [1, 137],\n})\n\nexport const ledgerwallet = new LedgerConnector(\n  MAINNET_CHAIN_DATA.chainId,\n  MAINNET_CHAIN_DATA.rpcUrl,\n  WS_URL\n)\n\nexport const networkConnector = new NetworkConnector({\n  urls: { 1: process.env.REACT_APP_ALCHEMY_API || MAINNET_CHAIN_DATA.rpcUrl },\n  defaultChainId: 1,\n})\n"]},"metadata":{},"sourceType":"module"}