{"ast":null,"code":"'use strict';\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator['throw'](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    'throw': verb(1),\n    'return': verb(2)\n  }, typeof Symbol === 'function' && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError('Generator is already executing.');\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y['return'] : op[0] ? y['throw'] || ((t = y['return']) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    'default': mod\n  };\n};\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.TradeQuoter = exports.ZERO_EX_ADAPTER_NAME = void 0;\n\nvar js_big_decimal_1 = __importDefault(require('js-big-decimal'));\n\nvar ethers_1 = require('ethers');\n\nvar coingecko_1 = require('./coingecko');\n\nvar gasOracle_1 = require('./gasOracle');\n\nvar zeroex_1 = require('./zeroex');\n\nexports.ZERO_EX_ADAPTER_NAME = 'ZeroExApiAdapterV4';\nvar SCALE = ethers_1.BigNumber.from(10).pow(18);\n\nvar TradeQuoter = function () {\n  function TradeQuoter(zeroExApiKey) {\n    if (zeroExApiKey === void 0) {\n      zeroExApiKey = '';\n    }\n\n    this.tradeQuoteGasBuffer = 5;\n    this.feeRecipient = '0xD3D555Bb655AcBA9452bfC6D7cEa8cC7b3628C55';\n    this.feePercentage = 0;\n    this.isFirmQuote = true;\n    this.slippagePercentage = 2;\n    this.excludedSources = ['Kyber', 'Eth2Dai', 'Mesh'];\n    this.zeroExApiKey = zeroExApiKey;\n  }\n\n  TradeQuoter.prototype.generate = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var chainId, feePercentage, isFirmQuote, slippagePercentage, feeRecipient, excludedSources, exchangeAdapterName, _a, fromTokenAddress, toTokenAddress, fromAddress, amount, setOnChainDetails, fromTokenRequestAmount, _b, fromTokenAmount, fromUnits, toTokenAmount, toUnits, calldata, gas, coinGecko, coinPrices, gasOracle, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            chainId = options.chainId;\n            feePercentage = options.feePercentage || this.feePercentage;\n            isFirmQuote = options.isFirmQuote === false ? false : this.isFirmQuote;\n            slippagePercentage = options.slippagePercentage || this.slippagePercentage;\n            feeRecipient = options.feeRecipient || this.feeRecipient;\n            excludedSources = options.excludedSources || this.excludedSources;\n            exchangeAdapterName = exports.ZERO_EX_ADAPTER_NAME;\n            _a = this.sanitizeAddress(options.fromToken, options.toToken, options.fromAddress), fromTokenAddress = _a.fromTokenAddress, toTokenAddress = _a.toTokenAddress, fromAddress = _a.fromAddress;\n            amount = this.sanitizeAmount(options.rawAmount, options.fromTokenDecimals);\n            return [4, options.setToken.fetchSetDetailsAsync(fromAddress, [fromTokenAddress, toTokenAddress])];\n\n          case 1:\n            setOnChainDetails = _d.sent();\n            fromTokenRequestAmount = this.calculateFromTokenAmount(setOnChainDetails, fromTokenAddress, amount);\n            return [4, this.fetchZeroExQuote(fromTokenAddress, toTokenAddress, fromTokenRequestAmount, setOnChainDetails.manager, setOnChainDetails.totalSupply, chainId, isFirmQuote, slippagePercentage, feeRecipient, excludedSources, feePercentage)];\n\n          case 2:\n            _b = _d.sent(), fromTokenAmount = _b.fromTokenAmount, fromUnits = _b.fromUnits, toTokenAmount = _b.toTokenAmount, toUnits = _b.toUnits, calldata = _b.calldata;\n            this.validateQuoteValues(setOnChainDetails, fromTokenAddress, toTokenAddress, fromUnits, toUnits);\n            return [4, this.estimateGasCost(options.tradeModule, fromTokenAddress, fromUnits, toTokenAddress, toUnits, exchangeAdapterName, fromAddress, calldata, setOnChainDetails.manager)];\n\n          case 3:\n            gas = _d.sent();\n            coinGecko = new coingecko_1.CoinGeckoDataService(chainId);\n            return [4, coinGecko.fetchCoinPrices({\n              contractAddresses: [this.chainCurrencyAddress(chainId), fromTokenAddress, toTokenAddress],\n              vsCurrencies: [coingecko_1.USD_CURRENCY_CODE, coingecko_1.USD_CURRENCY_CODE, coingecko_1.USD_CURRENCY_CODE]\n            })];\n\n          case 4:\n            coinPrices = _d.sent();\n            if (!!options.gasPrice) return [3, 6];\n            gasOracle = new gasOracle_1.GasOracleService(chainId);\n            _c = options;\n            return [4, gasOracle.fetchGasPrice()];\n\n          case 5:\n            _c.gasPrice = _d.sent();\n            _d.label = 6;\n\n          case 6:\n            return [2, {\n              from: fromAddress,\n              fromTokenAddress: fromTokenAddress,\n              toTokenAddress: toTokenAddress,\n              exchangeAdapterName: exchangeAdapterName,\n              calldata: calldata,\n              gas: gas.toString(),\n              gasPrice: options.gasPrice.toString(),\n              slippagePercentage: this.formatAsPercentage(slippagePercentage),\n              fromTokenAmount: fromUnits.toString(),\n              toTokenAmount: toUnits.toString(),\n              display: {\n                inputAmountRaw: options.rawAmount.toString(),\n                inputAmount: amount.toString(),\n                quoteAmount: fromTokenRequestAmount.toString(),\n                fromTokenDisplayAmount: this.tokenDisplayAmount(fromTokenAmount, options.fromTokenDecimals),\n                toTokenDisplayAmount: this.tokenDisplayAmount(toTokenAmount, options.toTokenDecimals),\n                fromTokenPriceUsd: this.tokenPriceUsd(fromTokenAmount, fromTokenAddress, options.fromTokenDecimals, coinPrices),\n                toTokenPriceUsd: this.tokenPriceUsd(toTokenAmount, toTokenAddress, options.toTokenDecimals, coinPrices),\n                gasCostsUsd: this.gasCostsUsd(options.gasPrice, gas, coinPrices, chainId),\n                gasCostsChainCurrency: this.gasCostsChainCurrency(options.gasPrice, gas, chainId),\n                feePercentage: this.formatAsPercentage(feePercentage),\n                slippage: this.calculateSlippage(fromTokenAmount, toTokenAmount, fromTokenAddress, toTokenAddress, options.fromTokenDecimals, options.toTokenDecimals, coinPrices)\n              }\n            }];\n        }\n      });\n    });\n  };\n\n  TradeQuoter.prototype.sanitizeAddress = function (fromToken, toToken, fromAddress) {\n    return {\n      fromTokenAddress: fromToken.toLowerCase(),\n      toTokenAddress: toToken.toLowerCase(),\n      fromAddress: fromAddress.toLowerCase()\n    };\n  };\n\n  TradeQuoter.prototype.sanitizeAmount = function (rawAmount, decimals) {\n    return ethers_1.utils.parseUnits(rawAmount, decimals);\n  };\n\n  TradeQuoter.prototype.fetchZeroExQuote = function (fromTokenAddress, toTokenAddress, fromTokenRequestAmount, manager, setTotalSupply, chainId, isFirmQuote, slippagePercentage, feeRecipient, excludedSources, feePercentage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var zeroEx, quote, fromTokenAmount, fromTokenAmountBD, scaleBD, setTotalSupplyBD, fromUnitsBD, fromUnits, toTokenAmount, percentMultiplier, slippageAndFee, slippageToleranceBN, toTokenAmountMinusSlippage, toUnits;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            zeroEx = new zeroex_1.ZeroExTradeQuoter({\n              chainId: chainId,\n              zeroExApiKey: this.zeroExApiKey\n            });\n            return [4, zeroEx.fetchTradeQuote(fromTokenAddress, toTokenAddress, fromTokenRequestAmount, manager, isFirmQuote, slippagePercentage / 100, feeRecipient, excludedSources, feePercentage / 100)];\n\n          case 1:\n            quote = _a.sent();\n            fromTokenAmount = quote.sellAmount;\n            fromTokenAmountBD = new js_big_decimal_1.default(fromTokenAmount.toString());\n            scaleBD = new js_big_decimal_1.default(SCALE.toString());\n            setTotalSupplyBD = new js_big_decimal_1.default(setTotalSupply.toString());\n            fromUnitsBD = fromTokenAmountBD.multiply(scaleBD).divide(setTotalSupplyBD, 10).ceil();\n            fromUnits = ethers_1.BigNumber.from(fromUnitsBD.getValue());\n            toTokenAmount = quote.buyAmount;\n            percentMultiplier = 1000;\n            slippageAndFee = slippagePercentage + feePercentage;\n            slippageToleranceBN = Math.floor(percentMultiplier * this.outputSlippageTolerance(slippageAndFee));\n            toTokenAmountMinusSlippage = toTokenAmount.mul(slippageToleranceBN).div(percentMultiplier);\n            toUnits = toTokenAmountMinusSlippage.mul(SCALE).div(setTotalSupply);\n            return [2, {\n              fromTokenAmount: fromTokenAmount,\n              fromUnits: fromUnits,\n              toTokenAmount: toTokenAmount,\n              toUnits: toUnits,\n              calldata: quote.calldata\n            }];\n        }\n      });\n    });\n  };\n\n  TradeQuoter.prototype.validateQuoteValues = function (setOnChainDetails, fromTokenAddress, toTokenAddress, quoteFromRemainingUnits, quoteToUnits) {\n    var positionForFromToken = setOnChainDetails.positions.find(function (p) {\n      return p.component.toLowerCase() === fromTokenAddress.toLowerCase();\n    });\n    var currentPositionUnits = ethers_1.BigNumber.from(positionForFromToken.unit);\n    var remainingPositionUnits = currentPositionUnits.sub(quoteFromRemainingUnits);\n    var remainingPositionUnitsTooSmall = remainingPositionUnits.gt(0) && remainingPositionUnits.lt(50);\n\n    if (remainingPositionUnitsTooSmall) {\n      throw new Error('Remaining units too small, incorrectly attempting max');\n    }\n\n    var positionForToToken = setOnChainDetails.positions.find(function (p) {\n      return p.component.toLowerCase() === toTokenAddress.toLowerCase();\n    });\n    var newToPositionUnits = positionForToToken !== undefined ? positionForToToken.unit.add(quoteToUnits) : quoteToUnits;\n    var newToUnitsTooSmall = newToPositionUnits.gt(0) && newToPositionUnits.lt(50);\n\n    if (newToUnitsTooSmall) {\n      throw new Error('Receive units too small');\n    }\n  };\n\n  TradeQuoter.prototype.calculateFromTokenAmount = function (setOnChainDetails, fromTokenAddress, amount) {\n    var positionForFromToken = setOnChainDetails.positions.find(function (p) {\n      return p.component.toLowerCase() === fromTokenAddress.toLowerCase();\n    });\n\n    if (positionForFromToken === undefined) {\n      throw new Error('Invalid fromToken input');\n    }\n\n    var totalSupply = setOnChainDetails.totalSupply;\n    var impliedMaxNotional = positionForFromToken.unit.mul(totalSupply).div(SCALE);\n    var isGreaterThanMax = amount.gt(impliedMaxNotional);\n    var isMax = amount.eq(impliedMaxNotional);\n\n    if (isGreaterThanMax) {\n      throw new Error('Amount is greater than quantity of component in Set');\n    } else if (isMax) {\n      return impliedMaxNotional.toString();\n    } else {\n      var amountMulScaleOverTotalSupply = amount.mul(SCALE).div(totalSupply);\n      return amountMulScaleOverTotalSupply.mul(totalSupply).div(SCALE);\n    }\n  };\n\n  TradeQuoter.prototype.tokenDisplayAmount = function (amount, decimals) {\n    return this.normalizeTokenAmount(amount, decimals).toString();\n  };\n\n  TradeQuoter.prototype.chainCurrencyAddress = function (chainId) {\n    switch (chainId) {\n      case 1:\n        return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n\n      case 137:\n        return '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270';\n\n      default:\n        throw new Error('chainId: ' + chainId + ' is not supported');\n    }\n  };\n\n  TradeQuoter.prototype.normalizeTokenAmount = function (amount, decimals) {\n    var tokenScale = ethers_1.BigNumber.from(10).pow(decimals);\n    return ethers_1.FixedNumber.from(amount).divUnsafe(ethers_1.FixedNumber.from(tokenScale)).toUnsafeFloat();\n  };\n\n  TradeQuoter.prototype.tokenPriceUsd = function (amount, address, decimals, coinPrices) {\n    var coinPrice = coinPrices[address][coingecko_1.USD_CURRENCY_CODE];\n    var normalizedAmount = this.normalizeTokenAmount(amount, decimals) * coinPrice;\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(normalizedAmount);\n  };\n\n  TradeQuoter.prototype.formatAsPercentage = function (percentage) {\n    return percentage.toFixed(2) + '%';\n  };\n\n  TradeQuoter.prototype.totalGasCost = function (gasPrice, gas) {\n    return gasPrice / 1000000000 * gas;\n  };\n\n  TradeQuoter.prototype.gasCostsUsd = function (gasPrice, gas, coinPrices, chainId) {\n    var totalGasCost = this.totalGasCost(gasPrice, gas);\n    var chainCurrencyAddress = this.chainCurrencyAddress(chainId);\n    var coinPrice = coinPrices[chainCurrencyAddress][coingecko_1.USD_CURRENCY_CODE];\n    var cost = totalGasCost * coinPrice;\n    var options = {\n      style: 'currency',\n      currency: 'USD',\n      maximumSignificantDigits: chainId === 137 ? 4 : undefined\n    };\n    return new Intl.NumberFormat('en-US', options).format(cost);\n  };\n\n  TradeQuoter.prototype.gasCostsChainCurrency = function (gasPrice, gas, chainId) {\n    var chainCurrency = this.chainCurrency(chainId);\n    var totalGasCostText = this.totalGasCost(gasPrice, gas).toFixed(7).toString();\n    return totalGasCostText + ' ' + chainCurrency;\n  };\n\n  TradeQuoter.prototype.chainCurrency = function (chainId) {\n    switch (chainId) {\n      case 1:\n        return 'ETH';\n\n      case 137:\n        return 'MATIC';\n\n      default:\n        return '';\n    }\n  };\n\n  TradeQuoter.prototype.estimateGasCost = function (tradeModule, fromTokenAddress, fromTokenUnits, toTokenAddress, toTokenUnits, adapterName, fromAddress, calldata, managerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var gas, gasCostBuffer, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4, tradeModule.estimateGasForTradeAsync(fromAddress, adapterName, fromTokenAddress, fromTokenUnits, toTokenAddress, toTokenUnits, calldata, managerAddress)];\n\n          case 1:\n            gas = _a.sent();\n            gasCostBuffer = (100 + this.tradeQuoteGasBuffer) / 100;\n            return [2, Math.floor(gas.toNumber() * gasCostBuffer)];\n\n          case 2:\n            error_1 = _a.sent();\n            throw new Error('Unable to fetch gas cost estimate for trade' + error_1);\n\n          case 3:\n            return [2];\n        }\n      });\n    });\n  };\n\n  TradeQuoter.prototype.calculateSlippage = function (fromTokenAmount, toTokenAmount, fromTokenAddress, toTokenAddress, fromTokenDecimals, toTokenDecimals, coinPrices) {\n    var fromTokenPriceUsd = coinPrices[fromTokenAddress][coingecko_1.USD_CURRENCY_CODE];\n    var toTokenPriceUsd = coinPrices[toTokenAddress][coingecko_1.USD_CURRENCY_CODE];\n    var fromTokenTotalUsd = this.normalizeTokenAmount(fromTokenAmount, fromTokenDecimals) * fromTokenPriceUsd;\n    var toTokenTotalUsd = this.normalizeTokenAmount(toTokenAmount, toTokenDecimals) * toTokenPriceUsd;\n    var slippageRaw = (fromTokenTotalUsd - toTokenTotalUsd) / fromTokenTotalUsd;\n    return this.formatAsPercentage(slippageRaw * 100);\n  };\n\n  TradeQuoter.prototype.outputSlippageTolerance = function (slippagePercentage) {\n    return (100 - slippagePercentage) / 100;\n  };\n\n  return TradeQuoter;\n}();\n\nexports.TradeQuoter = TradeQuoter;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/node_modules/set.js/dist/src/api/utils/tradeQuoter.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","TradeQuoter","ZERO_EX_ADAPTER_NAME","js_big_decimal_1","require","ethers_1","coingecko_1","gasOracle_1","zeroex_1","SCALE","BigNumber","from","pow","zeroExApiKey","tradeQuoteGasBuffer","feeRecipient","feePercentage","isFirmQuote","slippagePercentage","excludedSources","prototype","generate","options","chainId","exchangeAdapterName","_a","fromTokenAddress","toTokenAddress","fromAddress","amount","setOnChainDetails","fromTokenRequestAmount","_b","fromTokenAmount","fromUnits","toTokenAmount","toUnits","calldata","gas","coinGecko","coinPrices","gasOracle","_c","_d","sanitizeAddress","fromToken","toToken","sanitizeAmount","rawAmount","fromTokenDecimals","setToken","fetchSetDetailsAsync","calculateFromTokenAmount","fetchZeroExQuote","manager","totalSupply","validateQuoteValues","estimateGasCost","tradeModule","CoinGeckoDataService","fetchCoinPrices","contractAddresses","chainCurrencyAddress","vsCurrencies","USD_CURRENCY_CODE","gasPrice","GasOracleService","fetchGasPrice","toString","formatAsPercentage","display","inputAmountRaw","inputAmount","quoteAmount","fromTokenDisplayAmount","tokenDisplayAmount","toTokenDisplayAmount","toTokenDecimals","fromTokenPriceUsd","tokenPriceUsd","toTokenPriceUsd","gasCostsUsd","gasCostsChainCurrency","slippage","calculateSlippage","toLowerCase","decimals","utils","parseUnits","setTotalSupply","zeroEx","quote","fromTokenAmountBD","scaleBD","setTotalSupplyBD","fromUnitsBD","percentMultiplier","slippageAndFee","slippageToleranceBN","toTokenAmountMinusSlippage","ZeroExTradeQuoter","fetchTradeQuote","sellAmount","default","multiply","divide","ceil","getValue","buyAmount","Math","floor","outputSlippageTolerance","mul","div","quoteFromRemainingUnits","quoteToUnits","positionForFromToken","positions","find","p","component","currentPositionUnits","unit","remainingPositionUnits","sub","remainingPositionUnitsTooSmall","gt","lt","Error","positionForToToken","newToPositionUnits","undefined","add","newToUnitsTooSmall","impliedMaxNotional","isGreaterThanMax","isMax","eq","amountMulScaleOverTotalSupply","normalizeTokenAmount","tokenScale","FixedNumber","divUnsafe","toUnsafeFloat","address","coinPrice","normalizedAmount","Intl","NumberFormat","style","currency","format","percentage","toFixed","totalGasCost","cost","maximumSignificantDigits","chainCurrency","totalGasCostText","fromTokenUnits","toTokenUnits","adapterName","managerAddress","gasCostBuffer","error_1","estimateGasForTradeAsync","toNumber","fromTokenTotalUsd","toTokenTotalUsd","slippageRaw"],"mappings":"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","sourcesContent":["'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=this&&this.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),'throw':verb(1),'return':verb(2)},typeof Symbol==='function'&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError('Generator is already executing.');while(_)try{if(f=1,y&&(t=op[0]&2?y['return']:op[0]?y['throw']||((t=y['return'])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.TradeQuoter=exports.ZERO_EX_ADAPTER_NAME=void 0;var js_big_decimal_1=__importDefault(require('js-big-decimal'));var ethers_1=require('ethers');var coingecko_1=require('./coingecko');var gasOracle_1=require('./gasOracle');var zeroex_1=require('./zeroex');exports.ZERO_EX_ADAPTER_NAME='ZeroExApiAdapterV4';var SCALE=ethers_1.BigNumber.from(10).pow(18);var TradeQuoter=function(){function TradeQuoter(zeroExApiKey){if(zeroExApiKey===void 0){zeroExApiKey='';}this.tradeQuoteGasBuffer=5;this.feeRecipient='0xD3D555Bb655AcBA9452bfC6D7cEa8cC7b3628C55';this.feePercentage=0;this.isFirmQuote=true;this.slippagePercentage=2;this.excludedSources=['Kyber','Eth2Dai','Mesh'];this.zeroExApiKey=zeroExApiKey;}TradeQuoter.prototype.generate=function(options){return __awaiter(this,void 0,void 0,function(){var chainId,feePercentage,isFirmQuote,slippagePercentage,feeRecipient,excludedSources,exchangeAdapterName,_a,fromTokenAddress,toTokenAddress,fromAddress,amount,setOnChainDetails,fromTokenRequestAmount,_b,fromTokenAmount,fromUnits,toTokenAmount,toUnits,calldata,gas,coinGecko,coinPrices,gasOracle,_c;return __generator(this,function(_d){switch(_d.label){case 0:chainId=options.chainId;feePercentage=options.feePercentage||this.feePercentage;isFirmQuote=options.isFirmQuote===false?false:this.isFirmQuote;slippagePercentage=options.slippagePercentage||this.slippagePercentage;feeRecipient=options.feeRecipient||this.feeRecipient;excludedSources=options.excludedSources||this.excludedSources;exchangeAdapterName=exports.ZERO_EX_ADAPTER_NAME;_a=this.sanitizeAddress(options.fromToken,options.toToken,options.fromAddress),fromTokenAddress=_a.fromTokenAddress,toTokenAddress=_a.toTokenAddress,fromAddress=_a.fromAddress;amount=this.sanitizeAmount(options.rawAmount,options.fromTokenDecimals);return[4,options.setToken.fetchSetDetailsAsync(fromAddress,[fromTokenAddress,toTokenAddress])];case 1:setOnChainDetails=_d.sent();fromTokenRequestAmount=this.calculateFromTokenAmount(setOnChainDetails,fromTokenAddress,amount);return[4,this.fetchZeroExQuote(fromTokenAddress,toTokenAddress,fromTokenRequestAmount,setOnChainDetails.manager,setOnChainDetails.totalSupply,chainId,isFirmQuote,slippagePercentage,feeRecipient,excludedSources,feePercentage)];case 2:_b=_d.sent(),fromTokenAmount=_b.fromTokenAmount,fromUnits=_b.fromUnits,toTokenAmount=_b.toTokenAmount,toUnits=_b.toUnits,calldata=_b.calldata;this.validateQuoteValues(setOnChainDetails,fromTokenAddress,toTokenAddress,fromUnits,toUnits);return[4,this.estimateGasCost(options.tradeModule,fromTokenAddress,fromUnits,toTokenAddress,toUnits,exchangeAdapterName,fromAddress,calldata,setOnChainDetails.manager)];case 3:gas=_d.sent();coinGecko=new coingecko_1.CoinGeckoDataService(chainId);return[4,coinGecko.fetchCoinPrices({contractAddresses:[this.chainCurrencyAddress(chainId),fromTokenAddress,toTokenAddress],vsCurrencies:[coingecko_1.USD_CURRENCY_CODE,coingecko_1.USD_CURRENCY_CODE,coingecko_1.USD_CURRENCY_CODE]})];case 4:coinPrices=_d.sent();if(!!options.gasPrice)return[3,6];gasOracle=new gasOracle_1.GasOracleService(chainId);_c=options;return[4,gasOracle.fetchGasPrice()];case 5:_c.gasPrice=_d.sent();_d.label=6;case 6:return[2,{from:fromAddress,fromTokenAddress:fromTokenAddress,toTokenAddress:toTokenAddress,exchangeAdapterName:exchangeAdapterName,calldata:calldata,gas:gas.toString(),gasPrice:options.gasPrice.toString(),slippagePercentage:this.formatAsPercentage(slippagePercentage),fromTokenAmount:fromUnits.toString(),toTokenAmount:toUnits.toString(),display:{inputAmountRaw:options.rawAmount.toString(),inputAmount:amount.toString(),quoteAmount:fromTokenRequestAmount.toString(),fromTokenDisplayAmount:this.tokenDisplayAmount(fromTokenAmount,options.fromTokenDecimals),toTokenDisplayAmount:this.tokenDisplayAmount(toTokenAmount,options.toTokenDecimals),fromTokenPriceUsd:this.tokenPriceUsd(fromTokenAmount,fromTokenAddress,options.fromTokenDecimals,coinPrices),toTokenPriceUsd:this.tokenPriceUsd(toTokenAmount,toTokenAddress,options.toTokenDecimals,coinPrices),gasCostsUsd:this.gasCostsUsd(options.gasPrice,gas,coinPrices,chainId),gasCostsChainCurrency:this.gasCostsChainCurrency(options.gasPrice,gas,chainId),feePercentage:this.formatAsPercentage(feePercentage),slippage:this.calculateSlippage(fromTokenAmount,toTokenAmount,fromTokenAddress,toTokenAddress,options.fromTokenDecimals,options.toTokenDecimals,coinPrices)}}];}});});};TradeQuoter.prototype.sanitizeAddress=function(fromToken,toToken,fromAddress){return{fromTokenAddress:fromToken.toLowerCase(),toTokenAddress:toToken.toLowerCase(),fromAddress:fromAddress.toLowerCase()};};TradeQuoter.prototype.sanitizeAmount=function(rawAmount,decimals){return ethers_1.utils.parseUnits(rawAmount,decimals);};TradeQuoter.prototype.fetchZeroExQuote=function(fromTokenAddress,toTokenAddress,fromTokenRequestAmount,manager,setTotalSupply,chainId,isFirmQuote,slippagePercentage,feeRecipient,excludedSources,feePercentage){return __awaiter(this,void 0,void 0,function(){var zeroEx,quote,fromTokenAmount,fromTokenAmountBD,scaleBD,setTotalSupplyBD,fromUnitsBD,fromUnits,toTokenAmount,percentMultiplier,slippageAndFee,slippageToleranceBN,toTokenAmountMinusSlippage,toUnits;return __generator(this,function(_a){switch(_a.label){case 0:zeroEx=new zeroex_1.ZeroExTradeQuoter({chainId:chainId,zeroExApiKey:this.zeroExApiKey});return[4,zeroEx.fetchTradeQuote(fromTokenAddress,toTokenAddress,fromTokenRequestAmount,manager,isFirmQuote,slippagePercentage/100,feeRecipient,excludedSources,feePercentage/100)];case 1:quote=_a.sent();fromTokenAmount=quote.sellAmount;fromTokenAmountBD=new js_big_decimal_1.default(fromTokenAmount.toString());scaleBD=new js_big_decimal_1.default(SCALE.toString());setTotalSupplyBD=new js_big_decimal_1.default(setTotalSupply.toString());fromUnitsBD=fromTokenAmountBD.multiply(scaleBD).divide(setTotalSupplyBD,10).ceil();fromUnits=ethers_1.BigNumber.from(fromUnitsBD.getValue());toTokenAmount=quote.buyAmount;percentMultiplier=1000;slippageAndFee=slippagePercentage+feePercentage;slippageToleranceBN=Math.floor(percentMultiplier*this.outputSlippageTolerance(slippageAndFee));toTokenAmountMinusSlippage=toTokenAmount.mul(slippageToleranceBN).div(percentMultiplier);toUnits=toTokenAmountMinusSlippage.mul(SCALE).div(setTotalSupply);return[2,{fromTokenAmount:fromTokenAmount,fromUnits:fromUnits,toTokenAmount:toTokenAmount,toUnits:toUnits,calldata:quote.calldata}];}});});};TradeQuoter.prototype.validateQuoteValues=function(setOnChainDetails,fromTokenAddress,toTokenAddress,quoteFromRemainingUnits,quoteToUnits){var positionForFromToken=setOnChainDetails.positions.find(function(p){return p.component.toLowerCase()===fromTokenAddress.toLowerCase();});var currentPositionUnits=ethers_1.BigNumber.from(positionForFromToken.unit);var remainingPositionUnits=currentPositionUnits.sub(quoteFromRemainingUnits);var remainingPositionUnitsTooSmall=remainingPositionUnits.gt(0)&&remainingPositionUnits.lt(50);if(remainingPositionUnitsTooSmall){throw new Error('Remaining units too small, incorrectly attempting max');}var positionForToToken=setOnChainDetails.positions.find(function(p){return p.component.toLowerCase()===toTokenAddress.toLowerCase();});var newToPositionUnits=positionForToToken!==undefined?positionForToToken.unit.add(quoteToUnits):quoteToUnits;var newToUnitsTooSmall=newToPositionUnits.gt(0)&&newToPositionUnits.lt(50);if(newToUnitsTooSmall){throw new Error('Receive units too small');}};TradeQuoter.prototype.calculateFromTokenAmount=function(setOnChainDetails,fromTokenAddress,amount){var positionForFromToken=setOnChainDetails.positions.find(function(p){return p.component.toLowerCase()===fromTokenAddress.toLowerCase();});if(positionForFromToken===undefined){throw new Error('Invalid fromToken input');}var totalSupply=setOnChainDetails.totalSupply;var impliedMaxNotional=positionForFromToken.unit.mul(totalSupply).div(SCALE);var isGreaterThanMax=amount.gt(impliedMaxNotional);var isMax=amount.eq(impliedMaxNotional);if(isGreaterThanMax){throw new Error('Amount is greater than quantity of component in Set');}else if(isMax){return impliedMaxNotional.toString();}else{var amountMulScaleOverTotalSupply=amount.mul(SCALE).div(totalSupply);return amountMulScaleOverTotalSupply.mul(totalSupply).div(SCALE);}};TradeQuoter.prototype.tokenDisplayAmount=function(amount,decimals){return this.normalizeTokenAmount(amount,decimals).toString();};TradeQuoter.prototype.chainCurrencyAddress=function(chainId){switch(chainId){case 1:return'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';case 137:return'0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270';default:throw new Error('chainId: '+chainId+' is not supported');}};TradeQuoter.prototype.normalizeTokenAmount=function(amount,decimals){var tokenScale=ethers_1.BigNumber.from(10).pow(decimals);return ethers_1.FixedNumber.from(amount).divUnsafe(ethers_1.FixedNumber.from(tokenScale)).toUnsafeFloat();};TradeQuoter.prototype.tokenPriceUsd=function(amount,address,decimals,coinPrices){var coinPrice=coinPrices[address][coingecko_1.USD_CURRENCY_CODE];var normalizedAmount=this.normalizeTokenAmount(amount,decimals)*coinPrice;return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(normalizedAmount);};TradeQuoter.prototype.formatAsPercentage=function(percentage){return percentage.toFixed(2)+'%';};TradeQuoter.prototype.totalGasCost=function(gasPrice,gas){return gasPrice/1000000000*gas;};TradeQuoter.prototype.gasCostsUsd=function(gasPrice,gas,coinPrices,chainId){var totalGasCost=this.totalGasCost(gasPrice,gas);var chainCurrencyAddress=this.chainCurrencyAddress(chainId);var coinPrice=coinPrices[chainCurrencyAddress][coingecko_1.USD_CURRENCY_CODE];var cost=totalGasCost*coinPrice;var options={style:'currency',currency:'USD',maximumSignificantDigits:chainId===137?4:undefined};return new Intl.NumberFormat('en-US',options).format(cost);};TradeQuoter.prototype.gasCostsChainCurrency=function(gasPrice,gas,chainId){var chainCurrency=this.chainCurrency(chainId);var totalGasCostText=this.totalGasCost(gasPrice,gas).toFixed(7).toString();return totalGasCostText+' '+chainCurrency;};TradeQuoter.prototype.chainCurrency=function(chainId){switch(chainId){case 1:return'ETH';case 137:return'MATIC';default:return'';}};TradeQuoter.prototype.estimateGasCost=function(tradeModule,fromTokenAddress,fromTokenUnits,toTokenAddress,toTokenUnits,adapterName,fromAddress,calldata,managerAddress){return __awaiter(this,void 0,void 0,function(){var gas,gasCostBuffer,error_1;return __generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);return[4,tradeModule.estimateGasForTradeAsync(fromAddress,adapterName,fromTokenAddress,fromTokenUnits,toTokenAddress,toTokenUnits,calldata,managerAddress)];case 1:gas=_a.sent();gasCostBuffer=(100+this.tradeQuoteGasBuffer)/100;return[2,Math.floor(gas.toNumber()*gasCostBuffer)];case 2:error_1=_a.sent();throw new Error('Unable to fetch gas cost estimate for trade'+error_1);case 3:return[2];}});});};TradeQuoter.prototype.calculateSlippage=function(fromTokenAmount,toTokenAmount,fromTokenAddress,toTokenAddress,fromTokenDecimals,toTokenDecimals,coinPrices){var fromTokenPriceUsd=coinPrices[fromTokenAddress][coingecko_1.USD_CURRENCY_CODE];var toTokenPriceUsd=coinPrices[toTokenAddress][coingecko_1.USD_CURRENCY_CODE];var fromTokenTotalUsd=this.normalizeTokenAmount(fromTokenAmount,fromTokenDecimals)*fromTokenPriceUsd;var toTokenTotalUsd=this.normalizeTokenAmount(toTokenAmount,toTokenDecimals)*toTokenPriceUsd;var slippageRaw=(fromTokenTotalUsd-toTokenTotalUsd)/fromTokenTotalUsd;return this.formatAsPercentage(slippageRaw*100);};TradeQuoter.prototype.outputSlippageTolerance=function(slippagePercentage){return(100-slippagePercentage)/100;};return TradeQuoter;}();exports.TradeQuoter=TradeQuoter;"]},"metadata":{},"sourceType":"script"}