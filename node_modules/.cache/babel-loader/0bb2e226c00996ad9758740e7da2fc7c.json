{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/index-ui-master/src/components/ProductPage/ProductMetaData.tsx\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport styled from 'styled-components';\nimport { Bitcoin2xFlexibleLeverageIndex, Ethereum2xFlexibleLeverageIndex } from 'constants/productTokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const calcNetAssetValueDivergence = ({\n  price,\n  nav\n}) => {\n  if (price <= 0 || nav <= 0) return 0;\n  return (price - nav) * 100 / nav;\n};\n\nconst ProductMetaData = ({\n  tokenData\n}) => {\n  var _tokenData$latestPric;\n\n  const formatMetric = metricValue => numeral(metricValue).format('0.00a').toString().toUpperCase();\n\n  const formatLeverageMetric = metricValue => numeral(metricValue).format('0.00').toString().toUpperCase();\n\n  const formatDivergenceMetric = metricValue => numeral(Math.abs(metricValue)).format('0.00').toString().toUpperCase();\n\n  const formatCurrentSupply = currentSupply => currentSupply ? numeral(currentSupply || '0').format('0,0') : '--';\n\n  const isFLI = tokenData.token.symbol === Ethereum2xFlexibleLeverageIndex.symbol || tokenData.token.symbol === Bitcoin2xFlexibleLeverageIndex.symbol;\n  const realLeverage = tokenData.components && tokenData.components.length > 0 ? Number(tokenData.components[0].percentOfSet || 0) / 100 : 2;\n\n  const netAssetValueReducer = (netAssetValue, component) => {\n    return netAssetValue + (parseFloat(component.totalPriceUsd) || 0);\n  };\n\n  const getNetAssetValue = () => {\n    return tokenData.components ? tokenData.components.reduce(netAssetValueReducer, 0) : 0;\n  };\n\n  const netAssetValueDivergence = calcNetAssetValueDivergence({\n    nav: getNetAssetValue(),\n    price: (_tokenData$latestPric = tokenData.latestPrice) !== null && _tokenData$latestPric !== void 0 ? _tokenData$latestPric : 0\n  });\n  const divergenceLabel = netAssetValueDivergence > 1 ? 'Premium' : 'Discount';\n  const divergenceLabelColor = netAssetValueDivergence > 1 ? 'red' : 'green';\n  if (isFLI) return /*#__PURE__*/_jsxDEV(PriceStatsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"real-leverage-label\",\n        children: \"Real Leverage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"real-leverage-value\",\n        children: [formatLeverageMetric(realLeverage), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"target-leverage-label\",\n        children: \"Target Leverage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"target-leverage-value\",\n        children: \"2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"current-supply-label\",\n        children: \"Current Supply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"current-supply-value\",\n        children: formatCurrentSupply(tokenData.currentSupply)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"net-asset-value-label\",\n        children: \"Net Asset Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"net-asset-value-value\",\n        children: [\"$\", formatMetric(getNetAssetValue())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        children: divergenceLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        color: divergenceLabelColor,\n        children: [formatDivergenceMetric(netAssetValueDivergence), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PriceStatsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"market-cap-label\",\n        children: \"Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"market-cap-value\",\n        children: [\"$\", formatMetric(tokenData.latestMarketCap || 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        \"data-cy\": \"net-asset-value-label\",\n        children: \"Net Asset Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        \"data-cy\": \"net-asset-value-value\",\n        children: [\"$\", formatMetric(getNetAssetValue())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStat, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStatTitle, {\n        children: divergenceLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStatMetric, {\n        color: divergenceLabelColor,\n        children: [formatDivergenceMetric(netAssetValueDivergence), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProductMetaData;\nconst PriceStatsContainer = styled.div`\n  display: flex;\n  padding-top: 10px;\n  @media (max-width: 767px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n_c2 = PriceStatsContainer;\nconst StyledStat = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 481px) {\n    padding-right: 15px;\n  }\n`;\n_c3 = StyledStat;\nconst StyledStatTitle = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  @media (max-width: 767px) {\n    font-size: 22px;\n  }\n`;\n_c4 = StyledStatTitle;\nconst StyledStatMetric = styled.div`\n  font-size: 18px;\n  @media (max-width: 767px) {\n    font-size: 20px;\n    padding-bottom: 10px;\n  }\n  color: ${({\n  color\n}) => color};\n`;\n_c5 = StyledStatMetric;\nexport default ProductMetaData;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ProductMetaData\");\n$RefreshReg$(_c2, \"PriceStatsContainer\");\n$RefreshReg$(_c3, \"StyledStat\");\n$RefreshReg$(_c4, \"StyledStatTitle\");\n$RefreshReg$(_c5, \"StyledStatMetric\");","map":{"version":3,"sources":["/Users/safahi/Desktop/index-ui-master/src/components/ProductPage/ProductMetaData.tsx"],"names":["React","numeral","styled","Bitcoin2xFlexibleLeverageIndex","Ethereum2xFlexibleLeverageIndex","calcNetAssetValueDivergence","price","nav","ProductMetaData","tokenData","formatMetric","metricValue","format","toString","toUpperCase","formatLeverageMetric","formatDivergenceMetric","Math","abs","formatCurrentSupply","currentSupply","isFLI","token","symbol","realLeverage","components","length","Number","percentOfSet","netAssetValueReducer","netAssetValue","component","parseFloat","totalPriceUsd","getNetAssetValue","reduce","netAssetValueDivergence","latestPrice","divergenceLabel","divergenceLabelColor","latestMarketCap","PriceStatsContainer","div","StyledStat","StyledStatTitle","StyledStatMetric","color"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { InputProps } from 'react-neu'\n\nimport numeral from 'numeral'\nimport styled from 'styled-components'\n\nimport {\n  Bitcoin2xFlexibleLeverageIndex,\n  Ethereum2xFlexibleLeverageIndex,\n} from 'constants/productTokens'\nimport { SetComponent } from 'contexts/SetComponents/SetComponent'\nimport BigNumber from 'utils/bignumber'\n\nimport { TokenDataProps } from './ProductDataUI'\n\ninterface ProductMetaDataProps extends InputProps {\n  tokenData: TokenDataProps\n}\n\nexport const calcNetAssetValueDivergence = ({\n  price,\n  nav,\n}: {\n  price: number\n  nav: number\n}): number => {\n  if (price <= 0 || nav <= 0) return 0\n  return ((price - nav) * 100) / nav\n}\n\nconst ProductMetaData: React.FC<ProductMetaDataProps> = ({ tokenData }) => {\n  const formatMetric = (metricValue: number) =>\n    numeral(metricValue).format('0.00a').toString().toUpperCase()\n  const formatLeverageMetric = (metricValue: number) =>\n    numeral(metricValue).format('0.00').toString().toUpperCase()\n  const formatDivergenceMetric = (metricValue: number) =>\n    numeral(Math.abs(metricValue)).format('0.00').toString().toUpperCase()\n  const formatCurrentSupply = (currentSupply: BigNumber | undefined) =>\n    currentSupply ? numeral(currentSupply || '0').format('0,0') : '--'\n\n  const isFLI =\n    tokenData.token.symbol === Ethereum2xFlexibleLeverageIndex.symbol ||\n    tokenData.token.symbol === Bitcoin2xFlexibleLeverageIndex.symbol\n\n  const realLeverage =\n    tokenData.components && tokenData.components.length > 0\n      ? Number(tokenData.components[0].percentOfSet || 0) / 100\n      : 2\n\n  const netAssetValueReducer = (\n    netAssetValue: number,\n    component: SetComponent\n  ): number => {\n    return netAssetValue + (parseFloat(component.totalPriceUsd) || 0)\n  }\n\n  const getNetAssetValue = () => {\n    return tokenData.components\n      ? tokenData.components.reduce(netAssetValueReducer, 0)\n      : 0\n  }\n\n  const netAssetValueDivergence = calcNetAssetValueDivergence({\n    nav: getNetAssetValue(),\n    price: tokenData.latestPrice ?? 0,\n  })\n\n  const divergenceLabel = netAssetValueDivergence > 1 ? 'Premium' : 'Discount'\n  const divergenceLabelColor = netAssetValueDivergence > 1 ? 'red' : 'green'\n\n  if (isFLI)\n    return (\n      <PriceStatsContainer>\n        <StyledStat>\n          <StyledStatTitle data-cy='real-leverage-label'>\n            Real Leverage\n          </StyledStatTitle>\n          <StyledStatMetric data-cy='real-leverage-value'>\n            {formatLeverageMetric(realLeverage)}x\n          </StyledStatMetric>\n        </StyledStat>\n        <StyledStat>\n          <StyledStatTitle data-cy='target-leverage-label'>\n            Target Leverage\n          </StyledStatTitle>\n          <StyledStatMetric data-cy='target-leverage-value'>\n            2x\n          </StyledStatMetric>\n        </StyledStat>\n        <StyledStat>\n          <StyledStatTitle data-cy='current-supply-label'>\n            Current Supply\n          </StyledStatTitle>\n          <StyledStatMetric data-cy='current-supply-value'>\n            {formatCurrentSupply(tokenData.currentSupply)}\n          </StyledStatMetric>\n        </StyledStat>\n        <StyledStat>\n          <StyledStatTitle data-cy='net-asset-value-label'>\n            Net Asset Value\n          </StyledStatTitle>\n          <StyledStatMetric data-cy='net-asset-value-value'>\n            ${formatMetric(getNetAssetValue())}\n          </StyledStatMetric>\n        </StyledStat>\n        <StyledStat>\n          <StyledStatTitle>{divergenceLabel}</StyledStatTitle>\n          <StyledStatMetric color={divergenceLabelColor}>\n            {formatDivergenceMetric(netAssetValueDivergence)}%\n          </StyledStatMetric>\n        </StyledStat>\n      </PriceStatsContainer>\n    )\n  return (\n    <PriceStatsContainer>\n      <StyledStat>\n        <StyledStatTitle data-cy='market-cap-label'>Market Cap</StyledStatTitle>\n        <StyledStatMetric data-cy='market-cap-value'>\n          ${formatMetric(tokenData.latestMarketCap || 0)}\n        </StyledStatMetric>\n      </StyledStat>\n      <StyledStat>\n        <StyledStatTitle data-cy='net-asset-value-label'>\n          Net Asset Value\n        </StyledStatTitle>\n        <StyledStatMetric data-cy='net-asset-value-value'>\n          ${formatMetric(getNetAssetValue())}\n        </StyledStatMetric>\n      </StyledStat>\n      <StyledStat>\n        <StyledStatTitle>{divergenceLabel}</StyledStatTitle>\n        <StyledStatMetric color={divergenceLabelColor}>\n          {formatDivergenceMetric(netAssetValueDivergence)}%\n        </StyledStatMetric>\n      </StyledStat>\n    </PriceStatsContainer>\n  )\n}\n\nconst PriceStatsContainer = styled.div`\n  display: flex;\n  padding-top: 10px;\n  @media (max-width: 767px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`\nconst StyledStat = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 481px) {\n    padding-right: 15px;\n  }\n`\nconst StyledStatTitle = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  @media (max-width: 767px) {\n    font-size: 22px;\n  }\n`\nconst StyledStatMetric = styled.div`\n  font-size: 18px;\n  @media (max-width: 767px) {\n    font-size: 20px;\n    padding-bottom: 10px;\n  }\n  color: ${({ color }) => color};\n`\n\nexport default ProductMetaData\n"]},"metadata":{},"sourceType":"module"}