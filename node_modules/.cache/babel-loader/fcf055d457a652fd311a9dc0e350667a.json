{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/views/Farm/components/Stake/V3Farm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Card, CardContent, Spacer } from 'react-neu';\nimport styled from 'styled-components';\nimport Web3 from 'web3';\nimport indexToken from 'assets/index-token.png';\nimport Split from 'components/Split';\nimport { indexTokenAddress } from 'constants/ethContractAddresses';\nimport useMediaQuery from 'hooks/useMediaQuery';\nimport useTransactionWatcher from 'hooks/useTransactionWatcher';\nimport useV3Farming from 'hooks/useV3Farming';\nimport useWallet from 'hooks/useWallet';\nimport V3StakeModal from './components/V3StakeModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Stake = props => {\n  _s();\n\n  const {\n    isMobile\n  } = useMediaQuery();\n  const {\n    status,\n    account,\n    ethereum\n  } = useWallet();\n  const {\n    onDeposit,\n    onWithdraw,\n    onClaimAccrued,\n    getAllDepositedTokens,\n    getAccruedRewardsAmount,\n    getAllPendingRewardsAmount,\n    getValidIds\n  } = useV3Farming();\n  const {\n    transactionStatus\n  } = useTransactionWatcher();\n  const [stakeModalIsOpen, setStakeModalIsOpen] = useState(false);\n  const [accruedRewards, setAccruedRewards] = useState('0');\n  const [allPendingRewards, setAllPendingRewards] = useState('0');\n  const [validNfts, setValidNfts] = useState([]);\n  const [depositedNfts, setDepositedNfts] = useState([]);\n  const handleDismissStakeModal = useCallback(() => {\n    setStakeModalIsOpen(false);\n  }, [setStakeModalIsOpen]);\n  const handleOnStake = useCallback((nftId, farm) => {\n    onDeposit(nftId, farm);\n    handleDismissStakeModal();\n  }, [handleDismissStakeModal, onDeposit]);\n  const handleOnUnstake = useCallback(nftId => {\n    onWithdraw(nftId, props.farm);\n  }, [onWithdraw, props.farm]);\n  const handleStakeClick = useCallback(() => {\n    setStakeModalIsOpen(true);\n  }, [setStakeModalIsOpen]);\n  const handleClaimAccruedClick = useCallback(() => {\n    if (!indexTokenAddress) return;\n    onClaimAccrued(indexTokenAddress);\n  }, [onClaimAccrued]);\n  useEffect(() => {\n    if (!indexTokenAddress) return;\n    getAccruedRewardsAmount(indexTokenAddress).then(amount => {\n      setAccruedRewards(parseFloat(Web3.utils.fromWei((amount === null || amount === void 0 ? void 0 : amount.toString()) || '0')).toFixed(5));\n    });\n  }, [account, status, transactionStatus, getAccruedRewardsAmount]);\n  useEffect(() => {\n    getAllPendingRewardsAmount(props.farm).then(amount => {\n      setAllPendingRewards(parseFloat(Web3.utils.fromWei((amount === null || amount === void 0 ? void 0 : amount.toString()) || '0')).toFixed(5));\n    });\n  }, [account, status, transactionStatus, getAllPendingRewardsAmount, props.farm]);\n  useEffect(() => {\n    getValidIds(props.farm).then(idList => {\n      setValidNfts(idList || []);\n    });\n  }, [account, status, transactionStatus, getValidIds, props.farm]);\n  useEffect(() => {\n    getAllDepositedTokens(props.farm).then(idList => {\n      setDepositedNfts(idList || []);\n    });\n  }, [account, status, transactionStatus, getAllDepositedTokens, props.farm]);\n  const StakeButton = useMemo(() => {\n    if (status !== 'connected') {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        full: true,\n        text: \"Stake & Unstake LP Tokens\",\n        variant: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      full: true,\n      onClick: handleStakeClick,\n      text: \"Stake & Unstake LP Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }, [status, handleStakeClick]);\n  const ClaimAccruedButton = useMemo(() => {\n    if (status !== 'connected' || accruedRewards === '0.00000') {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        full: true,\n        text: \"Claim Accrued Rewards\",\n        variant: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      full: true,\n      onClick: handleClaimAccruedClick,\n      text: \"Claim Accrued Rewards\",\n      variant: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }, [status, handleClaimAccruedClick, accruedRewards]);\n\n  const lpTokenIcons = /*#__PURE__*/_jsxDEV(StyledLpTokenWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLpTokenImage, {\n      alt: \"ETH Icon\",\n      src: \"https://s3.amazonaws.com/set-core/img/coin-icons/eth.svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLpTokenImage, {\n      alt: props.farm.img.alt,\n      src: props.farm.img.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n\n  const activeFarmDates = () => {\n    const latestFarmIndex = props.farm.farms.length - 1;\n    return 'Active ' + props.farm.farms[latestFarmIndex].dateText;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(StyledCardTitleWrapper, {\n          children: [lpTokenIcons, /*#__PURE__*/_jsxDEV(Spacer, {\n            size: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledLmTitle, {\n            children: [/*#__PURE__*/_jsxDEV(StyledCardTitle, {\n              children: [\"Uniswap V3 \", props.farm.poolLabel, \" Liquidity Program\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledCardSubtitle, {\n              children: activeFarmDates()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledFarmTokensAndApyWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Split, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(StyledFarmText, {\n                children: depositedNfts.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledSectionLabel, {\n                children: \"Staked Uniswap V3 NFTs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(StyledFarmText, {\n                children: [allPendingRewards, /*#__PURE__*/_jsxDEV(StyledTokenIcon, {\n                  src: indexToken,\n                  alt: \"Index token\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledSectionLabel, {\n                children: \"Pending Rewards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(StyledFarmText, {\n                children: [accruedRewards, /*#__PURE__*/_jsxDEV(StyledTokenIcon, {\n                  src: indexToken,\n                  alt: \"Index token\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledSectionLabel, {\n                children: \"Accrued Rewards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n        isMobile: isMobile,\n        children: [StakeButton, /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), ClaimAccruedButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(V3StakeModal, {\n      isOpen: stakeModalIsOpen,\n      availableNftIds: validNfts,\n      depositedNftIds: depositedNfts,\n      farm: props.farm,\n      provider: ethereum,\n      accruedRewards: accruedRewards,\n      onDismiss: handleDismissStakeModal,\n      onStake: handleOnStake,\n      onUnstake: handleOnUnstake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Stake, \"ghV+D5nKRyqi0Pm/d7OotEJDDwg=\", false, function () {\n  return [useMediaQuery, useWallet, useV3Farming, useTransactionWatcher];\n});\n\n_c = Stake;\nconst StyledTokenIcon = styled.img`\n  height: 20px;\n  margin-left: 10px;\n`;\n_c2 = StyledTokenIcon;\nconst StyledCardTitle = styled.span`\n  font-weight: 600;\n  font-size: 28px;\n`;\n_c3 = StyledCardTitle;\nconst StyledCardSubtitle = styled.span`\n  color: ${props => props.theme.colors.grey[500]};\n  font-weight: 600;\n  font-size: 18px;\n`;\n_c4 = StyledCardSubtitle;\nconst StyledCardTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  flex-wrap: wrap;\n  font-weight: 600;\n  font-size: 24px;\n`;\n_c5 = StyledCardTitleWrapper;\nconst StyledLmTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 24px;\n`;\n_c6 = StyledLmTitle;\nconst StyledFarmTokensAndApyWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c7 = StyledFarmTokensAndApyWrapper;\nconst StyledFarmText = styled.span`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  font-size: 24px;\n`;\n_c8 = StyledFarmText;\nconst StyledSectionLabel = styled.span`\n  color: ${props => props.theme.colors.grey[500]};\n  font-size: 16px;\n`;\n_c9 = StyledSectionLabel;\nconst StyledCardActions = styled.div`\n  display: flex;\n  flex-wrap: ${props => props.isMobile ? 'wrap' : 'no-wrap'};\n  padding: 30px;\n  padding-top: 0px;\n`;\n_c10 = StyledCardActions;\nconst StyledLpTokenWrapper = styled.div`\n  margin-left: 10px;\n`;\n_c11 = StyledLpTokenWrapper;\nconst StyledLpTokenImage = styled.img`\n  height: 50px;\n  margin-left: -10px;\n`;\n_c12 = StyledLpTokenImage;\nexport default Stake;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Stake\");\n$RefreshReg$(_c2, \"StyledTokenIcon\");\n$RefreshReg$(_c3, \"StyledCardTitle\");\n$RefreshReg$(_c4, \"StyledCardSubtitle\");\n$RefreshReg$(_c5, \"StyledCardTitleWrapper\");\n$RefreshReg$(_c6, \"StyledLmTitle\");\n$RefreshReg$(_c7, \"StyledFarmTokensAndApyWrapper\");\n$RefreshReg$(_c8, \"StyledFarmText\");\n$RefreshReg$(_c9, \"StyledSectionLabel\");\n$RefreshReg$(_c10, \"StyledCardActions\");\n$RefreshReg$(_c11, \"StyledLpTokenWrapper\");\n$RefreshReg$(_c12, \"StyledLpTokenImage\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/views/Farm/components/Stake/V3Farm.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","Button","Card","CardContent","Spacer","styled","Web3","indexToken","Split","indexTokenAddress","useMediaQuery","useTransactionWatcher","useV3Farming","useWallet","V3StakeModal","Stake","props","isMobile","status","account","ethereum","onDeposit","onWithdraw","onClaimAccrued","getAllDepositedTokens","getAccruedRewardsAmount","getAllPendingRewardsAmount","getValidIds","transactionStatus","stakeModalIsOpen","setStakeModalIsOpen","accruedRewards","setAccruedRewards","allPendingRewards","setAllPendingRewards","validNfts","setValidNfts","depositedNfts","setDepositedNfts","handleDismissStakeModal","handleOnStake","nftId","farm","handleOnUnstake","handleStakeClick","handleClaimAccruedClick","then","amount","parseFloat","utils","fromWei","toString","toFixed","idList","StakeButton","ClaimAccruedButton","lpTokenIcons","img","alt","src","activeFarmDates","latestFarmIndex","farms","length","dateText","poolLabel","StyledTokenIcon","StyledCardTitle","span","StyledCardSubtitle","theme","colors","grey","StyledCardTitleWrapper","div","StyledLmTitle","StyledFarmTokensAndApyWrapper","StyledFarmText","StyledSectionLabel","StyledCardActions","StyledLpTokenWrapper","StyledLpTokenImage"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport { Button, Card, CardContent, Spacer } from 'react-neu'\n\nimport styled from 'styled-components'\nimport Web3 from 'web3'\n\nimport indexToken from 'assets/index-token.png'\nimport Split from 'components/Split'\nimport { indexTokenAddress } from 'constants/ethContractAddresses'\nimport { V3Farm } from 'constants/v3Farms'\nimport useMediaQuery from 'hooks/useMediaQuery'\nimport useTransactionWatcher from 'hooks/useTransactionWatcher'\nimport useV3Farming from 'hooks/useV3Farming'\nimport useWallet from 'hooks/useWallet'\n\nimport V3StakeModal from './components/V3StakeModal'\n\nconst Stake = (props: { farm: V3Farm }) => {\n  const { isMobile } = useMediaQuery()\n  const { status, account, ethereum } = useWallet()\n  const {\n    onDeposit,\n    onWithdraw,\n    onClaimAccrued,\n    getAllDepositedTokens,\n    getAccruedRewardsAmount,\n    getAllPendingRewardsAmount,\n    getValidIds,\n  } = useV3Farming()\n\n  const { transactionStatus } = useTransactionWatcher()\n\n  const [stakeModalIsOpen, setStakeModalIsOpen] = useState(false)\n  const [accruedRewards, setAccruedRewards] = useState('0')\n  const [allPendingRewards, setAllPendingRewards] = useState('0')\n  const [validNfts, setValidNfts] = useState<number[]>([])\n  const [depositedNfts, setDepositedNfts] = useState<number[]>([])\n\n  const handleDismissStakeModal = useCallback(() => {\n    setStakeModalIsOpen(false)\n  }, [setStakeModalIsOpen])\n\n  const handleOnStake = useCallback(\n    (nftId: number, farm: V3Farm) => {\n      onDeposit(nftId, farm)\n      handleDismissStakeModal()\n    },\n    [handleDismissStakeModal, onDeposit]\n  )\n\n  const handleOnUnstake = useCallback(\n    (nftId: number) => {\n      onWithdraw(nftId, props.farm)\n    },\n    [onWithdraw, props.farm]\n  )\n\n  const handleStakeClick = useCallback(() => {\n    setStakeModalIsOpen(true)\n  }, [setStakeModalIsOpen])\n\n  const handleClaimAccruedClick = useCallback(() => {\n    if (!indexTokenAddress) return\n\n    onClaimAccrued(indexTokenAddress)\n  }, [onClaimAccrued])\n\n  useEffect(() => {\n    if (!indexTokenAddress) return\n\n    getAccruedRewardsAmount(indexTokenAddress).then((amount) => {\n      setAccruedRewards(\n        parseFloat(Web3.utils.fromWei(amount?.toString() || '0')).toFixed(5)\n      )\n    })\n  }, [account, status, transactionStatus, getAccruedRewardsAmount])\n\n  useEffect(() => {\n    getAllPendingRewardsAmount(props.farm).then((amount) => {\n      setAllPendingRewards(\n        parseFloat(Web3.utils.fromWei(amount?.toString() || '0')).toFixed(5)\n      )\n    })\n  }, [\n    account,\n    status,\n    transactionStatus,\n    getAllPendingRewardsAmount,\n    props.farm,\n  ])\n\n  useEffect(() => {\n    getValidIds(props.farm).then((idList) => {\n      setValidNfts(idList || [])\n    })\n  }, [account, status, transactionStatus, getValidIds, props.farm])\n\n  useEffect(() => {\n    getAllDepositedTokens(props.farm).then((idList) => {\n      setDepositedNfts(idList || [])\n    })\n  }, [account, status, transactionStatus, getAllDepositedTokens, props.farm])\n\n  const StakeButton = useMemo(() => {\n    if (status !== 'connected') {\n      return (\n        <Button\n          disabled\n          full\n          text='Stake & Unstake LP Tokens'\n          variant='secondary'\n        />\n      )\n    }\n    return (\n      <Button\n        full\n        onClick={handleStakeClick}\n        text='Stake & Unstake LP Tokens'\n      />\n    )\n  }, [status, handleStakeClick])\n\n  const ClaimAccruedButton = useMemo(() => {\n    if (status !== 'connected' || accruedRewards === '0.00000') {\n      return (\n        <Button\n          disabled\n          full\n          text='Claim Accrued Rewards'\n          variant='secondary'\n        />\n      )\n    }\n\n    return (\n      <Button\n        full\n        onClick={handleClaimAccruedClick}\n        text='Claim Accrued Rewards'\n        variant='secondary'\n      />\n    )\n  }, [status, handleClaimAccruedClick, accruedRewards])\n\n  const lpTokenIcons = (\n    <StyledLpTokenWrapper>\n      <StyledLpTokenImage\n        alt='ETH Icon'\n        src='https://s3.amazonaws.com/set-core/img/coin-icons/eth.svg'\n      />\n      <StyledLpTokenImage alt={props.farm.img.alt} src={props.farm.img.src} />\n    </StyledLpTokenWrapper>\n  )\n\n  const activeFarmDates = () => {\n    const latestFarmIndex = props.farm.farms.length - 1\n    return 'Active ' + props.farm.farms[latestFarmIndex].dateText\n  }\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <StyledCardTitleWrapper>\n            {lpTokenIcons}\n            <Spacer size='md' />\n            <StyledLmTitle>\n              <StyledCardTitle>\n                Uniswap V3 {props.farm.poolLabel} Liquidity Program\n              </StyledCardTitle>\n              <Spacer size='sm' />\n              <StyledCardSubtitle>{activeFarmDates()}</StyledCardSubtitle>\n            </StyledLmTitle>\n          </StyledCardTitleWrapper>\n          <Spacer />\n\n          <StyledFarmTokensAndApyWrapper>\n            <Split>\n              <div>\n                <StyledFarmText>{depositedNfts.length}</StyledFarmText>\n                <StyledSectionLabel>Staked Uniswap V3 NFTs</StyledSectionLabel>\n              </div>\n              <div>\n                <StyledFarmText>\n                  {allPendingRewards}\n                  <StyledTokenIcon src={indexToken} alt='Index token' />\n                </StyledFarmText>\n                <StyledSectionLabel>Pending Rewards</StyledSectionLabel>\n              </div>\n\n              <div>\n                <StyledFarmText>\n                  {accruedRewards}\n                  <StyledTokenIcon src={indexToken} alt='Index token' />\n                </StyledFarmText>\n                <StyledSectionLabel>Accrued Rewards</StyledSectionLabel>\n              </div>\n            </Split>\n          </StyledFarmTokensAndApyWrapper>\n        </CardContent>\n        <StyledCardActions isMobile={isMobile}>\n          {StakeButton}\n          <Spacer />\n          {ClaimAccruedButton}\n        </StyledCardActions>\n      </Card>\n      <V3StakeModal\n        isOpen={stakeModalIsOpen}\n        availableNftIds={validNfts}\n        depositedNftIds={depositedNfts}\n        farm={props.farm}\n        provider={ethereum}\n        accruedRewards={accruedRewards}\n        onDismiss={handleDismissStakeModal}\n        onStake={handleOnStake}\n        onUnstake={handleOnUnstake}\n      />\n    </>\n  )\n}\n\nconst StyledTokenIcon = styled.img`\n  height: 20px;\n  margin-left: 10px;\n`\n\nconst StyledCardTitle = styled.span`\n  font-weight: 600;\n  font-size: 28px;\n`\n\nconst StyledCardSubtitle = styled.span`\n  color: ${(props) => props.theme.colors.grey[500]};\n  font-weight: 600;\n  font-size: 18px;\n`\n\nconst StyledCardTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  flex-wrap: wrap;\n  font-weight: 600;\n  font-size: 24px;\n`\n\nconst StyledLmTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 24px;\n`\n\nconst StyledFarmTokensAndApyWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst StyledFarmText = styled.span`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  font-size: 24px;\n`\n\nconst StyledSectionLabel = styled.span`\n  color: ${(props) => props.theme.colors.grey[500]};\n  font-size: 16px;\n`\n\ninterface StyledCardActionProps {\n  isMobile: boolean\n}\n\nconst StyledCardActions = styled.div<StyledCardActionProps>`\n  display: flex;\n  flex-wrap: ${(props) => (props.isMobile ? 'wrap' : 'no-wrap')};\n  padding: 30px;\n  padding-top: 0px;\n`\n\nconst StyledLpTokenWrapper = styled.div`\n  margin-left: 10px;\n`\n\nconst StyledLpTokenImage = styled.img`\n  height: 50px;\n  margin-left: -10px;\n`\n\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}